{"version":3,"sources":["webpack:///detail.umd-es2015.min.js","webpack:///webpack/bootstrap 9bd9c2caf6e57fc152b5","webpack:///./src/scripts/detail.js","webpack:///./~/@redsift/sift-sdk-web/dist/js/sift-sdk.umd-es2015.js","webpack:///./~/console-browserify/index.js","webpack:///./~/util/util.js","webpack:///./~/process/browser.js","webpack:///./~/util/support/isBufferBrowser.js","webpack:///./~/util/~/inherits/inherits_browser.js","webpack:///./~/assert/assert.js","webpack:///./~/date-now/index.js","webpack:///./~/chess.js/chess.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","defineProperty","_createClass","defineProperties","target","props","i","length","descriptor","key","protoProps","staticProps","_siftSdkWeb","_chess","_chess2","DetailView","_SiftView","this","_this","getPrototypeOf","forEach","method","bind","controller","subscribe","recalc","game","plannedMove","document","getElementsByClassName","resetButton","board","ChessBoard","draggable","dropOffBoard","onDragStart","onDrop","onSnapEnd","onclick","resetPosition","got","updateView","data","position","startPosition","load","innerText","_","piece","game_over","indexOf","turn","from","to","move","promotion","san","fen","SiftView","registerSiftView","window","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","console","global","factory","createCommonjsModule","fn","opCreateDb","dbInfo","logger","trace","dbs","type","msg","treo","accountGuid","_getVersionedTreoSchema","MSG_DB_VERSIONED_SCHEMA","siftGuid","Error","schema","_getTreoSchema","addStore","db","SYNC_DB_SCHEMA","clientName","CLIENT_DB_SCHEMA","opDel","params","bucket","Promise","reject","keys","resolve","EMAIL_BUCKETS","map","k","_batchDelete","opGet","_findIn","then","result","r","split","opGetAll","_getAll","index","range","opGetAllKeys","opGetIndex","opGetIndexKeys","opGetWithIndex","_getWithIndexRange","opPut","raw","kvs","warn","kv","_batchPut","stores","sift","version","os","name","keypath","indexes","idx","addIndex","unique","versions","drop","dropStore","dropIndex","transaction","err","tr","store","objectStore","current","next","req","currentKey","delete","onerror","onsuccess","onabort","oncomplete","count","put","found","iterator","cursor","ki","primaryKey","done","continue","push","undefined","sKeys","slice","sort","cmp","loadValue","opts","siftView","log","createSiftView","instanceMethods","_create","createSiftController","SiftController","registerSiftController","siftController","createEmailClientController","EmailClientController","registerEmailClientController","emailClientController","Base","methods","Creature","init","_proxy","_registerMessageListeners","this$1","onmessage","e","_emailStats","stats","onstats","_getThreadRowDisplayInfo","trdis","tris","thread","list","loadThreadListView","supportedTemplates","postMessage","Observable","_observers","topic","observer","_op","unsubscribe","unsubscribeAll","publish","message","op","Array","isArray","t","_sub","_unsub","splice","_pub","_resizeHandler","parent","addEventListener","EmailClient","proxy","goto","_postMessage","close","SiftStorage","_storage","storage","get","d","getIndexKeys","getIndex","getWithIndex","getAllKeys","getAll","getUser","putUser","delUser","commonjsGlobal","loglevel","root","definition","realMethod","methodName","undefinedType","bindMethod","noop","Function","apply","arguments","enableLoggingWhenConsoleArrives","level","loggerName","replaceLoggingMethods","logMethods","methodFactory","defaultMethodFactory","Logger","defaultLevel","persistLevelIfPossible","levelNum","levelName","toUpperCase","localStorage","storageKey","ignore","cookie","encodeURIComponent","getPersistedLevel","storedLevel","location","exec","levels","currentLevel","TRACE","DEBUG","INFO","WARN","ERROR","SILENT","getLevel","setLevel","persist","setDefaultLevel","enableAll","disableAll","initialLevel","defaultLogger","_loggersByName","getLogger","_log","noConflict","loglevel$1","index$2","toString","x","require$$0$2","index$1","IDBKeyRange","webkitIDBKeyRange","_isPlainObj2","only","val","lowerBound","upperBound","y","pattern","join","bound","_isPlainObj","require$$0$1","idbIndex","Index","field","multi","multiEntry","parseRange","cb","isUnique","indexName","require$$0","index$3","nodeType","valueOf","require$$2","idbStore","Store","keyPath","increment","autoIncretement","del","clear","batch","vals","currentVal","all","openCursor","require$$1","schema$1","Schema","_stores","_current","_versions","getVersion","dropStores","dropIndexes","getStore","callback","v","a","b","versionSchema","oldVersion","s","options","autoIncrement","createObjectStore","deleteObjectStore","createIndex","deleteIndex","require$$2$1","Treo","status","origin","onupgradeneeded","storeName","indexedDB","_indexedDB","msIndexedDB","mozIndexedDB","webkitIndexedDB","use","deleteDatabase","getInstance","queue","that","open","onblocked","onversionchange","_siftGuid","WeakMap","_dbs","Storage","ll","_logger","set","view","emailclient","_init","dbSchema","_guid","_account","_terminate","_postCallback","_result","user","guid","sizeClass","_loadView","loadView","error","html","catch","_storageUpdated","_notifyController","_emailComposer","info","time","label","times","now","timeEnd","duration","util","format","stack","dir","object","inspect","consoleAssert","expression","arr","assert","ok","functions","tuple","f","process","ctx","seen","stylize","stylizeNoColor","depth","colors","isBoolean","showHidden","_extend","isUndefined","customInspect","stylizeWithColor","formatValue","str","styleType","style","styles","arrayToHash","array","hash","recurseTimes","isFunction","ret","isString","primitive","formatPrimitive","visibleKeys","getOwnPropertyNames","isError","formatError","isRegExp","RegExp","isDate","Date","base","braces","n","toUTCString","output","formatArray","formatProperty","pop","reduceToSingleString","simple","JSON","stringify","replace","isNumber","isNull","l","hasOwnProperty","String","match","desc","getOwnPropertyDescriptor","line","substr","numLinesEst","reduce","prev","cur","ar","arg","isNullOrUndefined","isSymbol","re","isObject","objectToString","isPrimitive","o","pad","timestamp","getHours","getMinutes","getSeconds","getDate","months","getMonth","prop","formatRegExp","objects","args","len","Number","deprecate","deprecated","warned","throwDeprecation","traceDeprecation","noDeprecation","debugEnviron","debugs","debuglog","env","NODE_DEBUG","test","pid","bold","italic","underline","inverse","white","grey","black","blue","cyan","green","magenta","red","yellow","special","number","boolean","null","string","date","regexp","isBuffer","inherits","add","defaultSetTimout","defaultClearTimeout","runTimeout","fun","cachedSetTimeout","setTimeout","runClearTimeout","marker","cachedClearTimeout","clearTimeout","cleanUpNextTick","draining","currentQueue","concat","queueIndex","drainQueue","timeout","run","Item","nextTick","title","browser","argv","on","addListener","once","off","removeListener","removeAllListeners","emit","binding","cwd","chdir","umask","copy","fill","readUInt8","ctor","superCtor","super_","TempCtor","compare","Math","min","Buffer","_isBuffer","pToString","isView","arrbuf","ArrayBuffer","DataView","buffer","getName","func","functionsHaveNames","regex","truncate","something","rawname","getMessage","actual","operator","expected","fail","stackStartFunction","AssertionError","_deepEqual","strict","memos","getTime","source","multiline","lastIndex","ignoreCase","Float32Array","Float64Array","Uint8Array","actualIndex","objEquiv","isArguments","actualVisitedObjects","aIsArgs","bIsArgs","pSlice","ka","objectKeys","kb","notDeepStrictEqual","expectedException","isPrototypeOf","_tryBlock","block","_throws","shouldThrow","userProvidedMessage","isUnwantedException","isUnexpectedException","hasOwn","generatedMessage","captureStackTrace","out","fn_name","next_line","substring","equal","notEqual","deepEqual","deepStrictEqual","notDeepEqual","strictEqual","notStrictEqual","throws","doesNotThrow","ifError","Chess","kings","w","EMPTY","WHITE","castling","ep_square","half_moves","move_number","history","header","update_setup","generate_fen","reset","DEFAULT_POSITION","tokens","square","validate_fen","valid","charAt","is_digit","parseInt","color","BLACK","toLowerCase","algebraic","BITS","KSIDE_CASTLE","QSIDE_CASTLE","SQUARES","errors","0","1","2","3","4","5","6","7","8","9","10","11","error_number","isNaN","rows","sum_fields","previous_was_number","empty","a8","h1","cflags","epflags","set_header","SYMBOLS","sq","KING","remove","build_move","flags","PROMOTION","captured","EP_CAPTURE","PAWN","generate_moves","add_move","moves","rank","RANK_8","RANK_1","pieces","QUEEN","ROOK","BISHOP","KNIGHT","us","them","swap_color","second_rank","RANK_7","RANK_2","first_sq","last_sq","single_square","legal","PAWN_OFFSETS","NORMAL","BIG_PAWN","j","CAPTURE","PIECE_OFFSETS","offset","castling_from","castling_to","attacked","legal_moves","make_move","king_attacked","undo_move","move_to_san","sloppy","disambiguator","get_disambiguator","in_check","in_checkmate","stripped_san","difference","ATTACKS","SHIFTS","RAYS","blocked","in_stalemate","insufficient_material","bishops","num_pieces","sq_color","sum","in_threefold_repetition","positions","repetition","ROOKS","flag","old","ambiguities","same_rank","same_file","ambig_from","ambig_to","ambig_piece","file","ascii","symbol","move_from_san","clean_move","matches","make_pretty","ugly_move","clone","FLAGS","dupe","property","trim","perft","nodes","child_nodes","POSSIBLE_RESULTS","q","b8","c8","d8","e8","f8","g8","h8","a7","b7","c7","d7","e7","f7","g7","h7","a6","b6","c6","d6","e6","f6","g6","h6","a5","b5","c5","d5","e5","f5","g5","h5","a4","b4","c4","d4","e4","f4","g4","h4","a3","b3","c3","d3","e3","f3","g3","h3","a2","b2","c2","d2","e2","f2","g2","h2","a1","b1","c1","d1","e1","f1","g1","ugly_moves","verbose","in_draw","pgn","newline","newline_char","max_width","header_exists","reversed_history","move_string","Result","current_width","load_pgn","mask","has_keys","parse_pgn_header","header_obj","headers","header_string","ms","rav_regex","half_move","move_obj","pretty_move","undo","square_color","sq_0x88","move_history"],"mappings":"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","file":"detail.umd-es2015.min.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _siftSdkWeb = __webpack_require__(1);\n\t\n\tvar _chess = __webpack_require__(9);\n\t\n\tvar _chess2 = _interopRequireDefault(_chess);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* global ChessBoard */\n\t\n\t\n\tvar DetailView = function (_SiftView) {\n\t  _inherits(DetailView, _SiftView);\n\t\n\t  function DetailView() {\n\t    _classCallCheck(this, DetailView);\n\t\n\t    var _this = _possibleConstructorReturn(this, (DetailView.__proto__ || Object.getPrototypeOf(DetailView)).call(this));\n\t\n\t    ['recalc', 'onDrop', 'onDragStart', 'onSnapEnd', 'resetPosition'].forEach(function (method) {\n\t      return _this[method] = _this[method].bind(_this);\n\t    });\n\t    _this.controller.subscribe('recalc', _this.recalc);\n\t    _this.game = new _chess2.default();\n\t    _this.plannedMove = document.getElementsByClassName('detail--planned')[0];\n\t    _this.resetButton = document.getElementsByClassName('detail--reset')[0];\n\t    _this.board = new ChessBoard('detail--board', {\n\t      draggable: true,\n\t      dropOffBoard: 'trash',\n\t      onDragStart: _this.onDragStart,\n\t      onDrop: _this.onDrop,\n\t      onSnapEnd: _this.onSnapEnd\n\t    });\n\t    _this.resetButton.onclick = _this.resetPosition;\n\t    return _this;\n\t  }\n\t\n\t  _createClass(DetailView, [{\n\t    key: 'presentView',\n\t    value: function presentView(got) {\n\t      this.updateView(got.data);\n\t    }\n\t  }, {\n\t    key: 'recalc',\n\t    value: function recalc(got) {\n\t      this.updateView(got);\n\t    }\n\t  }, {\n\t    key: 'updateView',\n\t    value: function updateView(position) {\n\t      if (position) {\n\t        this.startPosition = position;\n\t        this.resetPosition();\n\t      }\n\t    }\n\t  }, {\n\t    key: 'resetPosition',\n\t    value: function resetPosition() {\n\t      this.game.load(this.startPosition);\n\t      this.board.position(this.startPosition);\n\t      this.plannedMove.innerText = '';\n\t    }\n\t  }, {\n\t    key: 'onDragStart',\n\t    value: function onDragStart(_, piece) {\n\t      return !this.game.game_over() && piece.indexOf(this.game.turn()) > -1;\n\t    }\n\t  }, {\n\t    key: 'onDrop',\n\t    value: function onDrop(from, to) {\n\t      var move = this.game.move({ from: from, to: to, promotion: 'q' });\n\t      if (move === null) return 'snapback';\n\t      this.plannedMove.innerText = this.plannedMove.innerText === '' ? '[ ' + move.san + ' ]' : this.plannedMove.innerText;\n\t      return;\n\t    }\n\t  }, {\n\t    key: 'onSnapEnd',\n\t    value: function onSnapEnd() {\n\t      this.board.position(this.game.fen());\n\t    }\n\t  }]);\n\t\n\t  return DetailView;\n\t}(_siftSdkWeb.SiftView);\n\t\n\texports.default = DetailView;\n\t\n\t\n\t(0, _siftSdkWeb.registerSiftView)(new DetailView(window));\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(console, global) {(function (global, factory) {\n\t     true ? factory(exports) :\n\t    typeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t    (factory((global.Redsift = global.Redsift || {})));\n\t}(this, (function (exports) {\n\t\n\tvar EmailClientController = function EmailClientController() {\n\t  this._proxy = self;\n\t  this._registerMessageListeners();\n\t};\n\t\n\tEmailClientController.prototype._registerMessageListeners = function _registerMessageListeners () {\n\t    var this$1 = this;\n\t\n\t  if(!this._proxy) return;\n\t  this._proxy.onmessage = function (e) {\n\t    // console.log('[SiftController::onmessage]: ', e.data);\n\t    var method = e.data.method;\n\t    if (this$1['_' + method]) {\n\t      this$1['_' + method](e.data.params);\n\t    }\n\t    else {\n\t      // console.log('[EmailClientController::onmessage]: method not implemented: ', method);\n\t    }\n\t  };\n\t};\n\t\n\tEmailClientController.prototype._emailStats = function _emailStats (stats) {\n\t  if(this.onstats) {\n\t    this.onstats(stats.name, stats.value);\n\t  }\n\t};\n\t\n\tEmailClientController.prototype._getThreadRowDisplayInfo = function _getThreadRowDisplayInfo (params) {\n\t    var this$1 = this;\n\t\n\t  // console.log('[EmailClientController::_getThreadRowDisplayInfo]: ', params);\n\t  var trdis = {};\n\t  params.tris.forEach(function (thread) {\n\t    if (thread.value !== undefined && thread.value.list !== undefined && this$1.loadThreadListView) {\n\t      trdis[thread.key] = this$1.loadThreadListView(thread.value.list, params.supportedTemplates);\n\t    }\n\t  });\n\t  // Notify the client\n\t  this._proxy.postMessage({\n\t    method: 'getThreadRowDisplayInfoCallback',\n\t    params: trdis\n\t  });\n\t};\n\t\n\t/**\n\t * Observable pattern implementation.\n\t * Supports topics as String or an Array.\n\t */\n\tvar Observable = function Observable() {\n\t  this._observers = [];\n\t};\n\t\n\tObservable.prototype.subscribe = function subscribe (topic, observer) {\n\t  this._op('_sub', topic, observer);\n\t};\n\t\n\tObservable.prototype.unsubscribe = function unsubscribe (topic, observer) {\n\t  this._op('_unsub', topic, observer);\n\t};\n\t\n\tObservable.prototype.unsubscribeAll = function unsubscribeAll (topic) {\n\t  if (!this._observers[topic]) {\n\t    return;\n\t  }\n\t  delete this._observers[topic];\n\t};\n\t\n\tObservable.prototype.publish = function publish (topic, message) {\n\t  this._op('_pub', topic, message);\n\t};\n\t\n\t/**\n\t * Internal methods\n\t */\n\tObservable.prototype._op = function _op (op, topic, value) {\n\t    var this$1 = this;\n\t\n\t  if (Array.isArray(topic)) {\n\t    topic.forEach(function (t) {\n\t      this$1[op](t, value);\n\t    });\n\t  }\n\t  else {\n\t    this[op](topic, value);\n\t  }\n\t};\n\t\n\tObservable.prototype._sub = function _sub (topic, observer) {\n\t  this._observers[topic] || (this._observers[topic] = []);\n\t  if(observer && this._observers[topic].indexOf(observer) === -1) {\n\t    this._observers[topic].push(observer);\n\t  }\n\t};\n\t\n\tObservable.prototype._unsub = function _unsub (topic, observer) {\n\t  if (!this._observers[topic]) {\n\t    return;\n\t  }\n\t  var index = this._observers[topic].indexOf(observer);\n\t  if (~index) {\n\t    this._observers[topic].splice(index, 1);\n\t  }\n\t};\n\t\n\tObservable.prototype._pub = function _pub (topic, message) {\n\t    var this$1 = this;\n\t\n\t  if (!this._observers[topic]) {\n\t    return;\n\t  }\n\t  for (var i = this._observers[topic].length - 1; i >= 0; i--) {\n\t    this$1._observers[topic][i](message)\n\t  }\n\t};\n\t\n\tvar SiftView = function SiftView() {\n\t  this._resizeHandler = null;\n\t  this._proxy = parent;\n\t  this.controller = new Observable();\n\t  this._registerMessageListeners();\n\t};\n\t\n\tSiftView.prototype.publish = function publish (topic, value) {\n\t this._proxy.postMessage({\n\t    method: 'notifyController',\n\t    params: {\n\t      topic: topic,\n\t      value: value } },\n\t    '*');\n\t};\n\t\n\tSiftView.prototype._registerMessageListeners = function _registerMessageListeners () {\n\t    var this$1 = this;\n\t\n\t  window.addEventListener('message', function (e) {\n\t    var method = e.data.method;\n\t    var params = e.data.params;\n\t    if(method === 'notifyView') {\n\t      this$1.controller.publish(params.topic, params.value);\n\t    }\n\t    else if(this$1[method]) {\n\t      this$1[method](params);\n\t    }\n\t    else {\n\t      console.warn('[SiftView]: method not implemented: ', method);\n\t    }\n\t  }, false);\n\t};\n\t\n\tvar EmailClient = (function (Observable) {\n\t  function EmailClient(proxy) {\n\t    Observable.call(this);\n\t    this._proxy = proxy;\n\t  }\n\t\n\t  if ( Observable ) EmailClient.__proto__ = Observable;\n\t  EmailClient.prototype = Object.create( Observable && Observable.prototype );\n\t  EmailClient.prototype.constructor = EmailClient;\n\t\n\t  EmailClient.prototype.goto = function goto (params) {\n\t    this._postMessage('goto', params);\n\t  };\n\t\n\t  EmailClient.prototype.close = function close () {\n\t    this._postMessage('close');\n\t  };\n\t\n\t  EmailClient.prototype._postMessage = function _postMessage (topic, value) {\n\t    this._proxy.postMessage({\n\t      method: 'notifyClient',\n\t      params: {\n\t        topic: topic,\n\t        value: value\n\t      }\n\t    });\n\t  };\n\t\n\t  return EmailClient;\n\t}(Observable));\n\t\n\tvar SiftStorage = (function (Observable) {\n\t  function SiftStorage() {\n\t    Observable.call(this);\n\t    this._storage = null;\n\t  }\n\t\n\t  if ( Observable ) SiftStorage.__proto__ = Observable;\n\t  SiftStorage.prototype = Object.create( Observable && Observable.prototype );\n\t  SiftStorage.prototype.constructor = SiftStorage;\n\t\n\t  SiftStorage.prototype.init = function init (storage) {\n\t    this._storage = storage;\n\t  };\n\t\n\t  SiftStorage.prototype.get = function get (d) { return this._storage.get(d) };\n\t  SiftStorage.prototype.getIndexKeys = function getIndexKeys (d) { return this._storage.getIndexKeys(d) };\n\t  SiftStorage.prototype.getIndex = function getIndex (d) { return this._storage.getIndex(d) };\n\t  SiftStorage.prototype.getWithIndex = function getWithIndex (d) { return this._storage.getWithIndex(d) };\n\t  SiftStorage.prototype.getAllKeys = function getAllKeys (d) { return this._storage.getAllKeys(d) };\n\t  SiftStorage.prototype.getAll = function getAll (d) { return this._storage.getAll(d) };\n\t  SiftStorage.prototype.getUser = function getUser (d) { return this._storage.getUser(d) };\n\t  SiftStorage.prototype.putUser = function putUser (d) { return this._storage.putUser(d) };\n\t  SiftStorage.prototype.delUser = function delUser (d) { return this._storage.delUser(d) };\n\t\n\t  return SiftStorage;\n\t}(Observable));\n\t\n\tvar commonjsGlobal = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {}\n\t\n\tfunction createCommonjsModule(fn, module) {\n\t\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n\t}\n\t\n\tvar loglevel = createCommonjsModule(function (module) {\n\t/*\n\t* loglevel - https://github.com/pimterry/loglevel\n\t*\n\t* Copyright (c) 2013 Tim Perry\n\t* Licensed under the MIT license.\n\t*/\n\t(function (root, definition) {\n\t    \"use strict\";\n\t    if (true) {\n\t        !(__WEBPACK_AMD_DEFINE_FACTORY__ = (definition), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t    } else if (typeof module === 'object' && module.exports) {\n\t        module.exports = definition();\n\t    } else {\n\t        root.log = definition();\n\t    }\n\t}(commonjsGlobal, function () {\n\t    \"use strict\";\n\t    var noop = function() {};\n\t    var undefinedType = \"undefined\";\n\t\n\t    function realMethod(methodName) {\n\t        if (typeof console === undefinedType) {\n\t            return false; // We can't build a real method without a console to log to\n\t        } else if (console[methodName] !== undefined) {\n\t            return bindMethod(console, methodName);\n\t        } else if (console.log !== undefined) {\n\t            return bindMethod(console, 'log');\n\t        } else {\n\t            return noop;\n\t        }\n\t    }\n\t\n\t    function bindMethod(obj, methodName) {\n\t        var method = obj[methodName];\n\t        if (typeof method.bind === 'function') {\n\t            return method.bind(obj);\n\t        } else {\n\t            try {\n\t                return Function.prototype.bind.call(method, obj);\n\t            } catch (e) {\n\t                // Missing bind shim or IE8 + Modernizr, fallback to wrapping\n\t                return function() {\n\t                    return Function.prototype.apply.apply(method, [obj, arguments]);\n\t                };\n\t            }\n\t        }\n\t    }\n\t\n\t    // these private functions always need `this` to be set properly\n\t\n\t    function enableLoggingWhenConsoleArrives(methodName, level, loggerName) {\n\t        return function () {\n\t            if (typeof console !== undefinedType) {\n\t                replaceLoggingMethods.call(this, level, loggerName);\n\t                this[methodName].apply(this, arguments);\n\t            }\n\t        };\n\t    }\n\t\n\t    function replaceLoggingMethods(level, loggerName) {\n\t        var this$1 = this;\n\t\n\t        /*jshint validthis:true */\n\t        for (var i = 0; i < logMethods.length; i++) {\n\t            var methodName = logMethods[i];\n\t            this$1[methodName] = (i < level) ?\n\t                noop :\n\t                this$1.methodFactory(methodName, level, loggerName);\n\t        }\n\t    }\n\t\n\t    function defaultMethodFactory(methodName, level, loggerName) {\n\t        /*jshint validthis:true */\n\t        return realMethod(methodName) ||\n\t               enableLoggingWhenConsoleArrives.apply(this, arguments);\n\t    }\n\t\n\t    var logMethods = [\n\t        \"trace\",\n\t        \"debug\",\n\t        \"info\",\n\t        \"warn\",\n\t        \"error\"\n\t    ];\n\t\n\t    function Logger(name, defaultLevel, factory) {\n\t      var self = this;\n\t      var currentLevel;\n\t      var storageKey = \"loglevel\";\n\t      if (name) {\n\t        storageKey += \":\" + name;\n\t      }\n\t\n\t      function persistLevelIfPossible(levelNum) {\n\t          var levelName = (logMethods[levelNum] || 'silent').toUpperCase();\n\t\n\t          // Use localStorage if available\n\t          try {\n\t              window.localStorage[storageKey] = levelName;\n\t              return;\n\t          } catch (ignore) {}\n\t\n\t          // Use session cookie as fallback\n\t          try {\n\t              window.document.cookie =\n\t                encodeURIComponent(storageKey) + \"=\" + levelName + \";\";\n\t          } catch (ignore) {}\n\t      }\n\t\n\t      function getPersistedLevel() {\n\t          var storedLevel;\n\t\n\t          try {\n\t              storedLevel = window.localStorage[storageKey];\n\t          } catch (ignore) {}\n\t\n\t          if (typeof storedLevel === undefinedType) {\n\t              try {\n\t                  var cookie = window.document.cookie;\n\t                  var location = cookie.indexOf(\n\t                      encodeURIComponent(storageKey) + \"=\");\n\t                  if (location) {\n\t                      storedLevel = /^([^;]+)/.exec(cookie.slice(location))[1];\n\t                  }\n\t              } catch (ignore) {}\n\t          }\n\t\n\t          // If the stored level is not valid, treat it as if nothing was stored.\n\t          if (self.levels[storedLevel] === undefined) {\n\t              storedLevel = undefined;\n\t          }\n\t\n\t          return storedLevel;\n\t      }\n\t\n\t      /*\n\t       *\n\t       * Public API\n\t       *\n\t       */\n\t\n\t      self.levels = { \"TRACE\": 0, \"DEBUG\": 1, \"INFO\": 2, \"WARN\": 3,\n\t          \"ERROR\": 4, \"SILENT\": 5};\n\t\n\t      self.methodFactory = factory || defaultMethodFactory;\n\t\n\t      self.getLevel = function () {\n\t          return currentLevel;\n\t      };\n\t\n\t      self.setLevel = function (level, persist) {\n\t          if (typeof level === \"string\" && self.levels[level.toUpperCase()] !== undefined) {\n\t              level = self.levels[level.toUpperCase()];\n\t          }\n\t          if (typeof level === \"number\" && level >= 0 && level <= self.levels.SILENT) {\n\t              currentLevel = level;\n\t              if (persist !== false) {  // defaults to true\n\t                  persistLevelIfPossible(level);\n\t              }\n\t              replaceLoggingMethods.call(self, level, name);\n\t              if (typeof console === undefinedType && level < self.levels.SILENT) {\n\t                  return \"No console available for logging\";\n\t              }\n\t          } else {\n\t              throw \"log.setLevel() called with invalid level: \" + level;\n\t          }\n\t      };\n\t\n\t      self.setDefaultLevel = function (level) {\n\t          if (!getPersistedLevel()) {\n\t              self.setLevel(level, false);\n\t          }\n\t      };\n\t\n\t      self.enableAll = function(persist) {\n\t          self.setLevel(self.levels.TRACE, persist);\n\t      };\n\t\n\t      self.disableAll = function(persist) {\n\t          self.setLevel(self.levels.SILENT, persist);\n\t      };\n\t\n\t      // Initialize with the right level\n\t      var initialLevel = getPersistedLevel();\n\t      if (initialLevel == null) {\n\t          initialLevel = defaultLevel == null ? \"WARN\" : defaultLevel;\n\t      }\n\t      self.setLevel(initialLevel, false);\n\t    }\n\t\n\t    /*\n\t     *\n\t     * Package-level API\n\t     *\n\t     */\n\t\n\t    var defaultLogger = new Logger();\n\t\n\t    var _loggersByName = {};\n\t    defaultLogger.getLogger = function getLogger(name) {\n\t        if (typeof name !== \"string\" || name === \"\") {\n\t          throw new TypeError(\"You must supply a name when creating a logger.\");\n\t        }\n\t\n\t        var logger = _loggersByName[name];\n\t        if (!logger) {\n\t          logger = _loggersByName[name] = new Logger(\n\t            name, defaultLogger.getLevel(), defaultLogger.methodFactory);\n\t        }\n\t        return logger;\n\t    };\n\t\n\t    // Grab the current global log variable in case of overwrite\n\t    var _log = (typeof window !== undefinedType) ? window.log : undefined;\n\t    defaultLogger.noConflict = function() {\n\t        if (typeof window !== undefinedType &&\n\t               window.log === defaultLogger) {\n\t            window.log = _log;\n\t        }\n\t\n\t        return defaultLogger;\n\t    };\n\t\n\t    return defaultLogger;\n\t}));\n\t});\n\t\n\tvar loglevel$1 = (loglevel && typeof loglevel === 'object' && 'default' in loglevel ? loglevel['default'] : loglevel);\n\t\n\tvar index$2 = createCommonjsModule(function (module) {\n\t'use strict';\n\tvar toString = Object.prototype.toString;\n\t\n\tmodule.exports = function (x) {\n\t\tvar prototype;\n\t\treturn toString.call(x) === '[object Object]' && (prototype = Object.getPrototypeOf(x), prototype === null || prototype === Object.getPrototypeOf({}));\n\t};\n\t});\n\t\n\tvar require$$0$2 = (index$2 && typeof index$2 === 'object' && 'default' in index$2 ? index$2['default'] : index$2);\n\t\n\tvar index$1 = createCommonjsModule(function (module, exports) {\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = range;\n\t\n\tvar _isPlainObj = require$$0$2;\n\t\n\tvar _isPlainObj2 = _interopRequireDefault(_isPlainObj);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t/**\n\t * Parse `opts` to valid IDBKeyRange.\n\t * https://developer.mozilla.org/en-US/docs/Web/API/IDBKeyRange\n\t *\n\t * @param {Object} opts\n\t * @return {IDBKeyRange}\n\t */\n\t\n\tfunction range(opts) {\n\t  var IDBKeyRange = commonjsGlobal.IDBKeyRange || commonjsGlobal.webkitIDBKeyRange;\n\t  if (opts instanceof IDBKeyRange) return opts;\n\t  if (typeof opts === 'undefined' || opts === null) return null;\n\t  if (!(0, _isPlainObj2.default)(opts)) return IDBKeyRange.only(opts);\n\t  var keys = Object.keys(opts).sort();\n\t\n\t  if (keys.length === 1) {\n\t    var key = keys[0];\n\t    var val = opts[key];\n\t\n\t    switch (key) {\n\t      case 'eq':\n\t        return IDBKeyRange.only(val);\n\t      case 'gt':\n\t        return IDBKeyRange.lowerBound(val, true);\n\t      case 'lt':\n\t        return IDBKeyRange.upperBound(val, true);\n\t      case 'gte':\n\t        return IDBKeyRange.lowerBound(val);\n\t      case 'lte':\n\t        return IDBKeyRange.upperBound(val);\n\t      default:\n\t        throw new TypeError('\"' + key + '\" is not valid key');\n\t    }\n\t  } else {\n\t    var x = opts[keys[0]];\n\t    var y = opts[keys[1]];\n\t    var pattern = keys.join('-');\n\t\n\t    switch (pattern) {\n\t      case 'gt-lt':\n\t        return IDBKeyRange.bound(x, y, true, true);\n\t      case 'gt-lte':\n\t        return IDBKeyRange.bound(x, y, true, false);\n\t      case 'gte-lt':\n\t        return IDBKeyRange.bound(x, y, false, true);\n\t      case 'gte-lte':\n\t        return IDBKeyRange.bound(x, y, false, false);\n\t      default:\n\t        throw new TypeError('\"' + pattern + '\" are conflicted keys');\n\t    }\n\t  }\n\t}\n\tmodule.exports = exports['default'];\n\t});\n\t\n\tvar require$$0$1 = (index$1 && typeof index$1 === 'object' && 'default' in index$1 ? index$1['default'] : index$1);\n\t\n\tvar idbIndex = createCommonjsModule(function (module) {\n\tvar parseRange = require$$0$1;\n\t\n\t/**\n\t * Expose `Index`.\n\t */\n\t\n\tmodule.exports = Index;\n\t\n\t/**\n\t * Initialize new `Index`.\n\t *\n\t * @param {Store} store\n\t * @param {String} name\n\t * @param {String|Array} field\n\t * @param {Object} opts { unique: false, multi: false }\n\t */\n\t\n\tfunction Index(store, name, field, opts) {\n\t  this.store = store;\n\t  this.name = name;\n\t  this.field = field;\n\t  this.opts = opts;\n\t  this.multi = opts.multi || opts.multiEntry || false;\n\t  this.unique = opts.unique || false;\n\t}\n\t\n\t/**\n\t * Get `key`.\n\t *\n\t * @param {Object|IDBKeyRange} key\n\t * @param {Function} cb\n\t */\n\t\n\tIndex.prototype.get = function(key, cb) {\n\t  var result = [];\n\t  var isUnique = this.unique;\n\t  var opts = { range: key, iterator: iterator };\n\t\n\t  this.cursor(opts, function(err) {\n\t    if (err) return cb(err);\n\t    isUnique ? cb(null, result[0]) : cb(null, result);\n\t  });\n\t\n\t  function iterator(cursor) {\n\t    result.push(cursor.value);\n\t    cursor.continue();\n\t  }\n\t};\n\t\n\t/**\n\t * Count records by `key`.\n\t *\n\t * @param {String|IDBKeyRange} key\n\t * @param {Function} cb\n\t */\n\t\n\tIndex.prototype.count = function(key, cb) {\n\t  var name = this.store.name;\n\t  var indexName = this.name;\n\t\n\t  this.store.db.transaction('readonly', [name], function(err, tr) {\n\t    if (err) return cb(err);\n\t    var index = tr.objectStore(name).index(indexName);\n\t    var req = index.count(parseRange(key));\n\t    req.onerror = cb;\n\t    req.onsuccess = function onsuccess(e) { cb(null, e.target.result) };\n\t  });\n\t};\n\t\n\t/**\n\t * Create cursor.\n\t * Proxy to `this.store` for convinience.\n\t *\n\t * @param {Object} opts\n\t * @param {Function} cb\n\t */\n\t\n\tIndex.prototype.cursor = function(opts, cb) {\n\t  opts.index = this.name;\n\t  this.store.cursor(opts, cb);\n\t};\n\t});\n\t\n\tvar require$$0 = (idbIndex && typeof idbIndex === 'object' && 'default' in idbIndex ? idbIndex['default'] : idbIndex);\n\t\n\tvar index$3 = createCommonjsModule(function (module) {\n\t/**\n\t * toString ref.\n\t */\n\t\n\tvar toString = Object.prototype.toString;\n\t\n\t/**\n\t * Return the type of `val`.\n\t *\n\t * @param {Mixed} val\n\t * @return {String}\n\t * @api public\n\t */\n\t\n\tmodule.exports = function(val){\n\t  switch (toString.call(val)) {\n\t    case '[object Date]': return 'date';\n\t    case '[object RegExp]': return 'regexp';\n\t    case '[object Arguments]': return 'arguments';\n\t    case '[object Array]': return 'array';\n\t    case '[object Error]': return 'error';\n\t  }\n\t\n\t  if (val === null) return 'null';\n\t  if (val === undefined) return 'undefined';\n\t  if (val !== val) return 'nan';\n\t  if (val && val.nodeType === 1) return 'element';\n\t\n\t  val = val.valueOf\n\t    ? val.valueOf()\n\t    : Object.prototype.valueOf.apply(val)\n\t\n\t  return typeof val;\n\t};\n\t});\n\t\n\tvar require$$2 = (index$3 && typeof index$3 === 'object' && 'default' in index$3 ? index$3['default'] : index$3);\n\t\n\tvar idbStore = createCommonjsModule(function (module) {\n\tvar type = require$$2;\n\tvar parseRange = require$$0$1;\n\t\n\t/**\n\t * Expose `Store`.\n\t */\n\t\n\tmodule.exports = Store;\n\t\n\t/**\n\t * Initialize new `Store`.\n\t *\n\t * @param {String} name\n\t * @param {Object} opts\n\t */\n\t\n\tfunction Store(name, opts) {\n\t  this.db = null;\n\t  this.name = name;\n\t  this.indexes = {};\n\t  this.opts = opts;\n\t  this.key = opts.key || opts.keyPath || undefined;\n\t  this.increment = opts.increment || opts.autoIncretement || undefined;\n\t}\n\t\n\t/**\n\t * Get index by `name`.\n\t *\n\t * @param {String} name\n\t * @return {Index}\n\t */\n\t\n\tStore.prototype.index = function(name) {\n\t  return this.indexes[name];\n\t};\n\t\n\t/**\n\t * Put (create or replace) `key` to `val`.\n\t *\n\t * @param {String|Object} [key] is optional when store.key exists.\n\t * @param {Any} val\n\t * @param {Function} cb\n\t */\n\t\n\tStore.prototype.put = function(key, val, cb) {\n\t  var name = this.name;\n\t  var keyPath = this.key;\n\t  if (keyPath) {\n\t    if (type(key) == 'object') {\n\t      cb = val;\n\t      val = key;\n\t      key = null;\n\t    } else {\n\t      val[keyPath] = key;\n\t    }\n\t  }\n\t\n\t  this.db.transaction('readwrite', [name], function(err, tr) {\n\t    if (err) return cb(err);\n\t    var objectStore = tr.objectStore(name);\n\t    var req = keyPath ? objectStore.put(val) : objectStore.put(val, key);\n\t    tr.onerror = tr.onabort = req.onerror = cb;\n\t    tr.oncomplete = function oncomplete() { cb(null, req.result) };\n\t  });\n\t};\n\t\n\t/**\n\t * Get `key`.\n\t *\n\t * @param {String} key\n\t * @param {Function} cb\n\t */\n\t\n\tStore.prototype.get = function(key, cb) {\n\t  var name = this.name;\n\t  this.db.transaction('readonly', [name], function(err, tr) {\n\t    if (err) return cb(err);\n\t    var objectStore = tr.objectStore(name);\n\t    var req = objectStore.get(key);\n\t    req.onerror = cb;\n\t    req.onsuccess = function onsuccess(e) { cb(null, e.target.result) };\n\t  });\n\t};\n\t\n\t/**\n\t * Del `key`.\n\t *\n\t * @param {String} key\n\t * @param {Function} cb\n\t */\n\t\n\tStore.prototype.del = function(key, cb) {\n\t  var name = this.name;\n\t  this.db.transaction('readwrite', [name], function(err, tr) {\n\t    if (err) return cb(err);\n\t    var objectStore = tr.objectStore(name);\n\t    var req = objectStore.delete(key);\n\t    tr.onerror = tr.onabort = req.onerror = cb;\n\t    tr.oncomplete = function oncomplete() { cb() };\n\t  });\n\t};\n\t\n\t/**\n\t * Count.\n\t *\n\t * @param {Function} cb\n\t */\n\t\n\tStore.prototype.count = function(cb) {\n\t  var name = this.name;\n\t  this.db.transaction('readonly', [name], function(err, tr) {\n\t    if (err) return cb(err);\n\t    var objectStore = tr.objectStore(name);\n\t    var req = objectStore.count();\n\t    req.onerror = cb;\n\t    req.onsuccess = function onsuccess(e) { cb(null, e.target.result) };\n\t  });\n\t};\n\t\n\t/**\n\t * Clear.\n\t *\n\t * @param {Function} cb\n\t */\n\t\n\tStore.prototype.clear = function(cb) {\n\t  var name = this.name;\n\t  this.db.transaction('readwrite', [name], function(err, tr) {\n\t    if (err) return cb(err);\n\t    var objectStore = tr.objectStore(name);\n\t    var req = objectStore.clear();\n\t    tr.onerror = tr.onabort = req.onerror = cb;\n\t    tr.oncomplete = function oncomplete() { cb() };\n\t  });\n\t};\n\t\n\t/**\n\t * Perform batch operation.\n\t *\n\t * @param {Object} vals\n\t * @param {Function} cb\n\t */\n\t\n\tStore.prototype.batch = function(vals, cb) {\n\t  var name = this.name;\n\t  var keyPath = this.key;\n\t  var keys = Object.keys(vals);\n\t\n\t  this.db.transaction('readwrite', [name], function(err, tr) {\n\t    if (err) return cb(err);\n\t    var store = tr.objectStore(name);\n\t    var current = 0;\n\t    tr.onerror = tr.onabort = cb;\n\t    tr.oncomplete = function oncomplete() { cb() };\n\t    next();\n\t\n\t    function next() {\n\t      if (current >= keys.length) return;\n\t      var currentKey = keys[current];\n\t      var currentVal = vals[currentKey];\n\t      var req;\n\t\n\t      if (currentVal === null) {\n\t        req = store.delete(currentKey);\n\t      } else if (keyPath) {\n\t        if (!currentVal[keyPath]) currentVal[keyPath] = currentKey;\n\t        req = store.put(currentVal);\n\t      } else {\n\t        req = store.put(currentVal, currentKey);\n\t      }\n\t\n\t      req.onerror = cb;\n\t      req.onsuccess = next;\n\t      current += 1;\n\t    }\n\t  });\n\t};\n\t\n\t/**\n\t * Get all.\n\t *\n\t * @param {Function} cb\n\t */\n\t\n\tStore.prototype.all = function(cb) {\n\t  var result = [];\n\t\n\t  this.cursor({ iterator: iterator }, function(err) {\n\t    err ? cb(err) : cb(null, result);\n\t  });\n\t\n\t  function iterator(cursor) {\n\t    result.push(cursor.value);\n\t    cursor.continue();\n\t  }\n\t};\n\t\n\t/**\n\t * Create read cursor for specific `range`,\n\t * and pass IDBCursor to `iterator` function.\n\t * https://developer.mozilla.org/en-US/docs/Web/API/IDBCursor\n\t *\n\t * @param {Object} opts:\n\t *   {IDBRange|Object} range - passes to .openCursor()\n\t *   {Function} iterator - function to call with IDBCursor\n\t *   {String} [index] - name of index to start cursor by index\n\t * @param {Function} cb - calls on end or error\n\t */\n\t\n\tStore.prototype.cursor = function(opts, cb) {\n\t  var name = this.name;\n\t  this.db.transaction('readonly', [name], function(err, tr) {\n\t    if (err) return cb(err);\n\t    var store = opts.index\n\t      ? tr.objectStore(name).index(opts.index)\n\t      : tr.objectStore(name);\n\t    var req = store.openCursor(parseRange(opts.range));\n\t\n\t    req.onerror = cb;\n\t    req.onsuccess = function onsuccess(e) {\n\t      var cursor = e.target.result;\n\t      cursor ? opts.iterator(cursor) : cb();\n\t    };\n\t  });\n\t};\n\t});\n\t\n\tvar require$$1 = (idbStore && typeof idbStore === 'object' && 'default' in idbStore ? idbStore['default'] : idbStore);\n\t\n\tvar schema$1 = createCommonjsModule(function (module) {\n\tvar type = require$$2;\n\tvar Store = require$$1;\n\tvar Index = require$$0;\n\t\n\t/**\n\t * Expose `Schema`.\n\t */\n\t\n\tmodule.exports = Schema;\n\t\n\t/**\n\t * Initialize new `Schema`.\n\t */\n\t\n\tfunction Schema() {\n\t  if (!(this instanceof Schema)) return new Schema();\n\t  this._stores = {};\n\t  this._current = {};\n\t  this._versions = {};\n\t}\n\t\n\t/**\n\t * Set new version.\n\t *\n\t * @param {Number} version\n\t * @return {Schema}\n\t */\n\t\n\tSchema.prototype.version = function(version) {\n\t  if (type(version) != 'number' || version < 1 || version < this.getVersion())\n\t    throw new TypeError('not valid version');\n\t\n\t  this._current = { version: version, store: null };\n\t  this._versions[version] = {\n\t    stores: [],      // db.createObjectStore\n\t    dropStores: [],  // db.deleteObjectStore\n\t    indexes: [],     // store.createIndex\n\t    dropIndexes: [], // store.deleteIndex\n\t    version: version // version\n\t  };\n\t\n\t  return this;\n\t};\n\t\n\t/**\n\t * Add store.\n\t *\n\t * @param {String} name\n\t * @param {Object} [opts] { key: false }\n\t * @return {Schema}\n\t */\n\t\n\tSchema.prototype.addStore = function(name, opts) {\n\t  if (type(name) != 'string') throw new TypeError('`name` is required');\n\t  if (this._stores[name]) throw new TypeError('store is already defined');\n\t  var store = new Store(name, opts || {});\n\t  this._stores[name] = store;\n\t  this._versions[this.getVersion()].stores.push(store);\n\t  this._current.store = store;\n\t  return this;\n\t};\n\t\n\t/**\n\t * Drop store.\n\t *\n\t * @param {String} name\n\t * @return {Schema}\n\t */\n\t\n\tSchema.prototype.dropStore = function(name) {\n\t  if (type(name) != 'string') throw new TypeError('`name` is required');\n\t  var store = this._stores[name];\n\t  if (!store) throw new TypeError('store is not defined');\n\t  delete this._stores[name];\n\t  this._versions[this.getVersion()].dropStores.push(store);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Add index.\n\t *\n\t * @param {String} name\n\t * @param {String|Array} field\n\t * @param {Object} [opts] { unique: false, multi: false }\n\t * @return {Schema}\n\t */\n\t\n\tSchema.prototype.addIndex = function(name, field, opts) {\n\t  if (type(name) != 'string') throw new TypeError('`name` is required');\n\t  if (type(field) != 'string' && type(field) != 'array') throw new TypeError('`field` is required');\n\t  var store = this._current.store;\n\t  if (store.indexes[name]) throw new TypeError('index is already defined');\n\t  var index = new Index(store, name, field, opts || {});\n\t  store.indexes[name] = index;\n\t  this._versions[this.getVersion()].indexes.push(index);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Drop index.\n\t *\n\t * @param {String} name\n\t * @return {Schema}\n\t */\n\t\n\tSchema.prototype.dropIndex = function(name) {\n\t  if (type(name) != 'string') throw new TypeError('`name` is required');\n\t  var index = this._current.store.indexes[name];\n\t  if (!index) throw new TypeError('index is not defined');\n\t  delete this._current.store.indexes[name];\n\t  this._versions[this.getVersion()].dropIndexes.push(index);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Change current store.\n\t *\n\t * @param {String} name\n\t * @return {Schema}\n\t */\n\t\n\tSchema.prototype.getStore = function(name) {\n\t  if (type(name) != 'string') throw new TypeError('`name` is required');\n\t  if (!this._stores[name]) throw new TypeError('store is not defined');\n\t  this._current.store = this._stores[name];\n\t  return this;\n\t};\n\t\n\t/**\n\t * Get version.\n\t *\n\t * @return {Number}\n\t */\n\t\n\tSchema.prototype.getVersion = function() {\n\t  return this._current.version;\n\t};\n\t\n\t/**\n\t * Generate onupgradeneeded callback.\n\t *\n\t * @return {Function}\n\t */\n\t\n\tSchema.prototype.callback = function() {\n\t  var versions = Object.keys(this._versions)\n\t    .map(function(v) { return this._versions[v] }, this)\n\t    .sort(function(a, b) { return a.version - b.version });\n\t\n\t  return function onupgradeneeded(e) {\n\t    var db = e.target.result;\n\t    var tr = e.target.transaction;\n\t\n\t    versions.forEach(function(versionSchema) {\n\t      if (e.oldVersion >= versionSchema.version) return;\n\t\n\t      versionSchema.stores.forEach(function(s) {\n\t        var options = {};\n\t\n\t        // Only pass the options that are explicitly specified to createObjectStore() otherwise IE/Edge\n\t        // can throw an InvalidAccessError - see https://msdn.microsoft.com/en-us/library/hh772493(v=vs.85).aspx\n\t        if (typeof s.key !== 'undefined') options.keyPath = s.key;\n\t        if (typeof s.increment !== 'undefined') options.autoIncrement = s.increment;\n\t\n\t        db.createObjectStore(s.name, options);\n\t      });\n\t\n\t      versionSchema.dropStores.forEach(function(s) {\n\t        db.deleteObjectStore(s.name);\n\t      });\n\t\n\t      versionSchema.indexes.forEach(function(i) {\n\t        var store = tr.objectStore(i.store.name);\n\t        store.createIndex(i.name, i.field, {\n\t          unique: i.unique,\n\t          multiEntry: i.multi\n\t        });\n\t      });\n\t\n\t      versionSchema.dropIndexes.forEach(function(i) {\n\t        var store = tr.objectStore(i.store.name);\n\t        store.deleteIndex(i.name);\n\t      });\n\t    });\n\t  };\n\t};\n\t});\n\t\n\tvar require$$2$1 = (schema$1 && typeof schema$1 === 'object' && 'default' in schema$1 ? schema$1['default'] : schema$1);\n\t\n\tvar index = createCommonjsModule(function (module, exports) {\n\tvar type = require$$2;\n\tvar Schema = require$$2$1;\n\tvar Store = require$$1;\n\tvar Index = require$$0;\n\t\n\t/**\n\t * Expose `Treo`.\n\t */\n\t\n\texports = module.exports = Treo;\n\t\n\t/**\n\t * Initialize new `Treo` instance.\n\t *\n\t * @param {String} name\n\t * @param {Schema} schema\n\t */\n\t\n\tfunction Treo(name, schema) {\n\t  if (!(this instanceof Treo)) return new Treo(name, schema);\n\t  if (type(name) != 'string') throw new TypeError('`name` required');\n\t  if (!(schema instanceof Schema)) throw new TypeError('not valid schema');\n\t\n\t  this.name = name;\n\t  this.status = 'close';\n\t  this.origin = null;\n\t  this.stores = schema._stores;\n\t  this.version = schema.getVersion();\n\t  this.onupgradeneeded = schema.callback();\n\t\n\t  // assign db property to each store\n\t  Object.keys(this.stores).forEach(function(storeName) {\n\t    this.stores[storeName].db = this;\n\t  }, this);\n\t}\n\t\n\t/**\n\t * Expose core classes.\n\t */\n\t\n\texports.schema = Schema;\n\texports.cmp = cmp;\n\texports.Treo = Treo;\n\texports.Schema = Schema;\n\texports.Store = Store;\n\texports.Index = Index;\n\t\n\t/**\n\t * Use plugin `fn`.\n\t *\n\t * @param {Function} fn\n\t * @return {Treo}\n\t */\n\t\n\tTreo.prototype.use = function(fn) {\n\t  fn(this, exports);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Drop.\n\t *\n\t * @param {Function} cb\n\t */\n\t\n\tTreo.prototype.drop = function(cb) {\n\t  var name = this.name;\n\t  this.close(function(err) {\n\t    if (err) return cb(err);\n\t    var req = indexedDB().deleteDatabase(name);\n\t    req.onerror = cb;\n\t    req.onsuccess = function onsuccess() { cb() };\n\t  });\n\t};\n\t\n\t/**\n\t * Close.\n\t *\n\t * @param {Function} cb\n\t */\n\t\n\tTreo.prototype.close = function(cb) {\n\t  if (this.status == 'close') return cb();\n\t  this.getInstance(function(err, db) {\n\t    if (err) return cb(err);\n\t    db.origin = null;\n\t    db.status = 'close';\n\t    db.close();\n\t    cb();\n\t  });\n\t};\n\t\n\t/**\n\t * Get store by `name`.\n\t *\n\t * @param {String} name\n\t * @return {Store}\n\t */\n\t\n\tTreo.prototype.store = function(name) {\n\t  return this.stores[name];\n\t};\n\t\n\t/**\n\t * Get db instance. It starts opening transaction only once,\n\t * another requests will be scheduled to queue.\n\t *\n\t * @param {Function} cb\n\t */\n\t\n\tTreo.prototype.getInstance = function(cb) {\n\t  if (this.status == 'open') return cb(null, this.origin);\n\t  if (this.status == 'opening') return this.queue.push(cb);\n\t\n\t  this.status = 'opening';\n\t  this.queue = [cb]; // queue callbacks\n\t\n\t  var that = this;\n\t  var req = indexedDB().open(this.name, this.version);\n\t  req.onupgradeneeded = this.onupgradeneeded;\n\t\n\t  req.onerror = req.onblocked = function onerror(e) {\n\t    that.status = 'error';\n\t    that.queue.forEach(function(cb) { cb(e) });\n\t    delete that.queue;\n\t  };\n\t\n\t  req.onsuccess = function onsuccess(e) {\n\t    that.origin = e.target.result;\n\t    that.status = 'open';\n\t    that.origin.onversionchange = function onversionchange() {\n\t      that.close(function() {});\n\t    };\n\t    that.queue.forEach(function(cb) { cb(null, that.origin) });\n\t    delete that.queue;\n\t  };\n\t};\n\t\n\t/**\n\t * Create new transaction for selected `stores`.\n\t *\n\t * @param {String} type (readwrite|readonly)\n\t * @param {Array} stores - follow indexeddb semantic\n\t * @param {Function} cb\n\t */\n\t\n\tTreo.prototype.transaction = function(type, stores, cb) {\n\t  this.getInstance(function(err, db) {\n\t    err ? cb(err) : cb(null, db.transaction(stores, type));\n\t  });\n\t};\n\t\n\t/**\n\t * Compare 2 values using IndexedDB comparision algotihm.\n\t *\n\t * @param {Mixed} value1\n\t * @param {Mixed} value2\n\t * @return {Number} -1|0|1\n\t */\n\t\n\tfunction cmp() {\n\t  return indexedDB().cmp.apply(indexedDB(), arguments);\n\t}\n\t\n\t/**\n\t * Dynamic link to `global.indexedDB` for polyfills support.\n\t *\n\t * @return {IDBDatabase}\n\t */\n\t\n\tfunction indexedDB() {\n\t  return commonjsGlobal._indexedDB\n\t    || commonjsGlobal.indexedDB\n\t    || commonjsGlobal.msIndexedDB\n\t    || commonjsGlobal.mozIndexedDB\n\t    || commonjsGlobal.webkitIndexedDB;\n\t}\n\t});\n\t\n\tvar treo = (index && typeof index === 'object' && 'default' in index ? index['default'] : index);\n\t\n\tvar logger = loglevel$1.getLogger('RSStorage:operations');\n\tlogger.setLevel('warn');\n\t\n\t// Email msg buckets\n\tvar EMAIL_BUCKETS = ['_email.id', '_email.tid'];\n\t// Message Db schema\n\tvar MSG_DB_VERSIONED_SCHEMA = [\n\t  // version 1\n\t  [\n\t    { name: '_id.list', indexes: ['sift.guid'] },\n\t    { name: '_tid.list', indexes: ['sift.guid'] }\n\t  ],\n\t  // version 2\n\t  [\n\t    { name: '_email.id', indexes: ['sift.guid'] },\n\t    { name: '_email.tid', indexes: ['sift.guid'] },\n\t    { name: '_id.list', drop: true },\n\t    { name: '_tid.list', drop: true }\n\t  ]\n\t];\n\t// Sync DB schema\n\tvar SYNC_DB_SCHEMA = [\n\t  { name: 'events', indexes: ['value.sift.guid'] },\n\t  { name: 'admin' }];\n\t// Client DB schema\n\tvar CLIENT_DB_SCHEMA = [\n\t  { name: 'tour'},\n\t  { name: 'spm' },\n\t  { name: 'auth' }];\n\t\n\t/*****************************************************************\n\t * Operations (alphabetically ordered)\n\t *****************************************************************/\n\t// Create Db\n\tfunction opCreateDb(dbInfo) {\n\t  logger.trace('[opCreateDb]: ', dbInfo);\n\t  var dbs = {};\n\t  switch (dbInfo.type) {\n\t    case 'MSG':\n\t      dbs.msg = treo('rs_msg_db-' + dbInfo.accountGuid, _getVersionedTreoSchema(MSG_DB_VERSIONED_SCHEMA));\n\t      break;\n\t    case 'SIFT':\n\t      if (!dbInfo.siftGuid) {\n\t        throw new Error('[opCreateDb]: dbInfo.siftGuid undefined');\n\t      }\n\t      logger.trace('[opCreateDb]: creating SIFT db');\n\t      var schema = _getTreoSchema(dbInfo.schema, true);\n\t      // Add user and redsift stores to sift db.\n\t      schema = schema.addStore('_user.default').addStore('_redsift');\n\t      dbs.db = treo(dbInfo.siftGuid + '-' + dbInfo.accountGuid, schema);\n\t      dbs.msg = treo('rs_msg_db-' + dbInfo.accountGuid, _getVersionedTreoSchema(MSG_DB_VERSIONED_SCHEMA));\n\t      break;\n\t    case 'SYNC':\n\t      logger.trace('[opCreateDb]: creating SYNC db');\n\t      dbs.db = treo('rs_sync_log-' + dbInfo.accountGuid, _getTreoSchema(SYNC_DB_SCHEMA));\n\t      break;\n\t    case 'CLIENT':\n\t      dbs.db = treo('rs_client_db-' + dbInfo.clientName, _getTreoSchema(CLIENT_DB_SCHEMA));\n\t      break;\n\t    default:\n\t      throw new Error('[opCreateDb]: unsupported db type: ' + dbInfo.type);\n\t  }\n\t  return dbs;\n\t}\n\t\n\t// Del\n\tfunction opDel(dbs, params, siftGuid) {\n\t  logger.trace('[opDel]: ', params, siftGuid);\n\t  if (!params.bucket) {\n\t    return Promise.reject('[opDel]: params.bucket undefined');\n\t  }\n\t  if (!params.keys || params.keys.length === 0) {\n\t    logger.trace('[opDel]: params.keys undefined');\n\t    return Promise.resolve();\n\t  }\n\t  if (EMAIL_BUCKETS.indexOf(params.bucket) !== -1) {\n\t    var keys = params.keys.map(function (k) {\n\t      return siftGuid + '/' + k;\n\t    });\n\t    return _batchDelete(dbs.msg, { bucket: params.bucket, keys: keys });\n\t  }\n\t  return _batchDelete(dbs.db, params);\n\t}\n\t\n\t// Get\n\tfunction opGet(dbs, params, siftGuid) {\n\t  logger.trace('[opGet]: ', params);\n\t  if (!params.bucket) {\n\t    return Promise.reject('[opGet]: params.bucket undefined');\n\t  }\n\t  if (!params.keys || params.keys.length === 0) {\n\t    return Promise.reject('[opGet]: param.keys undefined');\n\t  }\n\t  if (EMAIL_BUCKETS.indexOf(params.bucket) !== -1) {\n\t    var keys = params.keys.map(function (k) {\n\t      return siftGuid + '/' + k;\n\t    });\n\t    return _findIn(dbs.msg, { bucket: params.bucket, keys: keys }).then(function (result) {\n\t      return result.map(function (r) {\n\t        return { key: r.key.split('/')[1], value: r.value };\n\t      });\n\t    });\n\t  }\n\t  return _findIn(dbs.db, params);\n\t}\n\t\n\t// Get All\n\tfunction opGetAll(dbs, params, siftGuid) {\n\t  logger.trace('[opGetAll]: ', params, siftGuid);\n\t  if (!params.bucket) {\n\t    return Promise.reject('[opGetAll]: params.bucket undefined');\n\t  }\n\t  if (EMAIL_BUCKETS.indexOf(params.bucket) !== -1) {\n\t    return _getAll(dbs.msg, { bucket: params.bucket, index: 'sift.guid', range: siftGuid }, true)\n\t      .then(function (result) { return result.map(function (r) { return ({ key: r.key.split('/')[1], value: r.value }); }); }\n\t      );\n\t  }\n\t  return _getAll(dbs.db, params, true);\n\t}\n\t\n\t// Get All Keys\n\tfunction opGetAllKeys(dbs, params, siftGuid) {\n\t  logger.trace('[opGetAllKeys]: ', params, siftGuid);\n\t  if (!params.bucket) {\n\t    return Promise.reject('[opGetAllKeys]: params.bucket undefined');\n\t  }\n\t  if (EMAIL_BUCKETS.indexOf(params.bucket) !== -1) {\n\t    return _getAll(dbs.msg, { bucket: params.bucket, index: 'sift.guid', range: siftGuid }, false)\n\t      .then(function (result) { return result.map(function (r) { return r.key.split('/')[1]; }); });\n\t  }\n\t  return _getAll(dbs.db, params, false);\n\t}\n\t\n\t// Get Index\n\tfunction opGetIndex(dbs, params, siftGuid) {\n\t  logger.trace('[opGetIndex]: ', params, siftGuid);\n\t  if (!params.bucket) {\n\t    return Promise.reject('[opGetIndex]:params.bucket undefined');\n\t  }\n\t  if (EMAIL_BUCKETS.indexOf(params.bucket) !== -1) {\n\t    return _getAll(dbs.msg, { bucket: params.bucket, index: 'sift.guid', range: siftGuid }, true).then(function (result) {\n\t      return result.map(function (r) {\n\t        return { key: r.key.split('/')[1], value: r.value };\n\t      });\n\t    });\n\t  }\n\t  if (!params.index) {\n\t    return Promise.reject('[opGetIndex]:params.index undefined');\n\t  }\n\t  return _getAll(dbs.db, params, true);\n\t}\n\t\n\t// Get Index Keys\n\tfunction opGetIndexKeys(dbs, params, siftGuid) {\n\t  logger.trace('[opGetIndexKeys]: ', params, siftGuid);\n\t  if (!params.bucket) {\n\t    return Promise.reject('[opGetIndexKeys]: params.bucket undefined');\n\t  }\n\t  if (EMAIL_BUCKETS.indexOf(params.bucket) !== -1) {\n\t    return _getAll(dbs.msg, { bucket: params.bucket, index: 'sift.guid', range: siftGuid }, false).then(function (result) {\n\t      return result.map(function (r) {\n\t        return { key: r.key.split('/')[1], value: r.value };\n\t      });\n\t    });\n\t  }\n\t  if (!params.index) {\n\t    return Promise.reject('[opGetIndexKeys]: params.index undefined');\n\t  }\n\t  return _getAll(dbs.db, params, false);\n\t}\n\t\n\t// Get With Index\n\tfunction opGetWithIndex(dbs, params, siftGuid) {\n\t  logger.trace('[opGetWithIndex]: ', params, siftGuid);\n\t  if (!params.bucket) {\n\t    return Promise.reject('[opGetWithIndex]:params.bucket undefined');\n\t  }\n\t  if (!params.keys) {\n\t    return Promise.reject('[opGetWithIndex]:params.keys undefined');\n\t  }\n\t  if (EMAIL_BUCKETS.indexOf(params.bucket) !== -1) {\n\t    var keys = params.keys.map(function (k) {\n\t      return siftGuid + '/' + k;\n\t    });\n\t    return _getWithIndexRange(dbs.msg, { bucket: params.bucket, keys: keys, index: 'sift.guid', range: siftGuid }).then(function (result) {\n\t      return result.map(function (r) {\n\t        return { key: r.key.split('/')[1], value: r.value };\n\t      });\n\t    });\n\t  }\n\t  if (!params.index) {\n\t    return Promise.reject('[opGetWithIndex]:params.index undefined');\n\t  }\n\t  if (!params.range) {\n\t    return Promise.reject('[opGetWithIndex]:params.range undefined');\n\t  }\n\t  return _getWithIndexRange(dbs.db, params);\n\t}\n\t\n\t// Put\n\tfunction opPut(dbs, params, raw, siftGuid) {\n\t  logger.trace('[opPut]: ', params, raw, siftGuid);\n\t  var db = dbs.db;\n\t  if (!params.bucket) {\n\t    return Promise.reject('[opPut]: params.bucket undefined');\n\t  }\n\t  if (!params.kvs || params.kvs.length === 0) {\n\t    logger.warn('[opPut]: params.kvs undefined');\n\t    return Promise.resolve();\n\t  }\n\t  var kvs = params.kvs;\n\t  if (!raw) {\n\t    // Wrap value into a {value: object}\n\t    kvs = kvs.map(function (kv) {\n\t      return { key: kv.key, value: { value: kv.value } };\n\t    });\n\t  }\n\t  if (EMAIL_BUCKETS.indexOf(params.bucket) !== -1) {\n\t    db = dbs.msg;\n\t    var kvs = kvs.map(function (kv) {\n\t      return { key: siftGuid + '/' + kv.key, value: kv.value };\n\t    });\n\t  }\n\t  return _batchPut(db, { bucket: params.bucket, kvs: kvs }, raw);\n\t}\n\t\n\t/*****************************************************************\n\t * Internal functions\n\t *****************************************************************/\n\t\n\t// define db schema\n\tfunction _getTreoSchema(stores, sift) {\n\t  logger.trace('[_getTreoSchema]: ', stores, sift);\n\t  var schema = treo.schema().version(1);\n\t  stores.forEach(function (os) {\n\t    if (!(sift && (EMAIL_BUCKETS.indexOf(os.name) !== -1))) {\n\t      if (os.keypath) {\n\t        schema = schema.addStore(os.name, { key: os.keypath });\n\t      }\n\t      else {\n\t        schema = schema.addStore(os.name);\n\t      }\n\t      if (os.indexes) {\n\t        os.indexes.forEach(function (idx) {\n\t          schema = schema.addIndex(idx, idx, { unique: false });\n\t        });\n\t      }\n\t    }\n\t  });\n\t  return schema;\n\t}\n\t\n\t// versioned db schema\n\tfunction _getVersionedTreoSchema(versions, sift) {\n\t  logger.trace('[_getVersionedTreoSchema]: ', versions, sift);\n\t  var schema = treo.schema();\n\t  versions.forEach(function (stores, i) {\n\t    schema = schema.version(i + 1);\n\t    stores.forEach(function (os) {\n\t      if (!(sift && (EMAIL_BUCKETS.indexOf(os.name) !== -1))) {\n\t        if (os.drop) {\n\t          logger.trace('[_getVersionedTreoSchema]: dropping store: ', os.name);\n\t          schema = schema.dropStore(os.name);\n\t        }\n\t        else if (os.keypath) {\n\t          schema = schema.addStore(os.name, { key: os.keypath });\n\t        }\n\t        else {\n\t          schema = schema.addStore(os.name);\n\t        }\n\t        if (os.indexes) {\n\t          os.indexes.forEach(function (idx) {\n\t            if (os.drop) {\n\t              logger.trace('[_getVersionedTreoSchema]: dropping store/index: ' + os.name + '/' + idx);\n\t              schema = schema.dropIndex(idx);\n\t            }\n\t            else {\n\t              schema = schema.addIndex(idx, idx, { unique: false });\n\t            }\n\t          });\n\t        }\n\t      }\n\t    });\n\t  });\n\t  return schema;\n\t}\n\t\n\t// Batch deletion supports numeric keys\n\tfunction _batchDelete(db, params) {\n\t  logger.trace('[_batchDelete]: ', params);\n\t  return new Promise(function (resolve, reject) {\n\t    db.transaction('readwrite', [params.bucket], function (err, tr) {\n\t      if (err) { return reject(err); }\n\t      var store = tr.objectStore(params.bucket);\n\t      var current = 0;\n\t      var next = function () {\n\t        if (current >= params.keys.length) { return; }\n\t        var currentKey = params.keys[current];\n\t        var req;\n\t        req = store.delete(currentKey);\n\t        req.onerror = reject;\n\t        req.onsuccess = next;\n\t        current += 1;\n\t      };\n\t      tr.onerror = tr.onabort = reject;\n\t      tr.oncomplete = function () { resolve(); };\n\t      next();\n\t    });\n\t  });\n\t}\n\t\n\tfunction _batchPut(db, params) {\n\t  logger.trace('[_batchPut]: ', params);\n\t  return new Promise(function (resolve, reject) {\n\t    var count = params.kvs.length;\n\t    db.transaction('readwrite', [params.bucket], function (err, tr) {\n\t      if (err) { return reject(err); }\n\t      var store = tr.objectStore(params.bucket);\n\t      var current = 0;\n\t      var next = function () {\n\t        if (current >= count) { return; }\n\t        logger.trace('[_batchPut: put: ', params.kvs[current]);\n\t        var req;\n\t        req = store.put(params.kvs[current].value, params.kvs[current].key);\n\t        req.onerror = reject;\n\t        req.onsuccess = next;\n\t        current += 1;\n\t      };\n\t      tr.onerror = tr.onabort = reject;\n\t      tr.oncomplete = function () { resolve(); };\n\t      next();\n\t    });\n\t  });\n\t}\n\t\n\tfunction _getWithIndexRange(db, params) {\n\t  logger.trace('[_getWithIndexRange]: ', params);\n\t  return new Promise(function (resolve, reject) {\n\t    var store = db.store(params.bucket);\n\t    var result = [];\n\t    var found = 0;\n\t    var iterator = function (cursor) {\n\t      var ki = params.keys.indexOf(cursor.primaryKey);\n\t      if (ki !== -1) {\n\t        logger.trace('[found key: ', cursor.primaryKey);\n\t        result[ki].value = cursor.value.value;\n\t        found++;\n\t      }\n\t      if (found === params.keys.length) {\n\t        return done();\n\t      }\n\t      cursor.continue();\n\t    };\n\t    var done = function (err) {\n\t      logger.trace('[_getWithIndexRange: result: ', result);\n\t      err ? reject(err) : resolve(result);\n\t    };\n\t    params.keys.forEach(function (k) {\n\t      result.push({ key: k, value: undefined });\n\t    });\n\t    store.cursor({ index: params.index, range: params.range, iterator: iterator }, done);\n\t  });\n\t}\n\t\n\tfunction _findIn(db, params) {\n\t  logger.trace('[_findIn]: ', params);\n\t  return new Promise(function (resolve, reject) {\n\t    var store = db.store(params.bucket);\n\t    var result = [];\n\t    var current = 0;\n\t    var iterator = function (cursor) {\n\t      logger.trace('[_findIn]: iterator: ', cursor);\n\t      if (cursor.key > sKeys[current]) {\n\t        logger.trace('[_findIn]: cursor ahead: ', cursor.key, sKeys[current]);\n\t        while (cursor.key > sKeys[current] && current < sKeys.length) {\n\t          current += 1;\n\t          logger.trace('[_findIn]: moving to next key: ', cursor.key, sKeys[current]);\n\t        }\n\t        if (current > sKeys.length) {\n\t          logger.trace('[_findIn]: exhausted keys. done.');\n\t          return done();\n\t        }\n\t      }\n\t      if (cursor.key === sKeys[current]) {\n\t        logger.trace('[_findIn]: found key: ', cursor.key, cursor.value);\n\t        result[params.keys.indexOf(sKeys[current])] = { key: cursor.key, value: cursor.value.value };\n\t        current += 1;\n\t        (current < sKeys.length) ? cursor.continue(sKeys[current]) : done();\n\t      }\n\t      else {\n\t        logger.trace('[_findIn]: continuing to next key: ', sKeys[current]);\n\t        cursor.continue(sKeys[current]); // go to next key\n\t      }\n\t    };\n\t    var done = function (err) {\n\t      logger.trace('[findIn]: result: ', result);\n\t      err ? reject(err) : resolve(result);\n\t    };\n\t    var sKeys = params.keys.slice();\n\t    sKeys = sKeys.sort(treo.cmp);\n\t    logger.trace('[findIn: sorted keys: ', sKeys);\n\t    params.keys.forEach(function (k) {\n\t      result.push({ key: k, value: undefined });\n\t    });\n\t    store.cursor({ iterator: iterator }, done);\n\t  });\n\t}\n\t\n\tfunction _getAll(db, params, loadValue) {\n\t  logger.trace('[_getAll]: ', params, loadValue);\n\t  return new Promise(function (resolve, reject) {\n\t    var result = [];\n\t    var keys = [];\n\t    var store = db.store(params.bucket);\n\t    var iterator = function (cursor) {\n\t      var kv = { key: cursor.primaryKey };\n\t      logger.trace('[_getAll]: cursor', cursor);\n\t      if (loadValue) {\n\t        kv.value = cursor.value.value;\n\t      }\n\t      if (params.index) {\n\t        kv.index = cursor.key;\n\t      }\n\t      result.push(kv);\n\t      keys.push(cursor.primaryKey);\n\t      cursor.continue();\n\t    };\n\t    var opts = { iterator: iterator };\n\t    if (params.index) {\n\t      opts.index = params.index;\n\t    }\n\t    if (params.range) {\n\t      opts.range = params.range;\n\t    }\n\t    store.cursor(opts, function (err) {\n\t      if (err) {\n\t        reject(err);\n\t      }\n\t      else {\n\t        if (!params.index && !params.range && !loadValue) {\n\t          logger.trace('[_getAll]: resolving: ', keys);\n\t          resolve(keys);\n\t        }\n\t        else {\n\t          logger.trace('[_getAll]: resolving: ', result);\n\t          resolve(result);\n\t        }\n\t      }\n\t    });\n\t  });\n\t}\n\t\n\t/**\n\t * Redsift SDK. Sift Storage module.\n\t * Based on APIs from https://github.com/CrowdProcess/riak-pb\n\t *\n\t * Copyright (c) 2016 Redsift Limited. All rights reserved.\n\t */\n\tvar _siftGuid = new WeakMap();\n\tvar _dbs = new WeakMap();\n\t\n\tvar Storage = function Storage(dbInfo, ll) {\n\t  this._logger = loglevel$1.getLogger('RSStorage');\n\t  this._logger.setLevel(ll || 'warn');\n\t  if (!dbInfo.accountGuid) {\n\t    throw new Error('[Storage]: dbInfo.accountGuid undefined');\n\t  }\n\t  _siftGuid.set(this, dbInfo.siftGuid);\n\t  _dbs.set(this, opCreateDb(dbInfo));\n\t};\n\t\n\t/*****************************************************************\n\t * External Operations\n\t *****************************************************************/\n\tStorage.prototype.get = function get (params) {\n\t  this._logger.trace('[Storage::get]: ', params);\n\t  return opGet(_dbs.get(this), params, _siftGuid.get(this));\n\t};\n\t\n\tStorage.prototype.getAll = function getAll (params) {\n\t  this._logger.trace('[Storage::getAll]: ', params);\n\t  return opGetAll(_dbs.get(this), params, _siftGuid.get(this));\n\t};\n\t\n\tStorage.prototype.getAllKeys = function getAllKeys (params) {\n\t  this._logger.trace('[Storage::getAllKeys]: ', params);\n\t  return opGetAllKeys(_dbs.get(this), params, _siftGuid.get(this))\n\t};\n\t\n\tStorage.prototype.getIndex = function getIndex (params) {\n\t  this._logger.trace('[Storage::getIndex]: ', params);\n\t  return opGetIndex(_dbs.get(this), params, _siftGuid.get(this));\n\t};\n\t\n\tStorage.prototype.getIndexKeys = function getIndexKeys (params) {\n\t  this._logger.trace('[Storage::getIndexKeys]: ', params);\n\t  return opGetIndexKeys(_dbs.get(this), params, _siftGuid.get(this));\n\t};\n\t\n\tStorage.prototype.getWithIndex = function getWithIndex (params) {\n\t  this._logger.trace('[Storage::getWithIndex]: ', params);\n\t  return opGetWithIndex(_dbs.get(this), params, _siftGuid.get(this));\n\t};\n\t\n\t///////////////////////////////////////////////////////////////////////////////////////////////\n\t// Sift-only operations\n\t///////////////////////////////////////////////////////////////////////////////////////////////\n\tStorage.prototype.delUser = function delUser (params) {\n\t  params.bucket = '_user.default';\n\t  this._logger.trace('[Storage::delUser]: ', params);\n\t  return opDel(_dbs.get(this), params, _siftGuid.get(this));\n\t};\n\t\n\tStorage.prototype.getUser = function getUser (params) {\n\t  params.bucket = '_user.default';\n\t  this._logger.trace('[Storage::getUser]: ', params);\n\t  return opGet(_dbs.get(this), params, _siftGuid.get(this));\n\t};\n\t\n\tStorage.prototype.putUser = function putUser (params) {\n\t  params.bucket = '_user.default';\n\t  this._logger.trace('[Storage::putUser]: ', params);\n\t  if (!params.kvs || params.kvs.length === 0) {\n\t    return Promise.reject('[Storage::putUser]: params.kvs undefined');\n\t  }\n\t  return opPut(_dbs.get(this), params, false, _siftGuid.get(this));\n\t};\n\t\n\tvar SiftController = function SiftController() {\n\t  this._proxy = self;\n\t  this.view = new Observable();\n\t  this.emailclient = new EmailClient(self);\n\t  this._registerMessageListeners();\n\t};\n\t\n\tSiftController.prototype.publish = function publish (topic, value) {\n\t  this._proxy.postMessage({\n\t    method: 'notifyView',\n\t    params: {\n\t      topic: topic,\n\t      value: value\n\t    }\n\t  });\n\t};\n\t\n\tSiftController.prototype._registerMessageListeners = function _registerMessageListeners () {\n\t    var this$1 = this;\n\t\n\t  if (!this._proxy) return;\n\t  this._proxy.onmessage = function (e) {\n\t    // console.log('[SiftController::onmessage]: ', e.data);\n\t    var method = e.data.method;\n\t    if (this$1['_' + method]) {\n\t      this$1['_' + method](e.data.params);\n\t    }\n\t    else {\n\t      // console.log('[SiftController:onmessage]: method not implemented: ', method);\n\t    }\n\t  };\n\t};\n\t\n\tSiftController.prototype._init = function _init (params) {\n\t  // console.log('[SiftController::_init]: ', params);\n\t  this.storage = new SiftStorage();\n\t  this.storage.init(\n\t    new Storage({\n\t      type: 'SIFT',\n\t      siftGuid: params.siftGuid,\n\t      accountGuid: params.accountGuid,\n\t      schema: params.dbSchema\n\t    })\n\t  );\n\t  // Initialise sift details\n\t  this._guid = params.siftGuid;\n\t  this._account = params.accountGuid;\n\t  // Init is done, post a message to the iframe_controller\n\t  this._proxy.postMessage({\n\t    method: 'initCallback',\n\t    result: params\n\t  });\n\t};\n\t\n\tSiftController.prototype._terminate = function _terminate () {\n\t  if (!this._proxy) return;\n\t  // console.log('[SiftController::_terminate]');\n\t  this._proxy.close();\n\t};\n\t\n\tSiftController.prototype._postCallback = function _postCallback (params, _result) {\n\t  this._proxy.postMessage({\n\t    method: 'loadViewCallback',\n\t    params: {\n\t      user: { guid: this._account },\n\t      sift: { guid: this._guid },\n\t      type: params.type,\n\t      sizeClass: params.sizeClass,\n\t      result: _result\n\t    }\n\t  });\n\t};\n\t\n\tSiftController.prototype._loadView = function _loadView (params) {\n\t    var this$1 = this;\n\t\n\t  // console.log('[SiftController::_loadView]: ', params);\n\t  if (!this.loadView) {\n\t    console.error('[SiftController::_loadView]: Sift controller must implement the loadView method');\n\t    return;\n\t  }\n\t  // Invoke loadView method\n\t  var result = this.loadView({\n\t    sizeClass: params.sizeClass,\n\t    type: params.type,\n\t    params: params.data\n\t  });\n\t  // console.log('[SiftController::_loadView] loadView result: ', result);\n\t  if (result.data && 'function' === typeof result.data.then) {\n\t    if (result.html) {\n\t      this._postCallback(params, { html: result.html });\n\t    }\n\t    result.data.then(function (data) {\n\t      this$1._postCallback(params, { html: result.html, data: data });\n\t    }).catch(function (error) {\n\t      console.error('[SiftController::loadView]: promise rejected: ', error);\n\t    });\n\t  }\n\t  else {\n\t    this._postCallback(params, result);\n\t  }\n\t};\n\t\n\tSiftController.prototype._storageUpdated = function _storageUpdated (params) {\n\t    var this$1 = this;\n\t\n\t  // console.log('[SiftController::_storageUpdated]: ', params);\n\t  // Notify the * listeners\n\t  this.storage.publish('*', params);\n\t  params.forEach(function (b) {\n\t    // Notify the bucket listeners.\n\t    // TODO: send the list of keys instead of \"[b]\"\n\t    this$1.storage.publish(b, [b]);\n\t  });\n\t};\n\t\n\tSiftController.prototype._notifyController = function _notifyController (params) {\n\t  // console.log('[SiftController::_notifyController]: ', params);\n\t  this.view.publish(params.topic, params.value);\n\t};\n\t\n\tSiftController.prototype._emailComposer = function _emailComposer (params) {\n\t  // console.log('[SiftController::_emailComposer]: ', params);\n\t  this.emailclient.publish(params.topic, params.value);\n\t};\n\t\n\t/**\n\t * SiftView\n\t */\n\tfunction registerSiftView(siftView) {\n\t  console.log('[Redsift::registerSiftView]: registered');\n\t}\n\t\n\tfunction createSiftView(instanceMethods) {\n\t  return _create(SiftView, instanceMethods);\n\t}\n\t\n\t/**\n\t * SiftController\n\t */\n\tfunction createSiftController(instanceMethods) {\n\t  return _create(SiftController, instanceMethods);\n\t}\n\t\n\tfunction registerSiftController(siftController) {\n\t  console.log('[Redsift::registerSiftController]: registered');\n\t}\n\t\n\t/**\n\t * EmailClientController\n\t */\n\tfunction createEmailClientController(instanceMethods) {\n\t  return _create(EmailClientController, instanceMethods);\n\t}\n\t\n\tfunction registerEmailClientController(emailClientController) {\n\t  console.log('[Redsift::registerEmailClientController]: registered');\n\t}\n\t\n\t/**\n\t * Local functions\n\t */\n\tfunction _create(Base, methods) {\n\t  var Creature = function() {\n\t    Base.call(this);\n\t    if(this.init && typeof this.init === 'function') {\n\t      this.init();\n\t    }\n\t  };\n\t  Creature.prototype = Object.create(Base.prototype);\n\t  Creature.constructor = Creature;\n\t  Object.keys(methods).forEach(function (method) {\n\t    Creature.prototype[method] = methods[method];\n\t  });\n\t  return new Creature();\n\t}\n\t\n\texports.EmailClientController = EmailClientController;\n\texports.SiftController = SiftController;\n\texports.SiftStorage = SiftStorage;\n\texports.SiftView = SiftView;\n\texports.registerSiftView = registerSiftView;\n\texports.createSiftView = createSiftView;\n\texports.createSiftController = createSiftController;\n\texports.registerSiftController = registerSiftController;\n\texports.createEmailClientController = createEmailClientController;\n\texports.registerEmailClientController = registerEmailClientController;\n\t\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\t\n\t})));\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), (function() { return this; }())))\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/*global window, global*/\n\tvar util = __webpack_require__(3)\n\tvar assert = __webpack_require__(7)\n\tvar now = __webpack_require__(8)\n\t\n\tvar slice = Array.prototype.slice\n\tvar console\n\tvar times = {}\n\t\n\tif (typeof global !== \"undefined\" && global.console) {\n\t    console = global.console\n\t} else if (typeof window !== \"undefined\" && window.console) {\n\t    console = window.console\n\t} else {\n\t    console = {}\n\t}\n\t\n\tvar functions = [\n\t    [log, \"log\"],\n\t    [info, \"info\"],\n\t    [warn, \"warn\"],\n\t    [error, \"error\"],\n\t    [time, \"time\"],\n\t    [timeEnd, \"timeEnd\"],\n\t    [trace, \"trace\"],\n\t    [dir, \"dir\"],\n\t    [consoleAssert, \"assert\"]\n\t]\n\t\n\tfor (var i = 0; i < functions.length; i++) {\n\t    var tuple = functions[i]\n\t    var f = tuple[0]\n\t    var name = tuple[1]\n\t\n\t    if (!console[name]) {\n\t        console[name] = f\n\t    }\n\t}\n\t\n\tmodule.exports = console\n\t\n\tfunction log() {}\n\t\n\tfunction info() {\n\t    console.log.apply(console, arguments)\n\t}\n\t\n\tfunction warn() {\n\t    console.log.apply(console, arguments)\n\t}\n\t\n\tfunction error() {\n\t    console.warn.apply(console, arguments)\n\t}\n\t\n\tfunction time(label) {\n\t    times[label] = now()\n\t}\n\t\n\tfunction timeEnd(label) {\n\t    var time = times[label]\n\t    if (!time) {\n\t        throw new Error(\"No such label: \" + label)\n\t    }\n\t\n\t    var duration = now() - time\n\t    console.log(label + \": \" + duration + \"ms\")\n\t}\n\t\n\tfunction trace() {\n\t    var err = new Error()\n\t    err.name = \"Trace\"\n\t    err.message = util.format.apply(null, arguments)\n\t    console.error(err.stack)\n\t}\n\t\n\tfunction dir(object) {\n\t    console.log(util.inspect(object) + \"\\n\")\n\t}\n\t\n\tfunction consoleAssert(expression) {\n\t    if (!expression) {\n\t        var arr = slice.call(arguments, 1)\n\t        assert.ok(false, util.format.apply(null, arr))\n\t    }\n\t}\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global, process, console) {// Copyright Joyent, Inc. and other Node contributors.\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a\n\t// copy of this software and associated documentation files (the\n\t// \"Software\"), to deal in the Software without restriction, including\n\t// without limitation the rights to use, copy, modify, merge, publish,\n\t// distribute, sublicense, and/or sell copies of the Software, and to permit\n\t// persons to whom the Software is furnished to do so, subject to the\n\t// following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included\n\t// in all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t\n\tvar formatRegExp = /%[sdj%]/g;\n\texports.format = function(f) {\n\t  if (!isString(f)) {\n\t    var objects = [];\n\t    for (var i = 0; i < arguments.length; i++) {\n\t      objects.push(inspect(arguments[i]));\n\t    }\n\t    return objects.join(' ');\n\t  }\n\t\n\t  var i = 1;\n\t  var args = arguments;\n\t  var len = args.length;\n\t  var str = String(f).replace(formatRegExp, function(x) {\n\t    if (x === '%%') return '%';\n\t    if (i >= len) return x;\n\t    switch (x) {\n\t      case '%s': return String(args[i++]);\n\t      case '%d': return Number(args[i++]);\n\t      case '%j':\n\t        try {\n\t          return JSON.stringify(args[i++]);\n\t        } catch (_) {\n\t          return '[Circular]';\n\t        }\n\t      default:\n\t        return x;\n\t    }\n\t  });\n\t  for (var x = args[i]; i < len; x = args[++i]) {\n\t    if (isNull(x) || !isObject(x)) {\n\t      str += ' ' + x;\n\t    } else {\n\t      str += ' ' + inspect(x);\n\t    }\n\t  }\n\t  return str;\n\t};\n\t\n\t\n\t// Mark that a method should not be used.\n\t// Returns a modified function which warns once by default.\n\t// If --no-deprecation is set, then it is a no-op.\n\texports.deprecate = function(fn, msg) {\n\t  // Allow for deprecating things in the process of starting up.\n\t  if (isUndefined(global.process)) {\n\t    return function() {\n\t      return exports.deprecate(fn, msg).apply(this, arguments);\n\t    };\n\t  }\n\t\n\t  if (process.noDeprecation === true) {\n\t    return fn;\n\t  }\n\t\n\t  var warned = false;\n\t  function deprecated() {\n\t    if (!warned) {\n\t      if (process.throwDeprecation) {\n\t        throw new Error(msg);\n\t      } else if (process.traceDeprecation) {\n\t        console.trace(msg);\n\t      } else {\n\t        console.error(msg);\n\t      }\n\t      warned = true;\n\t    }\n\t    return fn.apply(this, arguments);\n\t  }\n\t\n\t  return deprecated;\n\t};\n\t\n\t\n\tvar debugs = {};\n\tvar debugEnviron;\n\texports.debuglog = function(set) {\n\t  if (isUndefined(debugEnviron))\n\t    debugEnviron = process.env.NODE_DEBUG || '';\n\t  set = set.toUpperCase();\n\t  if (!debugs[set]) {\n\t    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n\t      var pid = process.pid;\n\t      debugs[set] = function() {\n\t        var msg = exports.format.apply(exports, arguments);\n\t        console.error('%s %d: %s', set, pid, msg);\n\t      };\n\t    } else {\n\t      debugs[set] = function() {};\n\t    }\n\t  }\n\t  return debugs[set];\n\t};\n\t\n\t\n\t/**\n\t * Echos the value of a value. Trys to print the value out\n\t * in the best way possible given the different types.\n\t *\n\t * @param {Object} obj The object to print out.\n\t * @param {Object} opts Optional options object that alters the output.\n\t */\n\t/* legacy: obj, showHidden, depth, colors*/\n\tfunction inspect(obj, opts) {\n\t  // default options\n\t  var ctx = {\n\t    seen: [],\n\t    stylize: stylizeNoColor\n\t  };\n\t  // legacy...\n\t  if (arguments.length >= 3) ctx.depth = arguments[2];\n\t  if (arguments.length >= 4) ctx.colors = arguments[3];\n\t  if (isBoolean(opts)) {\n\t    // legacy...\n\t    ctx.showHidden = opts;\n\t  } else if (opts) {\n\t    // got an \"options\" object\n\t    exports._extend(ctx, opts);\n\t  }\n\t  // set default options\n\t  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n\t  if (isUndefined(ctx.depth)) ctx.depth = 2;\n\t  if (isUndefined(ctx.colors)) ctx.colors = false;\n\t  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n\t  if (ctx.colors) ctx.stylize = stylizeWithColor;\n\t  return formatValue(ctx, obj, ctx.depth);\n\t}\n\texports.inspect = inspect;\n\t\n\t\n\t// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\n\tinspect.colors = {\n\t  'bold' : [1, 22],\n\t  'italic' : [3, 23],\n\t  'underline' : [4, 24],\n\t  'inverse' : [7, 27],\n\t  'white' : [37, 39],\n\t  'grey' : [90, 39],\n\t  'black' : [30, 39],\n\t  'blue' : [34, 39],\n\t  'cyan' : [36, 39],\n\t  'green' : [32, 39],\n\t  'magenta' : [35, 39],\n\t  'red' : [31, 39],\n\t  'yellow' : [33, 39]\n\t};\n\t\n\t// Don't use 'blue' not visible on cmd.exe\n\tinspect.styles = {\n\t  'special': 'cyan',\n\t  'number': 'yellow',\n\t  'boolean': 'yellow',\n\t  'undefined': 'grey',\n\t  'null': 'bold',\n\t  'string': 'green',\n\t  'date': 'magenta',\n\t  // \"name\": intentionally not styling\n\t  'regexp': 'red'\n\t};\n\t\n\t\n\tfunction stylizeWithColor(str, styleType) {\n\t  var style = inspect.styles[styleType];\n\t\n\t  if (style) {\n\t    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n\t           '\\u001b[' + inspect.colors[style][1] + 'm';\n\t  } else {\n\t    return str;\n\t  }\n\t}\n\t\n\t\n\tfunction stylizeNoColor(str, styleType) {\n\t  return str;\n\t}\n\t\n\t\n\tfunction arrayToHash(array) {\n\t  var hash = {};\n\t\n\t  array.forEach(function(val, idx) {\n\t    hash[val] = true;\n\t  });\n\t\n\t  return hash;\n\t}\n\t\n\t\n\tfunction formatValue(ctx, value, recurseTimes) {\n\t  // Provide a hook for user-specified inspect functions.\n\t  // Check that value is an object with an inspect function on it\n\t  if (ctx.customInspect &&\n\t      value &&\n\t      isFunction(value.inspect) &&\n\t      // Filter out the util module, it's inspect function is special\n\t      value.inspect !== exports.inspect &&\n\t      // Also filter out any prototype objects using the circular check.\n\t      !(value.constructor && value.constructor.prototype === value)) {\n\t    var ret = value.inspect(recurseTimes, ctx);\n\t    if (!isString(ret)) {\n\t      ret = formatValue(ctx, ret, recurseTimes);\n\t    }\n\t    return ret;\n\t  }\n\t\n\t  // Primitive types cannot have properties\n\t  var primitive = formatPrimitive(ctx, value);\n\t  if (primitive) {\n\t    return primitive;\n\t  }\n\t\n\t  // Look up the keys of the object.\n\t  var keys = Object.keys(value);\n\t  var visibleKeys = arrayToHash(keys);\n\t\n\t  if (ctx.showHidden) {\n\t    keys = Object.getOwnPropertyNames(value);\n\t  }\n\t\n\t  // IE doesn't make error fields non-enumerable\n\t  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n\t  if (isError(value)\n\t      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n\t    return formatError(value);\n\t  }\n\t\n\t  // Some type of object without properties can be shortcutted.\n\t  if (keys.length === 0) {\n\t    if (isFunction(value)) {\n\t      var name = value.name ? ': ' + value.name : '';\n\t      return ctx.stylize('[Function' + name + ']', 'special');\n\t    }\n\t    if (isRegExp(value)) {\n\t      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n\t    }\n\t    if (isDate(value)) {\n\t      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n\t    }\n\t    if (isError(value)) {\n\t      return formatError(value);\n\t    }\n\t  }\n\t\n\t  var base = '', array = false, braces = ['{', '}'];\n\t\n\t  // Make Array say that they are Array\n\t  if (isArray(value)) {\n\t    array = true;\n\t    braces = ['[', ']'];\n\t  }\n\t\n\t  // Make functions say that they are functions\n\t  if (isFunction(value)) {\n\t    var n = value.name ? ': ' + value.name : '';\n\t    base = ' [Function' + n + ']';\n\t  }\n\t\n\t  // Make RegExps say that they are RegExps\n\t  if (isRegExp(value)) {\n\t    base = ' ' + RegExp.prototype.toString.call(value);\n\t  }\n\t\n\t  // Make dates with properties first say the date\n\t  if (isDate(value)) {\n\t    base = ' ' + Date.prototype.toUTCString.call(value);\n\t  }\n\t\n\t  // Make error with message first say the error\n\t  if (isError(value)) {\n\t    base = ' ' + formatError(value);\n\t  }\n\t\n\t  if (keys.length === 0 && (!array || value.length == 0)) {\n\t    return braces[0] + base + braces[1];\n\t  }\n\t\n\t  if (recurseTimes < 0) {\n\t    if (isRegExp(value)) {\n\t      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n\t    } else {\n\t      return ctx.stylize('[Object]', 'special');\n\t    }\n\t  }\n\t\n\t  ctx.seen.push(value);\n\t\n\t  var output;\n\t  if (array) {\n\t    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n\t  } else {\n\t    output = keys.map(function(key) {\n\t      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n\t    });\n\t  }\n\t\n\t  ctx.seen.pop();\n\t\n\t  return reduceToSingleString(output, base, braces);\n\t}\n\t\n\t\n\tfunction formatPrimitive(ctx, value) {\n\t  if (isUndefined(value))\n\t    return ctx.stylize('undefined', 'undefined');\n\t  if (isString(value)) {\n\t    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n\t                                             .replace(/'/g, \"\\\\'\")\n\t                                             .replace(/\\\\\"/g, '\"') + '\\'';\n\t    return ctx.stylize(simple, 'string');\n\t  }\n\t  if (isNumber(value))\n\t    return ctx.stylize('' + value, 'number');\n\t  if (isBoolean(value))\n\t    return ctx.stylize('' + value, 'boolean');\n\t  // For some reason typeof null is \"object\", so special case here.\n\t  if (isNull(value))\n\t    return ctx.stylize('null', 'null');\n\t}\n\t\n\t\n\tfunction formatError(value) {\n\t  return '[' + Error.prototype.toString.call(value) + ']';\n\t}\n\t\n\t\n\tfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n\t  var output = [];\n\t  for (var i = 0, l = value.length; i < l; ++i) {\n\t    if (hasOwnProperty(value, String(i))) {\n\t      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n\t          String(i), true));\n\t    } else {\n\t      output.push('');\n\t    }\n\t  }\n\t  keys.forEach(function(key) {\n\t    if (!key.match(/^\\d+$/)) {\n\t      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n\t          key, true));\n\t    }\n\t  });\n\t  return output;\n\t}\n\t\n\t\n\tfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n\t  var name, str, desc;\n\t  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n\t  if (desc.get) {\n\t    if (desc.set) {\n\t      str = ctx.stylize('[Getter/Setter]', 'special');\n\t    } else {\n\t      str = ctx.stylize('[Getter]', 'special');\n\t    }\n\t  } else {\n\t    if (desc.set) {\n\t      str = ctx.stylize('[Setter]', 'special');\n\t    }\n\t  }\n\t  if (!hasOwnProperty(visibleKeys, key)) {\n\t    name = '[' + key + ']';\n\t  }\n\t  if (!str) {\n\t    if (ctx.seen.indexOf(desc.value) < 0) {\n\t      if (isNull(recurseTimes)) {\n\t        str = formatValue(ctx, desc.value, null);\n\t      } else {\n\t        str = formatValue(ctx, desc.value, recurseTimes - 1);\n\t      }\n\t      if (str.indexOf('\\n') > -1) {\n\t        if (array) {\n\t          str = str.split('\\n').map(function(line) {\n\t            return '  ' + line;\n\t          }).join('\\n').substr(2);\n\t        } else {\n\t          str = '\\n' + str.split('\\n').map(function(line) {\n\t            return '   ' + line;\n\t          }).join('\\n');\n\t        }\n\t      }\n\t    } else {\n\t      str = ctx.stylize('[Circular]', 'special');\n\t    }\n\t  }\n\t  if (isUndefined(name)) {\n\t    if (array && key.match(/^\\d+$/)) {\n\t      return str;\n\t    }\n\t    name = JSON.stringify('' + key);\n\t    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n\t      name = name.substr(1, name.length - 2);\n\t      name = ctx.stylize(name, 'name');\n\t    } else {\n\t      name = name.replace(/'/g, \"\\\\'\")\n\t                 .replace(/\\\\\"/g, '\"')\n\t                 .replace(/(^\"|\"$)/g, \"'\");\n\t      name = ctx.stylize(name, 'string');\n\t    }\n\t  }\n\t\n\t  return name + ': ' + str;\n\t}\n\t\n\t\n\tfunction reduceToSingleString(output, base, braces) {\n\t  var numLinesEst = 0;\n\t  var length = output.reduce(function(prev, cur) {\n\t    numLinesEst++;\n\t    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n\t    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n\t  }, 0);\n\t\n\t  if (length > 60) {\n\t    return braces[0] +\n\t           (base === '' ? '' : base + '\\n ') +\n\t           ' ' +\n\t           output.join(',\\n  ') +\n\t           ' ' +\n\t           braces[1];\n\t  }\n\t\n\t  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n\t}\n\t\n\t\n\t// NOTE: These type checking functions intentionally don't use `instanceof`\n\t// because it is fragile and can be easily faked with `Object.create()`.\n\tfunction isArray(ar) {\n\t  return Array.isArray(ar);\n\t}\n\texports.isArray = isArray;\n\t\n\tfunction isBoolean(arg) {\n\t  return typeof arg === 'boolean';\n\t}\n\texports.isBoolean = isBoolean;\n\t\n\tfunction isNull(arg) {\n\t  return arg === null;\n\t}\n\texports.isNull = isNull;\n\t\n\tfunction isNullOrUndefined(arg) {\n\t  return arg == null;\n\t}\n\texports.isNullOrUndefined = isNullOrUndefined;\n\t\n\tfunction isNumber(arg) {\n\t  return typeof arg === 'number';\n\t}\n\texports.isNumber = isNumber;\n\t\n\tfunction isString(arg) {\n\t  return typeof arg === 'string';\n\t}\n\texports.isString = isString;\n\t\n\tfunction isSymbol(arg) {\n\t  return typeof arg === 'symbol';\n\t}\n\texports.isSymbol = isSymbol;\n\t\n\tfunction isUndefined(arg) {\n\t  return arg === void 0;\n\t}\n\texports.isUndefined = isUndefined;\n\t\n\tfunction isRegExp(re) {\n\t  return isObject(re) && objectToString(re) === '[object RegExp]';\n\t}\n\texports.isRegExp = isRegExp;\n\t\n\tfunction isObject(arg) {\n\t  return typeof arg === 'object' && arg !== null;\n\t}\n\texports.isObject = isObject;\n\t\n\tfunction isDate(d) {\n\t  return isObject(d) && objectToString(d) === '[object Date]';\n\t}\n\texports.isDate = isDate;\n\t\n\tfunction isError(e) {\n\t  return isObject(e) &&\n\t      (objectToString(e) === '[object Error]' || e instanceof Error);\n\t}\n\texports.isError = isError;\n\t\n\tfunction isFunction(arg) {\n\t  return typeof arg === 'function';\n\t}\n\texports.isFunction = isFunction;\n\t\n\tfunction isPrimitive(arg) {\n\t  return arg === null ||\n\t         typeof arg === 'boolean' ||\n\t         typeof arg === 'number' ||\n\t         typeof arg === 'string' ||\n\t         typeof arg === 'symbol' ||  // ES6 symbol\n\t         typeof arg === 'undefined';\n\t}\n\texports.isPrimitive = isPrimitive;\n\t\n\texports.isBuffer = __webpack_require__(5);\n\t\n\tfunction objectToString(o) {\n\t  return Object.prototype.toString.call(o);\n\t}\n\t\n\t\n\tfunction pad(n) {\n\t  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n\t}\n\t\n\t\n\tvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n\t              'Oct', 'Nov', 'Dec'];\n\t\n\t// 26 Feb 16:19:34\n\tfunction timestamp() {\n\t  var d = new Date();\n\t  var time = [pad(d.getHours()),\n\t              pad(d.getMinutes()),\n\t              pad(d.getSeconds())].join(':');\n\t  return [d.getDate(), months[d.getMonth()], time].join(' ');\n\t}\n\t\n\t\n\t// log is just a thin wrapper to console.log that prepends a timestamp\n\texports.log = function() {\n\t  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n\t};\n\t\n\t\n\t/**\n\t * Inherit the prototype methods from one constructor into another.\n\t *\n\t * The Function.prototype.inherits from lang.js rewritten as a standalone\n\t * function (not on Function.prototype). NOTE: If this file is to be loaded\n\t * during bootstrapping this function needs to be rewritten using some native\n\t * functions as prototype setup using normal JavaScript does not work as\n\t * expected during bootstrapping (see mirror.js in r114903).\n\t *\n\t * @param {function} ctor Constructor function which needs to inherit the\n\t *     prototype.\n\t * @param {function} superCtor Constructor function to inherit prototype from.\n\t */\n\texports.inherits = __webpack_require__(6);\n\t\n\texports._extend = function(origin, add) {\n\t  // Don't do anything if add isn't an object\n\t  if (!add || !isObject(add)) return origin;\n\t\n\t  var keys = Object.keys(add);\n\t  var i = keys.length;\n\t  while (i--) {\n\t    origin[keys[i]] = add[keys[i]];\n\t  }\n\t  return origin;\n\t};\n\t\n\tfunction hasOwnProperty(obj, prop) {\n\t  return Object.prototype.hasOwnProperty.call(obj, prop);\n\t}\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(4), __webpack_require__(2)))\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t// shim for using process in browser\n\tvar process = module.exports = {};\n\t\n\t// cached from whatever global is present so that test runners that stub it\n\t// don't break things.  But we need to wrap it in a try catch in case it is\n\t// wrapped in strict mode code which doesn't define any globals.  It's inside a\n\t// function because try/catches deoptimize in certain engines.\n\t\n\tvar cachedSetTimeout;\n\tvar cachedClearTimeout;\n\t\n\tfunction defaultSetTimout() {\n\t    throw new Error('setTimeout has not been defined');\n\t}\n\tfunction defaultClearTimeout () {\n\t    throw new Error('clearTimeout has not been defined');\n\t}\n\t(function () {\n\t    try {\n\t        if (typeof setTimeout === 'function') {\n\t            cachedSetTimeout = setTimeout;\n\t        } else {\n\t            cachedSetTimeout = defaultSetTimout;\n\t        }\n\t    } catch (e) {\n\t        cachedSetTimeout = defaultSetTimout;\n\t    }\n\t    try {\n\t        if (typeof clearTimeout === 'function') {\n\t            cachedClearTimeout = clearTimeout;\n\t        } else {\n\t            cachedClearTimeout = defaultClearTimeout;\n\t        }\n\t    } catch (e) {\n\t        cachedClearTimeout = defaultClearTimeout;\n\t    }\n\t} ())\n\tfunction runTimeout(fun) {\n\t    if (cachedSetTimeout === setTimeout) {\n\t        //normal enviroments in sane situations\n\t        return setTimeout(fun, 0);\n\t    }\n\t    // if setTimeout wasn't available but was latter defined\n\t    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n\t        cachedSetTimeout = setTimeout;\n\t        return setTimeout(fun, 0);\n\t    }\n\t    try {\n\t        // when when somebody has screwed with setTimeout but no I.E. maddness\n\t        return cachedSetTimeout(fun, 0);\n\t    } catch(e){\n\t        try {\n\t            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n\t            return cachedSetTimeout.call(null, fun, 0);\n\t        } catch(e){\n\t            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n\t            return cachedSetTimeout.call(this, fun, 0);\n\t        }\n\t    }\n\t\n\t\n\t}\n\tfunction runClearTimeout(marker) {\n\t    if (cachedClearTimeout === clearTimeout) {\n\t        //normal enviroments in sane situations\n\t        return clearTimeout(marker);\n\t    }\n\t    // if clearTimeout wasn't available but was latter defined\n\t    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n\t        cachedClearTimeout = clearTimeout;\n\t        return clearTimeout(marker);\n\t    }\n\t    try {\n\t        // when when somebody has screwed with setTimeout but no I.E. maddness\n\t        return cachedClearTimeout(marker);\n\t    } catch (e){\n\t        try {\n\t            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n\t            return cachedClearTimeout.call(null, marker);\n\t        } catch (e){\n\t            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n\t            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n\t            return cachedClearTimeout.call(this, marker);\n\t        }\n\t    }\n\t\n\t\n\t\n\t}\n\tvar queue = [];\n\tvar draining = false;\n\tvar currentQueue;\n\tvar queueIndex = -1;\n\t\n\tfunction cleanUpNextTick() {\n\t    if (!draining || !currentQueue) {\n\t        return;\n\t    }\n\t    draining = false;\n\t    if (currentQueue.length) {\n\t        queue = currentQueue.concat(queue);\n\t    } else {\n\t        queueIndex = -1;\n\t    }\n\t    if (queue.length) {\n\t        drainQueue();\n\t    }\n\t}\n\t\n\tfunction drainQueue() {\n\t    if (draining) {\n\t        return;\n\t    }\n\t    var timeout = runTimeout(cleanUpNextTick);\n\t    draining = true;\n\t\n\t    var len = queue.length;\n\t    while(len) {\n\t        currentQueue = queue;\n\t        queue = [];\n\t        while (++queueIndex < len) {\n\t            if (currentQueue) {\n\t                currentQueue[queueIndex].run();\n\t            }\n\t        }\n\t        queueIndex = -1;\n\t        len = queue.length;\n\t    }\n\t    currentQueue = null;\n\t    draining = false;\n\t    runClearTimeout(timeout);\n\t}\n\t\n\tprocess.nextTick = function (fun) {\n\t    var args = new Array(arguments.length - 1);\n\t    if (arguments.length > 1) {\n\t        for (var i = 1; i < arguments.length; i++) {\n\t            args[i - 1] = arguments[i];\n\t        }\n\t    }\n\t    queue.push(new Item(fun, args));\n\t    if (queue.length === 1 && !draining) {\n\t        runTimeout(drainQueue);\n\t    }\n\t};\n\t\n\t// v8 likes predictible objects\n\tfunction Item(fun, array) {\n\t    this.fun = fun;\n\t    this.array = array;\n\t}\n\tItem.prototype.run = function () {\n\t    this.fun.apply(null, this.array);\n\t};\n\tprocess.title = 'browser';\n\tprocess.browser = true;\n\tprocess.env = {};\n\tprocess.argv = [];\n\tprocess.version = ''; // empty string to avoid regexp issues\n\tprocess.versions = {};\n\t\n\tfunction noop() {}\n\t\n\tprocess.on = noop;\n\tprocess.addListener = noop;\n\tprocess.once = noop;\n\tprocess.off = noop;\n\tprocess.removeListener = noop;\n\tprocess.removeAllListeners = noop;\n\tprocess.emit = noop;\n\t\n\tprocess.binding = function (name) {\n\t    throw new Error('process.binding is not supported');\n\t};\n\t\n\tprocess.cwd = function () { return '/' };\n\tprocess.chdir = function (dir) {\n\t    throw new Error('process.chdir is not supported');\n\t};\n\tprocess.umask = function() { return 0; };\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function isBuffer(arg) {\n\t  return arg && typeof arg === 'object'\n\t    && typeof arg.copy === 'function'\n\t    && typeof arg.fill === 'function'\n\t    && typeof arg.readUInt8 === 'function';\n\t}\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\tif (typeof Object.create === 'function') {\n\t  // implementation from standard node.js 'util' module\n\t  module.exports = function inherits(ctor, superCtor) {\n\t    ctor.super_ = superCtor\n\t    ctor.prototype = Object.create(superCtor.prototype, {\n\t      constructor: {\n\t        value: ctor,\n\t        enumerable: false,\n\t        writable: true,\n\t        configurable: true\n\t      }\n\t    });\n\t  };\n\t} else {\n\t  // old school shim for old browsers\n\t  module.exports = function inherits(ctor, superCtor) {\n\t    ctor.super_ = superCtor\n\t    var TempCtor = function () {}\n\t    TempCtor.prototype = superCtor.prototype\n\t    ctor.prototype = new TempCtor()\n\t    ctor.prototype.constructor = ctor\n\t  }\n\t}\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {'use strict';\n\t\n\t// compare and isBuffer taken from https://github.com/feross/buffer/blob/680e9e5e488f22aac27599a57dc844a6315928dd/index.js\n\t// original notice:\n\t\n\t/*!\n\t * The buffer module from node.js, for the browser.\n\t *\n\t * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n\t * @license  MIT\n\t */\n\tfunction compare(a, b) {\n\t  if (a === b) {\n\t    return 0;\n\t  }\n\t\n\t  var x = a.length;\n\t  var y = b.length;\n\t\n\t  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n\t    if (a[i] !== b[i]) {\n\t      x = a[i];\n\t      y = b[i];\n\t      break;\n\t    }\n\t  }\n\t\n\t  if (x < y) {\n\t    return -1;\n\t  }\n\t  if (y < x) {\n\t    return 1;\n\t  }\n\t  return 0;\n\t}\n\tfunction isBuffer(b) {\n\t  if (global.Buffer && typeof global.Buffer.isBuffer === 'function') {\n\t    return global.Buffer.isBuffer(b);\n\t  }\n\t  return !!(b != null && b._isBuffer);\n\t}\n\t\n\t// based on node assert, original notice:\n\t\n\t// http://wiki.commonjs.org/wiki/Unit_Testing/1.0\n\t//\n\t// THIS IS NOT TESTED NOR LIKELY TO WORK OUTSIDE V8!\n\t//\n\t// Originally from narwhal.js (http://narwhaljs.org)\n\t// Copyright (c) 2009 Thomas Robinson <280north.com>\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a copy\n\t// of this software and associated documentation files (the 'Software'), to\n\t// deal in the Software without restriction, including without limitation the\n\t// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n\t// sell copies of the Software, and to permit persons to whom the Software is\n\t// furnished to do so, subject to the following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included in\n\t// all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\t// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\t// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\t// AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n\t// ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n\t// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t\n\tvar util = __webpack_require__(3);\n\tvar hasOwn = Object.prototype.hasOwnProperty;\n\tvar pSlice = Array.prototype.slice;\n\tvar functionsHaveNames = (function () {\n\t  return function foo() {}.name === 'foo';\n\t}());\n\tfunction pToString (obj) {\n\t  return Object.prototype.toString.call(obj);\n\t}\n\tfunction isView(arrbuf) {\n\t  if (isBuffer(arrbuf)) {\n\t    return false;\n\t  }\n\t  if (typeof global.ArrayBuffer !== 'function') {\n\t    return false;\n\t  }\n\t  if (typeof ArrayBuffer.isView === 'function') {\n\t    return ArrayBuffer.isView(arrbuf);\n\t  }\n\t  if (!arrbuf) {\n\t    return false;\n\t  }\n\t  if (arrbuf instanceof DataView) {\n\t    return true;\n\t  }\n\t  if (arrbuf.buffer && arrbuf.buffer instanceof ArrayBuffer) {\n\t    return true;\n\t  }\n\t  return false;\n\t}\n\t// 1. The assert module provides functions that throw\n\t// AssertionError's when particular conditions are not met. The\n\t// assert module must conform to the following interface.\n\t\n\tvar assert = module.exports = ok;\n\t\n\t// 2. The AssertionError is defined in assert.\n\t// new assert.AssertionError({ message: message,\n\t//                             actual: actual,\n\t//                             expected: expected })\n\t\n\tvar regex = /\\s*function\\s+([^\\(\\s]*)\\s*/;\n\t// based on https://github.com/ljharb/function.prototype.name/blob/adeeeec8bfcc6068b187d7d9fb3d5bb1d3a30899/implementation.js\n\tfunction getName(func) {\n\t  if (!util.isFunction(func)) {\n\t    return;\n\t  }\n\t  if (functionsHaveNames) {\n\t    return func.name;\n\t  }\n\t  var str = func.toString();\n\t  var match = str.match(regex);\n\t  return match && match[1];\n\t}\n\tassert.AssertionError = function AssertionError(options) {\n\t  this.name = 'AssertionError';\n\t  this.actual = options.actual;\n\t  this.expected = options.expected;\n\t  this.operator = options.operator;\n\t  if (options.message) {\n\t    this.message = options.message;\n\t    this.generatedMessage = false;\n\t  } else {\n\t    this.message = getMessage(this);\n\t    this.generatedMessage = true;\n\t  }\n\t  var stackStartFunction = options.stackStartFunction || fail;\n\t  if (Error.captureStackTrace) {\n\t    Error.captureStackTrace(this, stackStartFunction);\n\t  } else {\n\t    // non v8 browsers so we can have a stacktrace\n\t    var err = new Error();\n\t    if (err.stack) {\n\t      var out = err.stack;\n\t\n\t      // try to strip useless frames\n\t      var fn_name = getName(stackStartFunction);\n\t      var idx = out.indexOf('\\n' + fn_name);\n\t      if (idx >= 0) {\n\t        // once we have located the function frame\n\t        // we need to strip out everything before it (and its line)\n\t        var next_line = out.indexOf('\\n', idx + 1);\n\t        out = out.substring(next_line + 1);\n\t      }\n\t\n\t      this.stack = out;\n\t    }\n\t  }\n\t};\n\t\n\t// assert.AssertionError instanceof Error\n\tutil.inherits(assert.AssertionError, Error);\n\t\n\tfunction truncate(s, n) {\n\t  if (typeof s === 'string') {\n\t    return s.length < n ? s : s.slice(0, n);\n\t  } else {\n\t    return s;\n\t  }\n\t}\n\tfunction inspect(something) {\n\t  if (functionsHaveNames || !util.isFunction(something)) {\n\t    return util.inspect(something);\n\t  }\n\t  var rawname = getName(something);\n\t  var name = rawname ? ': ' + rawname : '';\n\t  return '[Function' +  name + ']';\n\t}\n\tfunction getMessage(self) {\n\t  return truncate(inspect(self.actual), 128) + ' ' +\n\t         self.operator + ' ' +\n\t         truncate(inspect(self.expected), 128);\n\t}\n\t\n\t// At present only the three keys mentioned above are used and\n\t// understood by the spec. Implementations or sub modules can pass\n\t// other keys to the AssertionError's constructor - they will be\n\t// ignored.\n\t\n\t// 3. All of the following functions must throw an AssertionError\n\t// when a corresponding condition is not met, with a message that\n\t// may be undefined if not provided.  All assertion methods provide\n\t// both the actual and expected values to the assertion error for\n\t// display purposes.\n\t\n\tfunction fail(actual, expected, message, operator, stackStartFunction) {\n\t  throw new assert.AssertionError({\n\t    message: message,\n\t    actual: actual,\n\t    expected: expected,\n\t    operator: operator,\n\t    stackStartFunction: stackStartFunction\n\t  });\n\t}\n\t\n\t// EXTENSION! allows for well behaved errors defined elsewhere.\n\tassert.fail = fail;\n\t\n\t// 4. Pure assertion tests whether a value is truthy, as determined\n\t// by !!guard.\n\t// assert.ok(guard, message_opt);\n\t// This statement is equivalent to assert.equal(true, !!guard,\n\t// message_opt);. To test strictly for the value true, use\n\t// assert.strictEqual(true, guard, message_opt);.\n\t\n\tfunction ok(value, message) {\n\t  if (!value) fail(value, true, message, '==', assert.ok);\n\t}\n\tassert.ok = ok;\n\t\n\t// 5. The equality assertion tests shallow, coercive equality with\n\t// ==.\n\t// assert.equal(actual, expected, message_opt);\n\t\n\tassert.equal = function equal(actual, expected, message) {\n\t  if (actual != expected) fail(actual, expected, message, '==', assert.equal);\n\t};\n\t\n\t// 6. The non-equality assertion tests for whether two objects are not equal\n\t// with != assert.notEqual(actual, expected, message_opt);\n\t\n\tassert.notEqual = function notEqual(actual, expected, message) {\n\t  if (actual == expected) {\n\t    fail(actual, expected, message, '!=', assert.notEqual);\n\t  }\n\t};\n\t\n\t// 7. The equivalence assertion tests a deep equality relation.\n\t// assert.deepEqual(actual, expected, message_opt);\n\t\n\tassert.deepEqual = function deepEqual(actual, expected, message) {\n\t  if (!_deepEqual(actual, expected, false)) {\n\t    fail(actual, expected, message, 'deepEqual', assert.deepEqual);\n\t  }\n\t};\n\t\n\tassert.deepStrictEqual = function deepStrictEqual(actual, expected, message) {\n\t  if (!_deepEqual(actual, expected, true)) {\n\t    fail(actual, expected, message, 'deepStrictEqual', assert.deepStrictEqual);\n\t  }\n\t};\n\t\n\tfunction _deepEqual(actual, expected, strict, memos) {\n\t  // 7.1. All identical values are equivalent, as determined by ===.\n\t  if (actual === expected) {\n\t    return true;\n\t  } else if (isBuffer(actual) && isBuffer(expected)) {\n\t    return compare(actual, expected) === 0;\n\t\n\t  // 7.2. If the expected value is a Date object, the actual value is\n\t  // equivalent if it is also a Date object that refers to the same time.\n\t  } else if (util.isDate(actual) && util.isDate(expected)) {\n\t    return actual.getTime() === expected.getTime();\n\t\n\t  // 7.3 If the expected value is a RegExp object, the actual value is\n\t  // equivalent if it is also a RegExp object with the same source and\n\t  // properties (`global`, `multiline`, `lastIndex`, `ignoreCase`).\n\t  } else if (util.isRegExp(actual) && util.isRegExp(expected)) {\n\t    return actual.source === expected.source &&\n\t           actual.global === expected.global &&\n\t           actual.multiline === expected.multiline &&\n\t           actual.lastIndex === expected.lastIndex &&\n\t           actual.ignoreCase === expected.ignoreCase;\n\t\n\t  // 7.4. Other pairs that do not both pass typeof value == 'object',\n\t  // equivalence is determined by ==.\n\t  } else if ((actual === null || typeof actual !== 'object') &&\n\t             (expected === null || typeof expected !== 'object')) {\n\t    return strict ? actual === expected : actual == expected;\n\t\n\t  // If both values are instances of typed arrays, wrap their underlying\n\t  // ArrayBuffers in a Buffer each to increase performance\n\t  // This optimization requires the arrays to have the same type as checked by\n\t  // Object.prototype.toString (aka pToString). Never perform binary\n\t  // comparisons for Float*Arrays, though, since e.g. +0 === -0 but their\n\t  // bit patterns are not identical.\n\t  } else if (isView(actual) && isView(expected) &&\n\t             pToString(actual) === pToString(expected) &&\n\t             !(actual instanceof Float32Array ||\n\t               actual instanceof Float64Array)) {\n\t    return compare(new Uint8Array(actual.buffer),\n\t                   new Uint8Array(expected.buffer)) === 0;\n\t\n\t  // 7.5 For all other Object pairs, including Array objects, equivalence is\n\t  // determined by having the same number of owned properties (as verified\n\t  // with Object.prototype.hasOwnProperty.call), the same set of keys\n\t  // (although not necessarily the same order), equivalent values for every\n\t  // corresponding key, and an identical 'prototype' property. Note: this\n\t  // accounts for both named and indexed properties on Arrays.\n\t  } else if (isBuffer(actual) !== isBuffer(expected)) {\n\t    return false;\n\t  } else {\n\t    memos = memos || {actual: [], expected: []};\n\t\n\t    var actualIndex = memos.actual.indexOf(actual);\n\t    if (actualIndex !== -1) {\n\t      if (actualIndex === memos.expected.indexOf(expected)) {\n\t        return true;\n\t      }\n\t    }\n\t\n\t    memos.actual.push(actual);\n\t    memos.expected.push(expected);\n\t\n\t    return objEquiv(actual, expected, strict, memos);\n\t  }\n\t}\n\t\n\tfunction isArguments(object) {\n\t  return Object.prototype.toString.call(object) == '[object Arguments]';\n\t}\n\t\n\tfunction objEquiv(a, b, strict, actualVisitedObjects) {\n\t  if (a === null || a === undefined || b === null || b === undefined)\n\t    return false;\n\t  // if one is a primitive, the other must be same\n\t  if (util.isPrimitive(a) || util.isPrimitive(b))\n\t    return a === b;\n\t  if (strict && Object.getPrototypeOf(a) !== Object.getPrototypeOf(b))\n\t    return false;\n\t  var aIsArgs = isArguments(a);\n\t  var bIsArgs = isArguments(b);\n\t  if ((aIsArgs && !bIsArgs) || (!aIsArgs && bIsArgs))\n\t    return false;\n\t  if (aIsArgs) {\n\t    a = pSlice.call(a);\n\t    b = pSlice.call(b);\n\t    return _deepEqual(a, b, strict);\n\t  }\n\t  var ka = objectKeys(a);\n\t  var kb = objectKeys(b);\n\t  var key, i;\n\t  // having the same number of owned properties (keys incorporates\n\t  // hasOwnProperty)\n\t  if (ka.length !== kb.length)\n\t    return false;\n\t  //the same set of keys (although not necessarily the same order),\n\t  ka.sort();\n\t  kb.sort();\n\t  //~~~cheap key test\n\t  for (i = ka.length - 1; i >= 0; i--) {\n\t    if (ka[i] !== kb[i])\n\t      return false;\n\t  }\n\t  //equivalent values for every corresponding key, and\n\t  //~~~possibly expensive deep test\n\t  for (i = ka.length - 1; i >= 0; i--) {\n\t    key = ka[i];\n\t    if (!_deepEqual(a[key], b[key], strict, actualVisitedObjects))\n\t      return false;\n\t  }\n\t  return true;\n\t}\n\t\n\t// 8. The non-equivalence assertion tests for any deep inequality.\n\t// assert.notDeepEqual(actual, expected, message_opt);\n\t\n\tassert.notDeepEqual = function notDeepEqual(actual, expected, message) {\n\t  if (_deepEqual(actual, expected, false)) {\n\t    fail(actual, expected, message, 'notDeepEqual', assert.notDeepEqual);\n\t  }\n\t};\n\t\n\tassert.notDeepStrictEqual = notDeepStrictEqual;\n\tfunction notDeepStrictEqual(actual, expected, message) {\n\t  if (_deepEqual(actual, expected, true)) {\n\t    fail(actual, expected, message, 'notDeepStrictEqual', notDeepStrictEqual);\n\t  }\n\t}\n\t\n\t\n\t// 9. The strict equality assertion tests strict equality, as determined by ===.\n\t// assert.strictEqual(actual, expected, message_opt);\n\t\n\tassert.strictEqual = function strictEqual(actual, expected, message) {\n\t  if (actual !== expected) {\n\t    fail(actual, expected, message, '===', assert.strictEqual);\n\t  }\n\t};\n\t\n\t// 10. The strict non-equality assertion tests for strict inequality, as\n\t// determined by !==.  assert.notStrictEqual(actual, expected, message_opt);\n\t\n\tassert.notStrictEqual = function notStrictEqual(actual, expected, message) {\n\t  if (actual === expected) {\n\t    fail(actual, expected, message, '!==', assert.notStrictEqual);\n\t  }\n\t};\n\t\n\tfunction expectedException(actual, expected) {\n\t  if (!actual || !expected) {\n\t    return false;\n\t  }\n\t\n\t  if (Object.prototype.toString.call(expected) == '[object RegExp]') {\n\t    return expected.test(actual);\n\t  }\n\t\n\t  try {\n\t    if (actual instanceof expected) {\n\t      return true;\n\t    }\n\t  } catch (e) {\n\t    // Ignore.  The instanceof check doesn't work for arrow functions.\n\t  }\n\t\n\t  if (Error.isPrototypeOf(expected)) {\n\t    return false;\n\t  }\n\t\n\t  return expected.call({}, actual) === true;\n\t}\n\t\n\tfunction _tryBlock(block) {\n\t  var error;\n\t  try {\n\t    block();\n\t  } catch (e) {\n\t    error = e;\n\t  }\n\t  return error;\n\t}\n\t\n\tfunction _throws(shouldThrow, block, expected, message) {\n\t  var actual;\n\t\n\t  if (typeof block !== 'function') {\n\t    throw new TypeError('\"block\" argument must be a function');\n\t  }\n\t\n\t  if (typeof expected === 'string') {\n\t    message = expected;\n\t    expected = null;\n\t  }\n\t\n\t  actual = _tryBlock(block);\n\t\n\t  message = (expected && expected.name ? ' (' + expected.name + ').' : '.') +\n\t            (message ? ' ' + message : '.');\n\t\n\t  if (shouldThrow && !actual) {\n\t    fail(actual, expected, 'Missing expected exception' + message);\n\t  }\n\t\n\t  var userProvidedMessage = typeof message === 'string';\n\t  var isUnwantedException = !shouldThrow && util.isError(actual);\n\t  var isUnexpectedException = !shouldThrow && actual && !expected;\n\t\n\t  if ((isUnwantedException &&\n\t      userProvidedMessage &&\n\t      expectedException(actual, expected)) ||\n\t      isUnexpectedException) {\n\t    fail(actual, expected, 'Got unwanted exception' + message);\n\t  }\n\t\n\t  if ((shouldThrow && actual && expected &&\n\t      !expectedException(actual, expected)) || (!shouldThrow && actual)) {\n\t    throw actual;\n\t  }\n\t}\n\t\n\t// 11. Expected to throw an error:\n\t// assert.throws(block, Error_opt, message_opt);\n\t\n\tassert.throws = function(block, /*optional*/error, /*optional*/message) {\n\t  _throws(true, block, error, message);\n\t};\n\t\n\t// EXTENSION! This is annoying to write outside this module.\n\tassert.doesNotThrow = function(block, /*optional*/error, /*optional*/message) {\n\t  _throws(false, block, error, message);\n\t};\n\t\n\tassert.ifError = function(err) { if (err) throw err; };\n\t\n\tvar objectKeys = Object.keys || function (obj) {\n\t  var keys = [];\n\t  for (var key in obj) {\n\t    if (hasOwn.call(obj, key)) keys.push(key);\n\t  }\n\t  return keys;\n\t};\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 8 */\n/***/ function(module, exports) {\n\n\tmodule.exports = now\n\t\n\tfunction now() {\n\t    return new Date().getTime()\n\t}\n\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/*\n\t * Copyright (c) 2016, Jeff Hlywa (jhlywa@gmail.com)\n\t * All rights reserved.\n\t *\n\t * Redistribution and use in source and binary forms, with or without\n\t * modification, are permitted provided that the following conditions are met:\n\t *\n\t * 1. Redistributions of source code must retain the above copyright notice,\n\t *    this list of conditions and the following disclaimer.\n\t * 2. Redistributions in binary form must reproduce the above copyright notice,\n\t *    this list of conditions and the following disclaimer in the documentation\n\t *    and/or other materials provided with the distribution.\n\t *\n\t * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n\t * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\t * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\t * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n\t * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n\t * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n\t * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n\t * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n\t * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n\t * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n\t * POSSIBILITY OF SUCH DAMAGE.\n\t *\n\t *----------------------------------------------------------------------------*/\n\t\n\t/* minified license below  */\n\t\n\t/* @license\n\t * Copyright (c) 2016, Jeff Hlywa (jhlywa@gmail.com)\n\t * Released under the BSD license\n\t * https://github.com/jhlywa/chess.js/blob/master/LICENSE\n\t */\n\t\n\tvar Chess = function(fen) {\n\t\n\t  /* jshint indent: false */\n\t\n\t  var BLACK = 'b';\n\t  var WHITE = 'w';\n\t\n\t  var EMPTY = -1;\n\t\n\t  var PAWN = 'p';\n\t  var KNIGHT = 'n';\n\t  var BISHOP = 'b';\n\t  var ROOK = 'r';\n\t  var QUEEN = 'q';\n\t  var KING = 'k';\n\t\n\t  var SYMBOLS = 'pnbrqkPNBRQK';\n\t\n\t  var DEFAULT_POSITION = 'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1';\n\t\n\t  var POSSIBLE_RESULTS = ['1-0', '0-1', '1/2-1/2', '*'];\n\t\n\t  var PAWN_OFFSETS = {\n\t    b: [16, 32, 17, 15],\n\t    w: [-16, -32, -17, -15]\n\t  };\n\t\n\t  var PIECE_OFFSETS = {\n\t    n: [-18, -33, -31, -14,  18, 33, 31,  14],\n\t    b: [-17, -15,  17,  15],\n\t    r: [-16,   1,  16,  -1],\n\t    q: [-17, -16, -15,   1,  17, 16, 15,  -1],\n\t    k: [-17, -16, -15,   1,  17, 16, 15,  -1]\n\t  };\n\t\n\t  var ATTACKS = [\n\t    20, 0, 0, 0, 0, 0, 0, 24,  0, 0, 0, 0, 0, 0,20, 0,\n\t     0,20, 0, 0, 0, 0, 0, 24,  0, 0, 0, 0, 0,20, 0, 0,\n\t     0, 0,20, 0, 0, 0, 0, 24,  0, 0, 0, 0,20, 0, 0, 0,\n\t     0, 0, 0,20, 0, 0, 0, 24,  0, 0, 0,20, 0, 0, 0, 0,\n\t     0, 0, 0, 0,20, 0, 0, 24,  0, 0,20, 0, 0, 0, 0, 0,\n\t     0, 0, 0, 0, 0,20, 2, 24,  2,20, 0, 0, 0, 0, 0, 0,\n\t     0, 0, 0, 0, 0, 2,53, 56, 53, 2, 0, 0, 0, 0, 0, 0,\n\t    24,24,24,24,24,24,56,  0, 56,24,24,24,24,24,24, 0,\n\t     0, 0, 0, 0, 0, 2,53, 56, 53, 2, 0, 0, 0, 0, 0, 0,\n\t     0, 0, 0, 0, 0,20, 2, 24,  2,20, 0, 0, 0, 0, 0, 0,\n\t     0, 0, 0, 0,20, 0, 0, 24,  0, 0,20, 0, 0, 0, 0, 0,\n\t     0, 0, 0,20, 0, 0, 0, 24,  0, 0, 0,20, 0, 0, 0, 0,\n\t     0, 0,20, 0, 0, 0, 0, 24,  0, 0, 0, 0,20, 0, 0, 0,\n\t     0,20, 0, 0, 0, 0, 0, 24,  0, 0, 0, 0, 0,20, 0, 0,\n\t    20, 0, 0, 0, 0, 0, 0, 24,  0, 0, 0, 0, 0, 0,20\n\t  ];\n\t\n\t  var RAYS = [\n\t     17,  0,  0,  0,  0,  0,  0, 16,  0,  0,  0,  0,  0,  0, 15, 0,\n\t      0, 17,  0,  0,  0,  0,  0, 16,  0,  0,  0,  0,  0, 15,  0, 0,\n\t      0,  0, 17,  0,  0,  0,  0, 16,  0,  0,  0,  0, 15,  0,  0, 0,\n\t      0,  0,  0, 17,  0,  0,  0, 16,  0,  0,  0, 15,  0,  0,  0, 0,\n\t      0,  0,  0,  0, 17,  0,  0, 16,  0,  0, 15,  0,  0,  0,  0, 0,\n\t      0,  0,  0,  0,  0, 17,  0, 16,  0, 15,  0,  0,  0,  0,  0, 0,\n\t      0,  0,  0,  0,  0,  0, 17, 16, 15,  0,  0,  0,  0,  0,  0, 0,\n\t      1,  1,  1,  1,  1,  1,  1,  0, -1, -1,  -1,-1, -1, -1, -1, 0,\n\t      0,  0,  0,  0,  0,  0,-15,-16,-17,  0,  0,  0,  0,  0,  0, 0,\n\t      0,  0,  0,  0,  0,-15,  0,-16,  0,-17,  0,  0,  0,  0,  0, 0,\n\t      0,  0,  0,  0,-15,  0,  0,-16,  0,  0,-17,  0,  0,  0,  0, 0,\n\t      0,  0,  0,-15,  0,  0,  0,-16,  0,  0,  0,-17,  0,  0,  0, 0,\n\t      0,  0,-15,  0,  0,  0,  0,-16,  0,  0,  0,  0,-17,  0,  0, 0,\n\t      0,-15,  0,  0,  0,  0,  0,-16,  0,  0,  0,  0,  0,-17,  0, 0,\n\t    -15,  0,  0,  0,  0,  0,  0,-16,  0,  0,  0,  0,  0,  0,-17\n\t  ];\n\t\n\t  var SHIFTS = { p: 0, n: 1, b: 2, r: 3, q: 4, k: 5 };\n\t\n\t  var FLAGS = {\n\t    NORMAL: 'n',\n\t    CAPTURE: 'c',\n\t    BIG_PAWN: 'b',\n\t    EP_CAPTURE: 'e',\n\t    PROMOTION: 'p',\n\t    KSIDE_CASTLE: 'k',\n\t    QSIDE_CASTLE: 'q'\n\t  };\n\t\n\t  var BITS = {\n\t    NORMAL: 1,\n\t    CAPTURE: 2,\n\t    BIG_PAWN: 4,\n\t    EP_CAPTURE: 8,\n\t    PROMOTION: 16,\n\t    KSIDE_CASTLE: 32,\n\t    QSIDE_CASTLE: 64\n\t  };\n\t\n\t  var RANK_1 = 7;\n\t  var RANK_2 = 6;\n\t  var RANK_3 = 5;\n\t  var RANK_4 = 4;\n\t  var RANK_5 = 3;\n\t  var RANK_6 = 2;\n\t  var RANK_7 = 1;\n\t  var RANK_8 = 0;\n\t\n\t  var SQUARES = {\n\t    a8:   0, b8:   1, c8:   2, d8:   3, e8:   4, f8:   5, g8:   6, h8:   7,\n\t    a7:  16, b7:  17, c7:  18, d7:  19, e7:  20, f7:  21, g7:  22, h7:  23,\n\t    a6:  32, b6:  33, c6:  34, d6:  35, e6:  36, f6:  37, g6:  38, h6:  39,\n\t    a5:  48, b5:  49, c5:  50, d5:  51, e5:  52, f5:  53, g5:  54, h5:  55,\n\t    a4:  64, b4:  65, c4:  66, d4:  67, e4:  68, f4:  69, g4:  70, h4:  71,\n\t    a3:  80, b3:  81, c3:  82, d3:  83, e3:  84, f3:  85, g3:  86, h3:  87,\n\t    a2:  96, b2:  97, c2:  98, d2:  99, e2: 100, f2: 101, g2: 102, h2: 103,\n\t    a1: 112, b1: 113, c1: 114, d1: 115, e1: 116, f1: 117, g1: 118, h1: 119\n\t  };\n\t\n\t  var ROOKS = {\n\t    w: [{square: SQUARES.a1, flag: BITS.QSIDE_CASTLE},\n\t        {square: SQUARES.h1, flag: BITS.KSIDE_CASTLE}],\n\t    b: [{square: SQUARES.a8, flag: BITS.QSIDE_CASTLE},\n\t        {square: SQUARES.h8, flag: BITS.KSIDE_CASTLE}]\n\t  };\n\t\n\t  var board = new Array(128);\n\t  var kings = {w: EMPTY, b: EMPTY};\n\t  var turn = WHITE;\n\t  var castling = {w: 0, b: 0};\n\t  var ep_square = EMPTY;\n\t  var half_moves = 0;\n\t  var move_number = 1;\n\t  var history = [];\n\t  var header = {};\n\t\n\t  /* if the user passes in a fen string, load it, else default to\n\t   * starting position\n\t   */\n\t  if (typeof fen === 'undefined') {\n\t    load(DEFAULT_POSITION);\n\t  } else {\n\t    load(fen);\n\t  }\n\t\n\t  function clear() {\n\t    board = new Array(128);\n\t    kings = {w: EMPTY, b: EMPTY};\n\t    turn = WHITE;\n\t    castling = {w: 0, b: 0};\n\t    ep_square = EMPTY;\n\t    half_moves = 0;\n\t    move_number = 1;\n\t    history = [];\n\t    header = {};\n\t    update_setup(generate_fen());\n\t  }\n\t\n\t  function reset() {\n\t    load(DEFAULT_POSITION);\n\t  }\n\t\n\t  function load(fen) {\n\t    var tokens = fen.split(/\\s+/);\n\t    var position = tokens[0];\n\t    var square = 0;\n\t\n\t    if (!validate_fen(fen).valid) {\n\t      return false;\n\t    }\n\t\n\t    clear();\n\t\n\t    for (var i = 0; i < position.length; i++) {\n\t      var piece = position.charAt(i);\n\t\n\t      if (piece === '/') {\n\t        square += 8;\n\t      } else if (is_digit(piece)) {\n\t        square += parseInt(piece, 10);\n\t      } else {\n\t        var color = (piece < 'a') ? WHITE : BLACK;\n\t        put({type: piece.toLowerCase(), color: color}, algebraic(square));\n\t        square++;\n\t      }\n\t    }\n\t\n\t    turn = tokens[1];\n\t\n\t    if (tokens[2].indexOf('K') > -1) {\n\t      castling.w |= BITS.KSIDE_CASTLE;\n\t    }\n\t    if (tokens[2].indexOf('Q') > -1) {\n\t      castling.w |= BITS.QSIDE_CASTLE;\n\t    }\n\t    if (tokens[2].indexOf('k') > -1) {\n\t      castling.b |= BITS.KSIDE_CASTLE;\n\t    }\n\t    if (tokens[2].indexOf('q') > -1) {\n\t      castling.b |= BITS.QSIDE_CASTLE;\n\t    }\n\t\n\t    ep_square = (tokens[3] === '-') ? EMPTY : SQUARES[tokens[3]];\n\t    half_moves = parseInt(tokens[4], 10);\n\t    move_number = parseInt(tokens[5], 10);\n\t\n\t    update_setup(generate_fen());\n\t\n\t    return true;\n\t  }\n\t\n\t  /* TODO: this function is pretty much crap - it validates structure but\n\t   * completely ignores content (e.g. doesn't verify that each side has a king)\n\t   * ... we should rewrite this, and ditch the silly error_number field while\n\t   * we're at it\n\t   */\n\t  function validate_fen(fen) {\n\t    var errors = {\n\t       0: 'No errors.',\n\t       1: 'FEN string must contain six space-delimited fields.',\n\t       2: '6th field (move number) must be a positive integer.',\n\t       3: '5th field (half move counter) must be a non-negative integer.',\n\t       4: '4th field (en-passant square) is invalid.',\n\t       5: '3rd field (castling availability) is invalid.',\n\t       6: '2nd field (side to move) is invalid.',\n\t       7: '1st field (piece positions) does not contain 8 \\'/\\'-delimited rows.',\n\t       8: '1st field (piece positions) is invalid [consecutive numbers].',\n\t       9: '1st field (piece positions) is invalid [invalid piece].',\n\t      10: '1st field (piece positions) is invalid [row too large].',\n\t      11: 'Illegal en-passant square',\n\t    };\n\t\n\t    /* 1st criterion: 6 space-seperated fields? */\n\t    var tokens = fen.split(/\\s+/);\n\t    if (tokens.length !== 6) {\n\t      return {valid: false, error_number: 1, error: errors[1]};\n\t    }\n\t\n\t    /* 2nd criterion: move number field is a integer value > 0? */\n\t    if (isNaN(tokens[5]) || (parseInt(tokens[5], 10) <= 0)) {\n\t      return {valid: false, error_number: 2, error: errors[2]};\n\t    }\n\t\n\t    /* 3rd criterion: half move counter is an integer >= 0? */\n\t    if (isNaN(tokens[4]) || (parseInt(tokens[4], 10) < 0)) {\n\t      return {valid: false, error_number: 3, error: errors[3]};\n\t    }\n\t\n\t    /* 4th criterion: 4th field is a valid e.p.-string? */\n\t    if (!/^(-|[abcdefgh][36])$/.test(tokens[3])) {\n\t      return {valid: false, error_number: 4, error: errors[4]};\n\t    }\n\t\n\t    /* 5th criterion: 3th field is a valid castle-string? */\n\t    if( !/^(KQ?k?q?|Qk?q?|kq?|q|-)$/.test(tokens[2])) {\n\t      return {valid: false, error_number: 5, error: errors[5]};\n\t    }\n\t\n\t    /* 6th criterion: 2nd field is \"w\" (white) or \"b\" (black)? */\n\t    if (!/^(w|b)$/.test(tokens[1])) {\n\t      return {valid: false, error_number: 6, error: errors[6]};\n\t    }\n\t\n\t    /* 7th criterion: 1st field contains 8 rows? */\n\t    var rows = tokens[0].split('/');\n\t    if (rows.length !== 8) {\n\t      return {valid: false, error_number: 7, error: errors[7]};\n\t    }\n\t\n\t    /* 8th criterion: every row is valid? */\n\t    for (var i = 0; i < rows.length; i++) {\n\t      /* check for right sum of fields AND not two numbers in succession */\n\t      var sum_fields = 0;\n\t      var previous_was_number = false;\n\t\n\t      for (var k = 0; k < rows[i].length; k++) {\n\t        if (!isNaN(rows[i][k])) {\n\t          if (previous_was_number) {\n\t            return {valid: false, error_number: 8, error: errors[8]};\n\t          }\n\t          sum_fields += parseInt(rows[i][k], 10);\n\t          previous_was_number = true;\n\t        } else {\n\t          if (!/^[prnbqkPRNBQK]$/.test(rows[i][k])) {\n\t            return {valid: false, error_number: 9, error: errors[9]};\n\t          }\n\t          sum_fields += 1;\n\t          previous_was_number = false;\n\t        }\n\t      }\n\t      if (sum_fields !== 8) {\n\t        return {valid: false, error_number: 10, error: errors[10]};\n\t      }\n\t    }\n\t\n\t    if ((tokens[3][1] == '3' && tokens[1] == 'w') ||\n\t        (tokens[3][1] == '6' && tokens[1] == 'b')) {\n\t          return {valid: false, error_number: 11, error: errors[11]};\n\t    }\n\t\n\t    /* everything's okay! */\n\t    return {valid: true, error_number: 0, error: errors[0]};\n\t  }\n\t\n\t  function generate_fen() {\n\t    var empty = 0;\n\t    var fen = '';\n\t\n\t    for (var i = SQUARES.a8; i <= SQUARES.h1; i++) {\n\t      if (board[i] == null) {\n\t        empty++;\n\t      } else {\n\t        if (empty > 0) {\n\t          fen += empty;\n\t          empty = 0;\n\t        }\n\t        var color = board[i].color;\n\t        var piece = board[i].type;\n\t\n\t        fen += (color === WHITE) ?\n\t                 piece.toUpperCase() : piece.toLowerCase();\n\t      }\n\t\n\t      if ((i + 1) & 0x88) {\n\t        if (empty > 0) {\n\t          fen += empty;\n\t        }\n\t\n\t        if (i !== SQUARES.h1) {\n\t          fen += '/';\n\t        }\n\t\n\t        empty = 0;\n\t        i += 8;\n\t      }\n\t    }\n\t\n\t    var cflags = '';\n\t    if (castling[WHITE] & BITS.KSIDE_CASTLE) { cflags += 'K'; }\n\t    if (castling[WHITE] & BITS.QSIDE_CASTLE) { cflags += 'Q'; }\n\t    if (castling[BLACK] & BITS.KSIDE_CASTLE) { cflags += 'k'; }\n\t    if (castling[BLACK] & BITS.QSIDE_CASTLE) { cflags += 'q'; }\n\t\n\t    /* do we have an empty castling flag? */\n\t    cflags = cflags || '-';\n\t    var epflags = (ep_square === EMPTY) ? '-' : algebraic(ep_square);\n\t\n\t    return [fen, turn, cflags, epflags, half_moves, move_number].join(' ');\n\t  }\n\t\n\t  function set_header(args) {\n\t    for (var i = 0; i < args.length; i += 2) {\n\t      if (typeof args[i] === 'string' &&\n\t          typeof args[i + 1] === 'string') {\n\t        header[args[i]] = args[i + 1];\n\t      }\n\t    }\n\t    return header;\n\t  }\n\t\n\t  /* called when the initial board setup is changed with put() or remove().\n\t   * modifies the SetUp and FEN properties of the header object.  if the FEN is\n\t   * equal to the default position, the SetUp and FEN are deleted\n\t   * the setup is only updated if history.length is zero, ie moves haven't been\n\t   * made.\n\t   */\n\t  function update_setup(fen) {\n\t    if (history.length > 0) return;\n\t\n\t    if (fen !== DEFAULT_POSITION) {\n\t      header['SetUp'] = '1';\n\t      header['FEN'] = fen;\n\t    } else {\n\t      delete header['SetUp'];\n\t      delete header['FEN'];\n\t    }\n\t  }\n\t\n\t  function get(square) {\n\t    var piece = board[SQUARES[square]];\n\t    return (piece) ? {type: piece.type, color: piece.color} : null;\n\t  }\n\t\n\t  function put(piece, square) {\n\t    /* check for valid piece object */\n\t    if (!('type' in piece && 'color' in piece)) {\n\t      return false;\n\t    }\n\t\n\t    /* check for piece */\n\t    if (SYMBOLS.indexOf(piece.type.toLowerCase()) === -1) {\n\t      return false;\n\t    }\n\t\n\t    /* check for valid square */\n\t    if (!(square in SQUARES)) {\n\t      return false;\n\t    }\n\t\n\t    var sq = SQUARES[square];\n\t\n\t    /* don't let the user place more than one king */\n\t    if (piece.type == KING &&\n\t        !(kings[piece.color] == EMPTY || kings[piece.color] == sq)) {\n\t      return false;\n\t    }\n\t\n\t    board[sq] = {type: piece.type, color: piece.color};\n\t    if (piece.type === KING) {\n\t      kings[piece.color] = sq;\n\t    }\n\t\n\t    update_setup(generate_fen());\n\t\n\t    return true;\n\t  }\n\t\n\t  function remove(square) {\n\t    var piece = get(square);\n\t    board[SQUARES[square]] = null;\n\t    if (piece && piece.type === KING) {\n\t      kings[piece.color] = EMPTY;\n\t    }\n\t\n\t    update_setup(generate_fen());\n\t\n\t    return piece;\n\t  }\n\t\n\t  function build_move(board, from, to, flags, promotion) {\n\t    var move = {\n\t      color: turn,\n\t      from: from,\n\t      to: to,\n\t      flags: flags,\n\t      piece: board[from].type\n\t    };\n\t\n\t    if (promotion) {\n\t      move.flags |= BITS.PROMOTION;\n\t      move.promotion = promotion;\n\t    }\n\t\n\t    if (board[to]) {\n\t      move.captured = board[to].type;\n\t    } else if (flags & BITS.EP_CAPTURE) {\n\t        move.captured = PAWN;\n\t    }\n\t    return move;\n\t  }\n\t\n\t  function generate_moves(options) {\n\t    function add_move(board, moves, from, to, flags) {\n\t      /* if pawn promotion */\n\t      if (board[from].type === PAWN &&\n\t         (rank(to) === RANK_8 || rank(to) === RANK_1)) {\n\t          var pieces = [QUEEN, ROOK, BISHOP, KNIGHT];\n\t          for (var i = 0, len = pieces.length; i < len; i++) {\n\t            moves.push(build_move(board, from, to, flags, pieces[i]));\n\t          }\n\t      } else {\n\t       moves.push(build_move(board, from, to, flags));\n\t      }\n\t    }\n\t\n\t    var moves = [];\n\t    var us = turn;\n\t    var them = swap_color(us);\n\t    var second_rank = {b: RANK_7, w: RANK_2};\n\t\n\t    var first_sq = SQUARES.a8;\n\t    var last_sq = SQUARES.h1;\n\t    var single_square = false;\n\t\n\t    /* do we want legal moves? */\n\t    var legal = (typeof options !== 'undefined' && 'legal' in options) ?\n\t                options.legal : true;\n\t\n\t    /* are we generating moves for a single square? */\n\t    if (typeof options !== 'undefined' && 'square' in options) {\n\t      if (options.square in SQUARES) {\n\t        first_sq = last_sq = SQUARES[options.square];\n\t        single_square = true;\n\t      } else {\n\t        /* invalid square */\n\t        return [];\n\t      }\n\t    }\n\t\n\t    for (var i = first_sq; i <= last_sq; i++) {\n\t      /* did we run off the end of the board */\n\t      if (i & 0x88) { i += 7; continue; }\n\t\n\t      var piece = board[i];\n\t      if (piece == null || piece.color !== us) {\n\t        continue;\n\t      }\n\t\n\t      if (piece.type === PAWN) {\n\t        /* single square, non-capturing */\n\t        var square = i + PAWN_OFFSETS[us][0];\n\t        if (board[square] == null) {\n\t            add_move(board, moves, i, square, BITS.NORMAL);\n\t\n\t          /* double square */\n\t          var square = i + PAWN_OFFSETS[us][1];\n\t          if (second_rank[us] === rank(i) && board[square] == null) {\n\t            add_move(board, moves, i, square, BITS.BIG_PAWN);\n\t          }\n\t        }\n\t\n\t        /* pawn captures */\n\t        for (j = 2; j < 4; j++) {\n\t          var square = i + PAWN_OFFSETS[us][j];\n\t          if (square & 0x88) continue;\n\t\n\t          if (board[square] != null &&\n\t              board[square].color === them) {\n\t              add_move(board, moves, i, square, BITS.CAPTURE);\n\t          } else if (square === ep_square) {\n\t              add_move(board, moves, i, ep_square, BITS.EP_CAPTURE);\n\t          }\n\t        }\n\t      } else {\n\t        for (var j = 0, len = PIECE_OFFSETS[piece.type].length; j < len; j++) {\n\t          var offset = PIECE_OFFSETS[piece.type][j];\n\t          var square = i;\n\t\n\t          while (true) {\n\t            square += offset;\n\t            if (square & 0x88) break;\n\t\n\t            if (board[square] == null) {\n\t              add_move(board, moves, i, square, BITS.NORMAL);\n\t            } else {\n\t              if (board[square].color === us) break;\n\t              add_move(board, moves, i, square, BITS.CAPTURE);\n\t              break;\n\t            }\n\t\n\t            /* break, if knight or king */\n\t            if (piece.type === 'n' || piece.type === 'k') break;\n\t          }\n\t        }\n\t      }\n\t    }\n\t\n\t    /* check for castling if: a) we're generating all moves, or b) we're doing\n\t     * single square move generation on the king's square\n\t     */\n\t    if ((!single_square) || last_sq === kings[us]) {\n\t      /* king-side castling */\n\t      if (castling[us] & BITS.KSIDE_CASTLE) {\n\t        var castling_from = kings[us];\n\t        var castling_to = castling_from + 2;\n\t\n\t        if (board[castling_from + 1] == null &&\n\t            board[castling_to]       == null &&\n\t            !attacked(them, kings[us]) &&\n\t            !attacked(them, castling_from + 1) &&\n\t            !attacked(them, castling_to)) {\n\t          add_move(board, moves, kings[us] , castling_to,\n\t                   BITS.KSIDE_CASTLE);\n\t        }\n\t      }\n\t\n\t      /* queen-side castling */\n\t      if (castling[us] & BITS.QSIDE_CASTLE) {\n\t        var castling_from = kings[us];\n\t        var castling_to = castling_from - 2;\n\t\n\t        if (board[castling_from - 1] == null &&\n\t            board[castling_from - 2] == null &&\n\t            board[castling_from - 3] == null &&\n\t            !attacked(them, kings[us]) &&\n\t            !attacked(them, castling_from - 1) &&\n\t            !attacked(them, castling_to)) {\n\t          add_move(board, moves, kings[us], castling_to,\n\t                   BITS.QSIDE_CASTLE);\n\t        }\n\t      }\n\t    }\n\t\n\t    /* return all pseudo-legal moves (this includes moves that allow the king\n\t     * to be captured)\n\t     */\n\t    if (!legal) {\n\t      return moves;\n\t    }\n\t\n\t    /* filter out illegal moves */\n\t    var legal_moves = [];\n\t    for (var i = 0, len = moves.length; i < len; i++) {\n\t      make_move(moves[i]);\n\t      if (!king_attacked(us)) {\n\t        legal_moves.push(moves[i]);\n\t      }\n\t      undo_move();\n\t    }\n\t\n\t    return legal_moves;\n\t  }\n\t\n\t  /* convert a move from 0x88 coordinates to Standard Algebraic Notation\n\t   * (SAN)\n\t   *\n\t   * @param {boolean} sloppy Use the sloppy SAN generator to work around over\n\t   * disambiguation bugs in Fritz and Chessbase.  See below:\n\t   *\n\t   * r1bqkbnr/ppp2ppp/2n5/1B1pP3/4P3/8/PPPP2PP/RNBQK1NR b KQkq - 2 4\n\t   * 4. ... Nge7 is overly disambiguated because the knight on c6 is pinned\n\t   * 4. ... Ne7 is technically the valid SAN\n\t   */\n\t  function move_to_san(move, sloppy) {\n\t\n\t    var output = '';\n\t\n\t    if (move.flags & BITS.KSIDE_CASTLE) {\n\t      output = 'O-O';\n\t    } else if (move.flags & BITS.QSIDE_CASTLE) {\n\t      output = 'O-O-O';\n\t    } else {\n\t      var disambiguator = get_disambiguator(move, sloppy);\n\t\n\t      if (move.piece !== PAWN) {\n\t        output += move.piece.toUpperCase() + disambiguator;\n\t      }\n\t\n\t      if (move.flags & (BITS.CAPTURE | BITS.EP_CAPTURE)) {\n\t        if (move.piece === PAWN) {\n\t          output += algebraic(move.from)[0];\n\t        }\n\t        output += 'x';\n\t      }\n\t\n\t      output += algebraic(move.to);\n\t\n\t      if (move.flags & BITS.PROMOTION) {\n\t        output += '=' + move.promotion.toUpperCase();\n\t      }\n\t    }\n\t\n\t    make_move(move);\n\t    if (in_check()) {\n\t      if (in_checkmate()) {\n\t        output += '#';\n\t      } else {\n\t        output += '+';\n\t      }\n\t    }\n\t    undo_move();\n\t\n\t    return output;\n\t  }\n\t\n\t  // parses all of the decorators out of a SAN string\n\t  function stripped_san(move) {\n\t    return move.replace(/=/,'').replace(/[+#]?[?!]*$/,'');\n\t  }\n\t\n\t  function attacked(color, square) {\n\t    for (var i = SQUARES.a8; i <= SQUARES.h1; i++) {\n\t      /* did we run off the end of the board */\n\t      if (i & 0x88) { i += 7; continue; }\n\t\n\t      /* if empty square or wrong color */\n\t      if (board[i] == null || board[i].color !== color) continue;\n\t\n\t      var piece = board[i];\n\t      var difference = i - square;\n\t      var index = difference + 119;\n\t\n\t      if (ATTACKS[index] & (1 << SHIFTS[piece.type])) {\n\t        if (piece.type === PAWN) {\n\t          if (difference > 0) {\n\t            if (piece.color === WHITE) return true;\n\t          } else {\n\t            if (piece.color === BLACK) return true;\n\t          }\n\t          continue;\n\t        }\n\t\n\t        /* if the piece is a knight or a king */\n\t        if (piece.type === 'n' || piece.type === 'k') return true;\n\t\n\t        var offset = RAYS[index];\n\t        var j = i + offset;\n\t\n\t        var blocked = false;\n\t        while (j !== square) {\n\t          if (board[j] != null) { blocked = true; break; }\n\t          j += offset;\n\t        }\n\t\n\t        if (!blocked) return true;\n\t      }\n\t    }\n\t\n\t    return false;\n\t  }\n\t\n\t  function king_attacked(color) {\n\t    return attacked(swap_color(color), kings[color]);\n\t  }\n\t\n\t  function in_check() {\n\t    return king_attacked(turn);\n\t  }\n\t\n\t  function in_checkmate() {\n\t    return in_check() && generate_moves().length === 0;\n\t  }\n\t\n\t  function in_stalemate() {\n\t    return !in_check() && generate_moves().length === 0;\n\t  }\n\t\n\t  function insufficient_material() {\n\t    var pieces = {};\n\t    var bishops = [];\n\t    var num_pieces = 0;\n\t    var sq_color = 0;\n\t\n\t    for (var i = SQUARES.a8; i<= SQUARES.h1; i++) {\n\t      sq_color = (sq_color + 1) % 2;\n\t      if (i & 0x88) { i += 7; continue; }\n\t\n\t      var piece = board[i];\n\t      if (piece) {\n\t        pieces[piece.type] = (piece.type in pieces) ?\n\t                              pieces[piece.type] + 1 : 1;\n\t        if (piece.type === BISHOP) {\n\t          bishops.push(sq_color);\n\t        }\n\t        num_pieces++;\n\t      }\n\t    }\n\t\n\t    /* k vs. k */\n\t    if (num_pieces === 2) { return true; }\n\t\n\t    /* k vs. kn .... or .... k vs. kb */\n\t    else if (num_pieces === 3 && (pieces[BISHOP] === 1 ||\n\t                                 pieces[KNIGHT] === 1)) { return true; }\n\t\n\t    /* kb vs. kb where any number of bishops are all on the same color */\n\t    else if (num_pieces === pieces[BISHOP] + 2) {\n\t      var sum = 0;\n\t      var len = bishops.length;\n\t      for (var i = 0; i < len; i++) {\n\t        sum += bishops[i];\n\t      }\n\t      if (sum === 0 || sum === len) { return true; }\n\t    }\n\t\n\t    return false;\n\t  }\n\t\n\t  function in_threefold_repetition() {\n\t    /* TODO: while this function is fine for casual use, a better\n\t     * implementation would use a Zobrist key (instead of FEN). the\n\t     * Zobrist key would be maintained in the make_move/undo_move functions,\n\t     * avoiding the costly that we do below.\n\t     */\n\t    var moves = [];\n\t    var positions = {};\n\t    var repetition = false;\n\t\n\t    while (true) {\n\t      var move = undo_move();\n\t      if (!move) break;\n\t      moves.push(move);\n\t    }\n\t\n\t    while (true) {\n\t      /* remove the last two fields in the FEN string, they're not needed\n\t       * when checking for draw by rep */\n\t      var fen = generate_fen().split(' ').slice(0,4).join(' ');\n\t\n\t      /* has the position occurred three or move times */\n\t      positions[fen] = (fen in positions) ? positions[fen] + 1 : 1;\n\t      if (positions[fen] >= 3) {\n\t        repetition = true;\n\t      }\n\t\n\t      if (!moves.length) {\n\t        break;\n\t      }\n\t      make_move(moves.pop());\n\t    }\n\t\n\t    return repetition;\n\t  }\n\t\n\t  function push(move) {\n\t    history.push({\n\t      move: move,\n\t      kings: {b: kings.b, w: kings.w},\n\t      turn: turn,\n\t      castling: {b: castling.b, w: castling.w},\n\t      ep_square: ep_square,\n\t      half_moves: half_moves,\n\t      move_number: move_number\n\t    });\n\t  }\n\t\n\t  function make_move(move) {\n\t    var us = turn;\n\t    var them = swap_color(us);\n\t    push(move);\n\t\n\t    board[move.to] = board[move.from];\n\t    board[move.from] = null;\n\t\n\t    /* if ep capture, remove the captured pawn */\n\t    if (move.flags & BITS.EP_CAPTURE) {\n\t      if (turn === BLACK) {\n\t        board[move.to - 16] = null;\n\t      } else {\n\t        board[move.to + 16] = null;\n\t      }\n\t    }\n\t\n\t    /* if pawn promotion, replace with new piece */\n\t    if (move.flags & BITS.PROMOTION) {\n\t      board[move.to] = {type: move.promotion, color: us};\n\t    }\n\t\n\t    /* if we moved the king */\n\t    if (board[move.to].type === KING) {\n\t      kings[board[move.to].color] = move.to;\n\t\n\t      /* if we castled, move the rook next to the king */\n\t      if (move.flags & BITS.KSIDE_CASTLE) {\n\t        var castling_to = move.to - 1;\n\t        var castling_from = move.to + 1;\n\t        board[castling_to] = board[castling_from];\n\t        board[castling_from] = null;\n\t      } else if (move.flags & BITS.QSIDE_CASTLE) {\n\t        var castling_to = move.to + 1;\n\t        var castling_from = move.to - 2;\n\t        board[castling_to] = board[castling_from];\n\t        board[castling_from] = null;\n\t      }\n\t\n\t      /* turn off castling */\n\t      castling[us] = '';\n\t    }\n\t\n\t    /* turn off castling if we move a rook */\n\t    if (castling[us]) {\n\t      for (var i = 0, len = ROOKS[us].length; i < len; i++) {\n\t        if (move.from === ROOKS[us][i].square &&\n\t            castling[us] & ROOKS[us][i].flag) {\n\t          castling[us] ^= ROOKS[us][i].flag;\n\t          break;\n\t        }\n\t      }\n\t    }\n\t\n\t    /* turn off castling if we capture a rook */\n\t    if (castling[them]) {\n\t      for (var i = 0, len = ROOKS[them].length; i < len; i++) {\n\t        if (move.to === ROOKS[them][i].square &&\n\t            castling[them] & ROOKS[them][i].flag) {\n\t          castling[them] ^= ROOKS[them][i].flag;\n\t          break;\n\t        }\n\t      }\n\t    }\n\t\n\t    /* if big pawn move, update the en passant square */\n\t    if (move.flags & BITS.BIG_PAWN) {\n\t      if (turn === 'b') {\n\t        ep_square = move.to - 16;\n\t      } else {\n\t        ep_square = move.to + 16;\n\t      }\n\t    } else {\n\t      ep_square = EMPTY;\n\t    }\n\t\n\t    /* reset the 50 move counter if a pawn is moved or a piece is captured */\n\t    if (move.piece === PAWN) {\n\t      half_moves = 0;\n\t    } else if (move.flags & (BITS.CAPTURE | BITS.EP_CAPTURE)) {\n\t      half_moves = 0;\n\t    } else {\n\t      half_moves++;\n\t    }\n\t\n\t    if (turn === BLACK) {\n\t      move_number++;\n\t    }\n\t    turn = swap_color(turn);\n\t  }\n\t\n\t  function undo_move() {\n\t    var old = history.pop();\n\t    if (old == null) { return null; }\n\t\n\t    var move = old.move;\n\t    kings = old.kings;\n\t    turn = old.turn;\n\t    castling = old.castling;\n\t    ep_square = old.ep_square;\n\t    half_moves = old.half_moves;\n\t    move_number = old.move_number;\n\t\n\t    var us = turn;\n\t    var them = swap_color(turn);\n\t\n\t    board[move.from] = board[move.to];\n\t    board[move.from].type = move.piece;  // to undo any promotions\n\t    board[move.to] = null;\n\t\n\t    if (move.flags & BITS.CAPTURE) {\n\t      board[move.to] = {type: move.captured, color: them};\n\t    } else if (move.flags & BITS.EP_CAPTURE) {\n\t      var index;\n\t      if (us === BLACK) {\n\t        index = move.to - 16;\n\t      } else {\n\t        index = move.to + 16;\n\t      }\n\t      board[index] = {type: PAWN, color: them};\n\t    }\n\t\n\t\n\t    if (move.flags & (BITS.KSIDE_CASTLE | BITS.QSIDE_CASTLE)) {\n\t      var castling_to, castling_from;\n\t      if (move.flags & BITS.KSIDE_CASTLE) {\n\t        castling_to = move.to + 1;\n\t        castling_from = move.to - 1;\n\t      } else if (move.flags & BITS.QSIDE_CASTLE) {\n\t        castling_to = move.to - 2;\n\t        castling_from = move.to + 1;\n\t      }\n\t\n\t      board[castling_to] = board[castling_from];\n\t      board[castling_from] = null;\n\t    }\n\t\n\t    return move;\n\t  }\n\t\n\t  /* this function is used to uniquely identify ambiguous moves */\n\t  function get_disambiguator(move, sloppy) {\n\t    var moves = generate_moves({legal: !sloppy});\n\t\n\t    var from = move.from;\n\t    var to = move.to;\n\t    var piece = move.piece;\n\t\n\t    var ambiguities = 0;\n\t    var same_rank = 0;\n\t    var same_file = 0;\n\t\n\t    for (var i = 0, len = moves.length; i < len; i++) {\n\t      var ambig_from = moves[i].from;\n\t      var ambig_to = moves[i].to;\n\t      var ambig_piece = moves[i].piece;\n\t\n\t      /* if a move of the same piece type ends on the same to square, we'll\n\t       * need to add a disambiguator to the algebraic notation\n\t       */\n\t      if (piece === ambig_piece && from !== ambig_from && to === ambig_to) {\n\t        ambiguities++;\n\t\n\t        if (rank(from) === rank(ambig_from)) {\n\t          same_rank++;\n\t        }\n\t\n\t        if (file(from) === file(ambig_from)) {\n\t          same_file++;\n\t        }\n\t      }\n\t    }\n\t\n\t    if (ambiguities > 0) {\n\t      /* if there exists a similar moving piece on the same rank and file as\n\t       * the move in question, use the square as the disambiguator\n\t       */\n\t      if (same_rank > 0 && same_file > 0) {\n\t        return algebraic(from);\n\t      }\n\t      /* if the moving piece rests on the same file, use the rank symbol as the\n\t       * disambiguator\n\t       */\n\t      else if (same_file > 0) {\n\t        return algebraic(from).charAt(1);\n\t      }\n\t      /* else use the file symbol */\n\t      else {\n\t        return algebraic(from).charAt(0);\n\t      }\n\t    }\n\t\n\t    return '';\n\t  }\n\t\n\t  function ascii() {\n\t    var s = '   +------------------------+\\n';\n\t    for (var i = SQUARES.a8; i <= SQUARES.h1; i++) {\n\t      /* display the rank */\n\t      if (file(i) === 0) {\n\t        s += ' ' + '87654321'[rank(i)] + ' |';\n\t      }\n\t\n\t      /* empty piece */\n\t      if (board[i] == null) {\n\t        s += ' . ';\n\t      } else {\n\t        var piece = board[i].type;\n\t        var color = board[i].color;\n\t        var symbol = (color === WHITE) ?\n\t                     piece.toUpperCase() : piece.toLowerCase();\n\t        s += ' ' + symbol + ' ';\n\t      }\n\t\n\t      if ((i + 1) & 0x88) {\n\t        s += '|\\n';\n\t        i += 8;\n\t      }\n\t    }\n\t    s += '   +------------------------+\\n';\n\t    s += '     a  b  c  d  e  f  g  h\\n';\n\t\n\t    return s;\n\t  }\n\t\n\t  // convert a move from Standard Algebraic Notation (SAN) to 0x88 coordinates\n\t  function move_from_san(move, sloppy) {\n\t    // strip off any move decorations: e.g Nf3+?!\n\t    var clean_move = stripped_san(move);\n\t\n\t    // if we're using the sloppy parser run a regex to grab piece, to, and from\n\t    // this should parse invalid SAN like: Pe2-e4, Rc1c4, Qf3xf7\n\t    if (sloppy) {\n\t      var matches = clean_move.match(/([pnbrqkPNBRQK])?([a-h][1-8])x?-?([a-h][1-8])([qrbnQRBN])?/);\n\t      if (matches) {\n\t        var piece = matches[1];\n\t        var from = matches[2];\n\t        var to = matches[3];\n\t        var promotion = matches[4];\n\t      }\n\t    }\n\t\n\t    var moves = generate_moves();\n\t    for (var i = 0, len = moves.length; i < len; i++) {\n\t      // try the strict parser first, then the sloppy parser if requested\n\t      // by the user\n\t      if ((clean_move === stripped_san(move_to_san(moves[i]))) ||\n\t          (sloppy && clean_move === stripped_san(move_to_san(moves[i], true)))) {\n\t        return moves[i];\n\t      } else {\n\t        if (matches &&\n\t            (!piece || piece.toLowerCase() == moves[i].piece) &&\n\t            SQUARES[from] == moves[i].from &&\n\t            SQUARES[to] == moves[i].to &&\n\t            (!promotion || promotion.toLowerCase() == moves[i].promotion)) {\n\t          return moves[i];\n\t        }\n\t      }\n\t    }\n\t\n\t    return null;\n\t  }\n\t\n\t\n\t  /*****************************************************************************\n\t   * UTILITY FUNCTIONS\n\t   ****************************************************************************/\n\t  function rank(i) {\n\t    return i >> 4;\n\t  }\n\t\n\t  function file(i) {\n\t    return i & 15;\n\t  }\n\t\n\t  function algebraic(i){\n\t    var f = file(i), r = rank(i);\n\t    return 'abcdefgh'.substring(f,f+1) + '87654321'.substring(r,r+1);\n\t  }\n\t\n\t  function swap_color(c) {\n\t    return c === WHITE ? BLACK : WHITE;\n\t  }\n\t\n\t  function is_digit(c) {\n\t    return '0123456789'.indexOf(c) !== -1;\n\t  }\n\t\n\t  /* pretty = external move object */\n\t  function make_pretty(ugly_move) {\n\t    var move = clone(ugly_move);\n\t    move.san = move_to_san(move, false);\n\t    move.to = algebraic(move.to);\n\t    move.from = algebraic(move.from);\n\t\n\t    var flags = '';\n\t\n\t    for (var flag in BITS) {\n\t      if (BITS[flag] & move.flags) {\n\t        flags += FLAGS[flag];\n\t      }\n\t    }\n\t    move.flags = flags;\n\t\n\t    return move;\n\t  }\n\t\n\t  function clone(obj) {\n\t    var dupe = (obj instanceof Array) ? [] : {};\n\t\n\t    for (var property in obj) {\n\t      if (typeof property === 'object') {\n\t        dupe[property] = clone(obj[property]);\n\t      } else {\n\t        dupe[property] = obj[property];\n\t      }\n\t    }\n\t\n\t    return dupe;\n\t  }\n\t\n\t  function trim(str) {\n\t    return str.replace(/^\\s+|\\s+$/g, '');\n\t  }\n\t\n\t  /*****************************************************************************\n\t   * DEBUGGING UTILITIES\n\t   ****************************************************************************/\n\t  function perft(depth) {\n\t    var moves = generate_moves({legal: false});\n\t    var nodes = 0;\n\t    var color = turn;\n\t\n\t    for (var i = 0, len = moves.length; i < len; i++) {\n\t      make_move(moves[i]);\n\t      if (!king_attacked(color)) {\n\t        if (depth - 1 > 0) {\n\t          var child_nodes = perft(depth - 1);\n\t          nodes += child_nodes;\n\t        } else {\n\t          nodes++;\n\t        }\n\t      }\n\t      undo_move();\n\t    }\n\t\n\t    return nodes;\n\t  }\n\t\n\t  return {\n\t    /***************************************************************************\n\t     * PUBLIC CONSTANTS (is there a better way to do this?)\n\t     **************************************************************************/\n\t    WHITE: WHITE,\n\t    BLACK: BLACK,\n\t    PAWN: PAWN,\n\t    KNIGHT: KNIGHT,\n\t    BISHOP: BISHOP,\n\t    ROOK: ROOK,\n\t    QUEEN: QUEEN,\n\t    KING: KING,\n\t    SQUARES: (function() {\n\t                /* from the ECMA-262 spec (section 12.6.4):\n\t                 * \"The mechanics of enumerating the properties ... is\n\t                 * implementation dependent\"\n\t                 * so: for (var sq in SQUARES) { keys.push(sq); } might not be\n\t                 * ordered correctly\n\t                 */\n\t                var keys = [];\n\t                for (var i = SQUARES.a8; i <= SQUARES.h1; i++) {\n\t                  if (i & 0x88) { i += 7; continue; }\n\t                  keys.push(algebraic(i));\n\t                }\n\t                return keys;\n\t              })(),\n\t    FLAGS: FLAGS,\n\t\n\t    /***************************************************************************\n\t     * PUBLIC API\n\t     **************************************************************************/\n\t    load: function(fen) {\n\t      return load(fen);\n\t    },\n\t\n\t    reset: function() {\n\t      return reset();\n\t    },\n\t\n\t    moves: function(options) {\n\t      /* The internal representation of a chess move is in 0x88 format, and\n\t       * not meant to be human-readable.  The code below converts the 0x88\n\t       * square coordinates to algebraic coordinates.  It also prunes an\n\t       * unnecessary move keys resulting from a verbose call.\n\t       */\n\t\n\t      var ugly_moves = generate_moves(options);\n\t      var moves = [];\n\t\n\t      for (var i = 0, len = ugly_moves.length; i < len; i++) {\n\t\n\t        /* does the user want a full move object (most likely not), or just\n\t         * SAN\n\t         */\n\t        if (typeof options !== 'undefined' && 'verbose' in options &&\n\t            options.verbose) {\n\t          moves.push(make_pretty(ugly_moves[i]));\n\t        } else {\n\t          moves.push(move_to_san(ugly_moves[i], false));\n\t        }\n\t      }\n\t\n\t      return moves;\n\t    },\n\t\n\t    in_check: function() {\n\t      return in_check();\n\t    },\n\t\n\t    in_checkmate: function() {\n\t      return in_checkmate();\n\t    },\n\t\n\t    in_stalemate: function() {\n\t      return in_stalemate();\n\t    },\n\t\n\t    in_draw: function() {\n\t      return half_moves >= 100 ||\n\t             in_stalemate() ||\n\t             insufficient_material() ||\n\t             in_threefold_repetition();\n\t    },\n\t\n\t    insufficient_material: function() {\n\t      return insufficient_material();\n\t    },\n\t\n\t    in_threefold_repetition: function() {\n\t      return in_threefold_repetition();\n\t    },\n\t\n\t    game_over: function() {\n\t      return half_moves >= 100 ||\n\t             in_checkmate() ||\n\t             in_stalemate() ||\n\t             insufficient_material() ||\n\t             in_threefold_repetition();\n\t    },\n\t\n\t    validate_fen: function(fen) {\n\t      return validate_fen(fen);\n\t    },\n\t\n\t    fen: function() {\n\t      return generate_fen();\n\t    },\n\t\n\t    pgn: function(options) {\n\t      /* using the specification from http://www.chessclub.com/help/PGN-spec\n\t       * example for html usage: .pgn({ max_width: 72, newline_char: \"<br />\" })\n\t       */\n\t      var newline = (typeof options === 'object' &&\n\t                     typeof options.newline_char === 'string') ?\n\t                     options.newline_char : '\\n';\n\t      var max_width = (typeof options === 'object' &&\n\t                       typeof options.max_width === 'number') ?\n\t                       options.max_width : 0;\n\t      var result = [];\n\t      var header_exists = false;\n\t\n\t      /* add the PGN header headerrmation */\n\t      for (var i in header) {\n\t        /* TODO: order of enumerated properties in header object is not\n\t         * guaranteed, see ECMA-262 spec (section 12.6.4)\n\t         */\n\t        result.push('[' + i + ' \\\"' + header[i] + '\\\"]' + newline);\n\t        header_exists = true;\n\t      }\n\t\n\t      if (header_exists && history.length) {\n\t        result.push(newline);\n\t      }\n\t\n\t      /* pop all of history onto reversed_history */\n\t      var reversed_history = [];\n\t      while (history.length > 0) {\n\t        reversed_history.push(undo_move());\n\t      }\n\t\n\t      var moves = [];\n\t      var move_string = '';\n\t\n\t      /* build the list of moves.  a move_string looks like: \"3. e3 e6\" */\n\t      while (reversed_history.length > 0) {\n\t        var move = reversed_history.pop();\n\t\n\t        /* if the position started with black to move, start PGN with 1. ... */\n\t        if (!history.length && move.color === 'b') {\n\t          move_string = move_number + '. ...';\n\t        } else if (move.color === 'w') {\n\t          /* store the previous generated move_string if we have one */\n\t          if (move_string.length) {\n\t            moves.push(move_string);\n\t          }\n\t          move_string = move_number + '.';\n\t        }\n\t\n\t        move_string = move_string + ' ' + move_to_san(move, false);\n\t        make_move(move);\n\t      }\n\t\n\t      /* are there any other leftover moves? */\n\t      if (move_string.length) {\n\t        moves.push(move_string);\n\t      }\n\t\n\t      /* is there a result? */\n\t      if (typeof header.Result !== 'undefined') {\n\t        moves.push(header.Result);\n\t      }\n\t\n\t      /* history should be back to what is was before we started generating PGN,\n\t       * so join together moves\n\t       */\n\t      if (max_width === 0) {\n\t        return result.join('') + moves.join(' ');\n\t      }\n\t\n\t      /* wrap the PGN output at max_width */\n\t      var current_width = 0;\n\t      for (var i = 0; i < moves.length; i++) {\n\t        /* if the current move will push past max_width */\n\t        if (current_width + moves[i].length > max_width && i !== 0) {\n\t\n\t          /* don't end the line with whitespace */\n\t          if (result[result.length - 1] === ' ') {\n\t            result.pop();\n\t          }\n\t\n\t          result.push(newline);\n\t          current_width = 0;\n\t        } else if (i !== 0) {\n\t          result.push(' ');\n\t          current_width++;\n\t        }\n\t        result.push(moves[i]);\n\t        current_width += moves[i].length;\n\t      }\n\t\n\t      return result.join('');\n\t    },\n\t\n\t    load_pgn: function(pgn, options) {\n\t      // allow the user to specify the sloppy move parser to work around over\n\t      // disambiguation bugs in Fritz and Chessbase\n\t      var sloppy = (typeof options !== 'undefined' && 'sloppy' in options) ?\n\t                    options.sloppy : false;\n\t\n\t      function mask(str) {\n\t        return str.replace(/\\\\/g, '\\\\');\n\t      }\n\t\n\t      function has_keys(object) {\n\t        for (var key in object) {\n\t          return true;\n\t        }\n\t        return false;\n\t      }\n\t\n\t      function parse_pgn_header(header, options) {\n\t        var newline_char = (typeof options === 'object' &&\n\t                            typeof options.newline_char === 'string') ?\n\t                            options.newline_char : '\\r?\\n';\n\t        var header_obj = {};\n\t        var headers = header.split(new RegExp(mask(newline_char)));\n\t        var key = '';\n\t        var value = '';\n\t\n\t        for (var i = 0; i < headers.length; i++) {\n\t          key = headers[i].replace(/^\\[([A-Z][A-Za-z]*)\\s.*\\]$/, '$1');\n\t          value = headers[i].replace(/^\\[[A-Za-z]+\\s\"(.*)\"\\]$/, '$1');\n\t          if (trim(key).length > 0) {\n\t            header_obj[key] = value;\n\t          }\n\t        }\n\t\n\t        return header_obj;\n\t      }\n\t\n\t      var newline_char = (typeof options === 'object' &&\n\t                          typeof options.newline_char === 'string') ?\n\t                          options.newline_char : '\\r?\\n';\n\t      var regex = new RegExp('^(\\\\[(.|' + mask(newline_char) + ')*\\\\])' +\n\t                             '(' + mask(newline_char) + ')*' +\n\t                             '1.(' + mask(newline_char) + '|.)*$', 'g');\n\t\n\t      /* get header part of the PGN file */\n\t      var header_string = pgn.replace(regex, '$1');\n\t\n\t      /* no info part given, begins with moves */\n\t      if (header_string[0] !== '[') {\n\t        header_string = '';\n\t      }\n\t\n\t      reset();\n\t\n\t      /* parse PGN header */\n\t      var headers = parse_pgn_header(header_string, options);\n\t      for (var key in headers) {\n\t        set_header([key, headers[key]]);\n\t      }\n\t\n\t      /* load the starting position indicated by [Setup '1'] and\n\t      * [FEN position] */\n\t      if (headers['SetUp'] === '1') {\n\t          if (!(('FEN' in headers) && load(headers['FEN']))) {\n\t            return false;\n\t          }\n\t      }\n\t\n\t      /* delete header to get the moves */\n\t      var ms = pgn.replace(header_string, '').replace(new RegExp(mask(newline_char), 'g'), ' ');\n\t\n\t      /* delete comments */\n\t      ms = ms.replace(/(\\{[^}]+\\})+?/g, '');\n\t\n\t      /* delete recursive annotation variations */\n\t      var rav_regex = /(\\([^\\(\\)]+\\))+?/g\n\t      while (rav_regex.test(ms)) {\n\t        ms = ms.replace(rav_regex, '');\n\t      }\n\t\n\t      /* delete move numbers */\n\t      ms = ms.replace(/\\d+\\.(\\.\\.)?/g, '');\n\t\n\t      /* delete ... indicating black to move */\n\t      ms = ms.replace(/\\.\\.\\./g, '');\n\t\n\t      /* delete numeric annotation glyphs */\n\t      ms = ms.replace(/\\$\\d+/g, '');\n\t\n\t      /* trim and get array of moves */\n\t      var moves = trim(ms).split(new RegExp(/\\s+/));\n\t\n\t      /* delete empty entries */\n\t      moves = moves.join(',').replace(/,,+/g, ',').split(',');\n\t      var move = '';\n\t\n\t      for (var half_move = 0; half_move < moves.length - 1; half_move++) {\n\t        move = move_from_san(moves[half_move], sloppy);\n\t\n\t        /* move not possible! (don't clear the board to examine to show the\n\t         * latest valid position)\n\t         */\n\t        if (move == null) {\n\t          return false;\n\t        } else {\n\t          make_move(move);\n\t        }\n\t      }\n\t\n\t      /* examine last move */\n\t      move = moves[moves.length - 1];\n\t      if (POSSIBLE_RESULTS.indexOf(move) > -1) {\n\t        if (has_keys(header) && typeof header.Result === 'undefined') {\n\t          set_header(['Result', move]);\n\t        }\n\t      }\n\t      else {\n\t        move = move_from_san(move, sloppy);\n\t        if (move == null) {\n\t          return false;\n\t        } else {\n\t          make_move(move);\n\t        }\n\t      }\n\t      return true;\n\t    },\n\t\n\t    header: function() {\n\t      return set_header(arguments);\n\t    },\n\t\n\t    ascii: function() {\n\t      return ascii();\n\t    },\n\t\n\t    turn: function() {\n\t      return turn;\n\t    },\n\t\n\t    move: function(move, options) {\n\t      /* The move function can be called with in the following parameters:\n\t       *\n\t       * .move('Nxb7')      <- where 'move' is a case-sensitive SAN string\n\t       *\n\t       * .move({ from: 'h7', <- where the 'move' is a move object (additional\n\t       *         to :'h8',      fields are ignored)\n\t       *         promotion: 'q',\n\t       *      })\n\t       */\n\t\n\t      // allow the user to specify the sloppy move parser to work around over\n\t      // disambiguation bugs in Fritz and Chessbase\n\t      var sloppy = (typeof options !== 'undefined' && 'sloppy' in options) ?\n\t                    options.sloppy : false;\n\t\n\t      var move_obj = null;\n\t\n\t      if (typeof move === 'string') {\n\t        move_obj = move_from_san(move, sloppy);\n\t      } else if (typeof move === 'object') {\n\t        var moves = generate_moves();\n\t\n\t        /* convert the pretty move object to an ugly move object */\n\t        for (var i = 0, len = moves.length; i < len; i++) {\n\t          if (move.from === algebraic(moves[i].from) &&\n\t              move.to === algebraic(moves[i].to) &&\n\t              (!('promotion' in moves[i]) ||\n\t              move.promotion === moves[i].promotion)) {\n\t            move_obj = moves[i];\n\t            break;\n\t          }\n\t        }\n\t      }\n\t\n\t      /* failed to find move */\n\t      if (!move_obj) {\n\t        return null;\n\t      }\n\t\n\t      /* need to make a copy of move because we can't generate SAN after the\n\t       * move is made\n\t       */\n\t      var pretty_move = make_pretty(move_obj);\n\t\n\t      make_move(move_obj);\n\t\n\t      return pretty_move;\n\t    },\n\t\n\t    undo: function() {\n\t      var move = undo_move();\n\t      return (move) ? make_pretty(move) : null;\n\t    },\n\t\n\t    clear: function() {\n\t      return clear();\n\t    },\n\t\n\t    put: function(piece, square) {\n\t      return put(piece, square);\n\t    },\n\t\n\t    get: function(square) {\n\t      return get(square);\n\t    },\n\t\n\t    remove: function(square) {\n\t      return remove(square);\n\t    },\n\t\n\t    perft: function(depth) {\n\t      return perft(depth);\n\t    },\n\t\n\t    square_color: function(square) {\n\t      if (square in SQUARES) {\n\t        var sq_0x88 = SQUARES[square];\n\t        return ((rank(sq_0x88) + file(sq_0x88)) % 2 === 0) ? 'light' : 'dark';\n\t      }\n\t\n\t      return null;\n\t    },\n\t\n\t    history: function(options) {\n\t      var reversed_history = [];\n\t      var move_history = [];\n\t      var verbose = (typeof options !== 'undefined' && 'verbose' in options &&\n\t                     options.verbose);\n\t\n\t      while (history.length > 0) {\n\t        reversed_history.push(undo_move());\n\t      }\n\t\n\t      while (reversed_history.length > 0) {\n\t        var move = reversed_history.pop();\n\t        if (verbose) {\n\t          move_history.push(make_pretty(move));\n\t        } else {\n\t          move_history.push(move_to_san(move));\n\t        }\n\t        make_move(move);\n\t      }\n\t\n\t      return move_history;\n\t    }\n\t\n\t  };\n\t};\n\t\n\t/* export Chess object if using node or any other CommonJS compatible\n\t * environment */\n\tif (true) exports.Chess = Chess;\n\t/* export Chess object for any RequireJS compatible environment */\n\tif (true) !(__WEBPACK_AMD_DEFINE_RESULT__ = function () { return Chess;  }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ }\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// detail.umd-es2015.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 9bd9c2caf6e57fc152b5","/* global ChessBoard */\nimport { SiftView, registerSiftView } from '@redsift/sift-sdk-web';\nimport Chess from 'chess.js';\n\nexport default class DetailView extends SiftView {\n\n  constructor() {\n    super();\n    [\n      'recalc','onDrop','onDragStart','onSnapEnd', 'resetPosition'\n    ].forEach(method => this[method] = this[method].bind(this));\n    this.controller.subscribe('recalc', this.recalc);\n    this.game = new Chess();\n    this.plannedMove = document.getElementsByClassName('detail--planned')[0];\n    this.resetButton = document.getElementsByClassName('detail--reset')[0];\n    this.board = new ChessBoard('detail--board', {\n      draggable: true,\n      dropOffBoard: 'trash',\n      onDragStart: this.onDragStart,\n      onDrop: this.onDrop,\n      onSnapEnd: this.onSnapEnd\n    });\n    this.resetButton.onclick = this.resetPosition;\n  }\n\n  presentView (got) {\n    this.updateView(got.data);\n  }\n\n  recalc (got) {\n    this.updateView(got);\n  }\n\n  updateView (position){\n    if (position) {\n      this.startPosition = position;\n      this.resetPosition();\n    }\n  }\n\n  resetPosition () {\n    this.game.load(this.startPosition);\n    this.board.position(this.startPosition);\n    this.plannedMove.innerText = '';\n  }\n\n  onDragStart (_, piece) {\n    return !this.game.game_over() && piece.indexOf(this.game.turn()) > -1;\n  }\n\n  onDrop (from, to) {\n    const move = this.game.move({from, to, promotion: 'q'});\n    if (move === null) return 'snapback';\n    this.plannedMove.innerText = this.plannedMove.innerText === ''\n      ? `[ ${move.san} ]`\n      : this.plannedMove.innerText\n    ;\n    return;\n  }\n\n  onSnapEnd () {\n    this.board.position(this.game.fen());\n  }\n}\n\nregisterSiftView(new DetailView(window));\n\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/detail.js","(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n    typeof define === 'function' && define.amd ? define(['exports'], factory) :\n    (factory((global.Redsift = global.Redsift || {})));\n}(this, (function (exports) {\n\nvar EmailClientController = function EmailClientController() {\n  this._proxy = self;\n  this._registerMessageListeners();\n};\n\nEmailClientController.prototype._registerMessageListeners = function _registerMessageListeners () {\n    var this$1 = this;\n\n  if(!this._proxy) return;\n  this._proxy.onmessage = function (e) {\n    // console.log('[SiftController::onmessage]: ', e.data);\n    var method = e.data.method;\n    if (this$1['_' + method]) {\n      this$1['_' + method](e.data.params);\n    }\n    else {\n      // console.log('[EmailClientController::onmessage]: method not implemented: ', method);\n    }\n  };\n};\n\nEmailClientController.prototype._emailStats = function _emailStats (stats) {\n  if(this.onstats) {\n    this.onstats(stats.name, stats.value);\n  }\n};\n\nEmailClientController.prototype._getThreadRowDisplayInfo = function _getThreadRowDisplayInfo (params) {\n    var this$1 = this;\n\n  // console.log('[EmailClientController::_getThreadRowDisplayInfo]: ', params);\n  var trdis = {};\n  params.tris.forEach(function (thread) {\n    if (thread.value !== undefined && thread.value.list !== undefined && this$1.loadThreadListView) {\n      trdis[thread.key] = this$1.loadThreadListView(thread.value.list, params.supportedTemplates);\n    }\n  });\n  // Notify the client\n  this._proxy.postMessage({\n    method: 'getThreadRowDisplayInfoCallback',\n    params: trdis\n  });\n};\n\n/**\n * Observable pattern implementation.\n * Supports topics as String or an Array.\n */\nvar Observable = function Observable() {\n  this._observers = [];\n};\n\nObservable.prototype.subscribe = function subscribe (topic, observer) {\n  this._op('_sub', topic, observer);\n};\n\nObservable.prototype.unsubscribe = function unsubscribe (topic, observer) {\n  this._op('_unsub', topic, observer);\n};\n\nObservable.prototype.unsubscribeAll = function unsubscribeAll (topic) {\n  if (!this._observers[topic]) {\n    return;\n  }\n  delete this._observers[topic];\n};\n\nObservable.prototype.publish = function publish (topic, message) {\n  this._op('_pub', topic, message);\n};\n\n/**\n * Internal methods\n */\nObservable.prototype._op = function _op (op, topic, value) {\n    var this$1 = this;\n\n  if (Array.isArray(topic)) {\n    topic.forEach(function (t) {\n      this$1[op](t, value);\n    });\n  }\n  else {\n    this[op](topic, value);\n  }\n};\n\nObservable.prototype._sub = function _sub (topic, observer) {\n  this._observers[topic] || (this._observers[topic] = []);\n  if(observer && this._observers[topic].indexOf(observer) === -1) {\n    this._observers[topic].push(observer);\n  }\n};\n\nObservable.prototype._unsub = function _unsub (topic, observer) {\n  if (!this._observers[topic]) {\n    return;\n  }\n  var index = this._observers[topic].indexOf(observer);\n  if (~index) {\n    this._observers[topic].splice(index, 1);\n  }\n};\n\nObservable.prototype._pub = function _pub (topic, message) {\n    var this$1 = this;\n\n  if (!this._observers[topic]) {\n    return;\n  }\n  for (var i = this._observers[topic].length - 1; i >= 0; i--) {\n    this$1._observers[topic][i](message)\n  }\n};\n\nvar SiftView = function SiftView() {\n  this._resizeHandler = null;\n  this._proxy = parent;\n  this.controller = new Observable();\n  this._registerMessageListeners();\n};\n\nSiftView.prototype.publish = function publish (topic, value) {\n this._proxy.postMessage({\n    method: 'notifyController',\n    params: {\n      topic: topic,\n      value: value } },\n    '*');\n};\n\nSiftView.prototype._registerMessageListeners = function _registerMessageListeners () {\n    var this$1 = this;\n\n  window.addEventListener('message', function (e) {\n    var method = e.data.method;\n    var params = e.data.params;\n    if(method === 'notifyView') {\n      this$1.controller.publish(params.topic, params.value);\n    }\n    else if(this$1[method]) {\n      this$1[method](params);\n    }\n    else {\n      console.warn('[SiftView]: method not implemented: ', method);\n    }\n  }, false);\n};\n\nvar EmailClient = (function (Observable) {\n  function EmailClient(proxy) {\n    Observable.call(this);\n    this._proxy = proxy;\n  }\n\n  if ( Observable ) EmailClient.__proto__ = Observable;\n  EmailClient.prototype = Object.create( Observable && Observable.prototype );\n  EmailClient.prototype.constructor = EmailClient;\n\n  EmailClient.prototype.goto = function goto (params) {\n    this._postMessage('goto', params);\n  };\n\n  EmailClient.prototype.close = function close () {\n    this._postMessage('close');\n  };\n\n  EmailClient.prototype._postMessage = function _postMessage (topic, value) {\n    this._proxy.postMessage({\n      method: 'notifyClient',\n      params: {\n        topic: topic,\n        value: value\n      }\n    });\n  };\n\n  return EmailClient;\n}(Observable));\n\nvar SiftStorage = (function (Observable) {\n  function SiftStorage() {\n    Observable.call(this);\n    this._storage = null;\n  }\n\n  if ( Observable ) SiftStorage.__proto__ = Observable;\n  SiftStorage.prototype = Object.create( Observable && Observable.prototype );\n  SiftStorage.prototype.constructor = SiftStorage;\n\n  SiftStorage.prototype.init = function init (storage) {\n    this._storage = storage;\n  };\n\n  SiftStorage.prototype.get = function get (d) { return this._storage.get(d) };\n  SiftStorage.prototype.getIndexKeys = function getIndexKeys (d) { return this._storage.getIndexKeys(d) };\n  SiftStorage.prototype.getIndex = function getIndex (d) { return this._storage.getIndex(d) };\n  SiftStorage.prototype.getWithIndex = function getWithIndex (d) { return this._storage.getWithIndex(d) };\n  SiftStorage.prototype.getAllKeys = function getAllKeys (d) { return this._storage.getAllKeys(d) };\n  SiftStorage.prototype.getAll = function getAll (d) { return this._storage.getAll(d) };\n  SiftStorage.prototype.getUser = function getUser (d) { return this._storage.getUser(d) };\n  SiftStorage.prototype.putUser = function putUser (d) { return this._storage.putUser(d) };\n  SiftStorage.prototype.delUser = function delUser (d) { return this._storage.delUser(d) };\n\n  return SiftStorage;\n}(Observable));\n\nvar commonjsGlobal = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {}\n\nfunction createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\nvar loglevel = createCommonjsModule(function (module) {\n/*\n* loglevel - https://github.com/pimterry/loglevel\n*\n* Copyright (c) 2013 Tim Perry\n* Licensed under the MIT license.\n*/\n(function (root, definition) {\n    \"use strict\";\n    if (typeof define === 'function' && define.amd) {\n        define(definition);\n    } else if (typeof module === 'object' && module.exports) {\n        module.exports = definition();\n    } else {\n        root.log = definition();\n    }\n}(commonjsGlobal, function () {\n    \"use strict\";\n    var noop = function() {};\n    var undefinedType = \"undefined\";\n\n    function realMethod(methodName) {\n        if (typeof console === undefinedType) {\n            return false; // We can't build a real method without a console to log to\n        } else if (console[methodName] !== undefined) {\n            return bindMethod(console, methodName);\n        } else if (console.log !== undefined) {\n            return bindMethod(console, 'log');\n        } else {\n            return noop;\n        }\n    }\n\n    function bindMethod(obj, methodName) {\n        var method = obj[methodName];\n        if (typeof method.bind === 'function') {\n            return method.bind(obj);\n        } else {\n            try {\n                return Function.prototype.bind.call(method, obj);\n            } catch (e) {\n                // Missing bind shim or IE8 + Modernizr, fallback to wrapping\n                return function() {\n                    return Function.prototype.apply.apply(method, [obj, arguments]);\n                };\n            }\n        }\n    }\n\n    // these private functions always need `this` to be set properly\n\n    function enableLoggingWhenConsoleArrives(methodName, level, loggerName) {\n        return function () {\n            if (typeof console !== undefinedType) {\n                replaceLoggingMethods.call(this, level, loggerName);\n                this[methodName].apply(this, arguments);\n            }\n        };\n    }\n\n    function replaceLoggingMethods(level, loggerName) {\n        var this$1 = this;\n\n        /*jshint validthis:true */\n        for (var i = 0; i < logMethods.length; i++) {\n            var methodName = logMethods[i];\n            this$1[methodName] = (i < level) ?\n                noop :\n                this$1.methodFactory(methodName, level, loggerName);\n        }\n    }\n\n    function defaultMethodFactory(methodName, level, loggerName) {\n        /*jshint validthis:true */\n        return realMethod(methodName) ||\n               enableLoggingWhenConsoleArrives.apply(this, arguments);\n    }\n\n    var logMethods = [\n        \"trace\",\n        \"debug\",\n        \"info\",\n        \"warn\",\n        \"error\"\n    ];\n\n    function Logger(name, defaultLevel, factory) {\n      var self = this;\n      var currentLevel;\n      var storageKey = \"loglevel\";\n      if (name) {\n        storageKey += \":\" + name;\n      }\n\n      function persistLevelIfPossible(levelNum) {\n          var levelName = (logMethods[levelNum] || 'silent').toUpperCase();\n\n          // Use localStorage if available\n          try {\n              window.localStorage[storageKey] = levelName;\n              return;\n          } catch (ignore) {}\n\n          // Use session cookie as fallback\n          try {\n              window.document.cookie =\n                encodeURIComponent(storageKey) + \"=\" + levelName + \";\";\n          } catch (ignore) {}\n      }\n\n      function getPersistedLevel() {\n          var storedLevel;\n\n          try {\n              storedLevel = window.localStorage[storageKey];\n          } catch (ignore) {}\n\n          if (typeof storedLevel === undefinedType) {\n              try {\n                  var cookie = window.document.cookie;\n                  var location = cookie.indexOf(\n                      encodeURIComponent(storageKey) + \"=\");\n                  if (location) {\n                      storedLevel = /^([^;]+)/.exec(cookie.slice(location))[1];\n                  }\n              } catch (ignore) {}\n          }\n\n          // If the stored level is not valid, treat it as if nothing was stored.\n          if (self.levels[storedLevel] === undefined) {\n              storedLevel = undefined;\n          }\n\n          return storedLevel;\n      }\n\n      /*\n       *\n       * Public API\n       *\n       */\n\n      self.levels = { \"TRACE\": 0, \"DEBUG\": 1, \"INFO\": 2, \"WARN\": 3,\n          \"ERROR\": 4, \"SILENT\": 5};\n\n      self.methodFactory = factory || defaultMethodFactory;\n\n      self.getLevel = function () {\n          return currentLevel;\n      };\n\n      self.setLevel = function (level, persist) {\n          if (typeof level === \"string\" && self.levels[level.toUpperCase()] !== undefined) {\n              level = self.levels[level.toUpperCase()];\n          }\n          if (typeof level === \"number\" && level >= 0 && level <= self.levels.SILENT) {\n              currentLevel = level;\n              if (persist !== false) {  // defaults to true\n                  persistLevelIfPossible(level);\n              }\n              replaceLoggingMethods.call(self, level, name);\n              if (typeof console === undefinedType && level < self.levels.SILENT) {\n                  return \"No console available for logging\";\n              }\n          } else {\n              throw \"log.setLevel() called with invalid level: \" + level;\n          }\n      };\n\n      self.setDefaultLevel = function (level) {\n          if (!getPersistedLevel()) {\n              self.setLevel(level, false);\n          }\n      };\n\n      self.enableAll = function(persist) {\n          self.setLevel(self.levels.TRACE, persist);\n      };\n\n      self.disableAll = function(persist) {\n          self.setLevel(self.levels.SILENT, persist);\n      };\n\n      // Initialize with the right level\n      var initialLevel = getPersistedLevel();\n      if (initialLevel == null) {\n          initialLevel = defaultLevel == null ? \"WARN\" : defaultLevel;\n      }\n      self.setLevel(initialLevel, false);\n    }\n\n    /*\n     *\n     * Package-level API\n     *\n     */\n\n    var defaultLogger = new Logger();\n\n    var _loggersByName = {};\n    defaultLogger.getLogger = function getLogger(name) {\n        if (typeof name !== \"string\" || name === \"\") {\n          throw new TypeError(\"You must supply a name when creating a logger.\");\n        }\n\n        var logger = _loggersByName[name];\n        if (!logger) {\n          logger = _loggersByName[name] = new Logger(\n            name, defaultLogger.getLevel(), defaultLogger.methodFactory);\n        }\n        return logger;\n    };\n\n    // Grab the current global log variable in case of overwrite\n    var _log = (typeof window !== undefinedType) ? window.log : undefined;\n    defaultLogger.noConflict = function() {\n        if (typeof window !== undefinedType &&\n               window.log === defaultLogger) {\n            window.log = _log;\n        }\n\n        return defaultLogger;\n    };\n\n    return defaultLogger;\n}));\n});\n\nvar loglevel$1 = (loglevel && typeof loglevel === 'object' && 'default' in loglevel ? loglevel['default'] : loglevel);\n\nvar index$2 = createCommonjsModule(function (module) {\n'use strict';\nvar toString = Object.prototype.toString;\n\nmodule.exports = function (x) {\n\tvar prototype;\n\treturn toString.call(x) === '[object Object]' && (prototype = Object.getPrototypeOf(x), prototype === null || prototype === Object.getPrototypeOf({}));\n};\n});\n\nvar require$$0$2 = (index$2 && typeof index$2 === 'object' && 'default' in index$2 ? index$2['default'] : index$2);\n\nvar index$1 = createCommonjsModule(function (module, exports) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = range;\n\nvar _isPlainObj = require$$0$2;\n\nvar _isPlainObj2 = _interopRequireDefault(_isPlainObj);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Parse `opts` to valid IDBKeyRange.\n * https://developer.mozilla.org/en-US/docs/Web/API/IDBKeyRange\n *\n * @param {Object} opts\n * @return {IDBKeyRange}\n */\n\nfunction range(opts) {\n  var IDBKeyRange = commonjsGlobal.IDBKeyRange || commonjsGlobal.webkitIDBKeyRange;\n  if (opts instanceof IDBKeyRange) return opts;\n  if (typeof opts === 'undefined' || opts === null) return null;\n  if (!(0, _isPlainObj2.default)(opts)) return IDBKeyRange.only(opts);\n  var keys = Object.keys(opts).sort();\n\n  if (keys.length === 1) {\n    var key = keys[0];\n    var val = opts[key];\n\n    switch (key) {\n      case 'eq':\n        return IDBKeyRange.only(val);\n      case 'gt':\n        return IDBKeyRange.lowerBound(val, true);\n      case 'lt':\n        return IDBKeyRange.upperBound(val, true);\n      case 'gte':\n        return IDBKeyRange.lowerBound(val);\n      case 'lte':\n        return IDBKeyRange.upperBound(val);\n      default:\n        throw new TypeError('\"' + key + '\" is not valid key');\n    }\n  } else {\n    var x = opts[keys[0]];\n    var y = opts[keys[1]];\n    var pattern = keys.join('-');\n\n    switch (pattern) {\n      case 'gt-lt':\n        return IDBKeyRange.bound(x, y, true, true);\n      case 'gt-lte':\n        return IDBKeyRange.bound(x, y, true, false);\n      case 'gte-lt':\n        return IDBKeyRange.bound(x, y, false, true);\n      case 'gte-lte':\n        return IDBKeyRange.bound(x, y, false, false);\n      default:\n        throw new TypeError('\"' + pattern + '\" are conflicted keys');\n    }\n  }\n}\nmodule.exports = exports['default'];\n});\n\nvar require$$0$1 = (index$1 && typeof index$1 === 'object' && 'default' in index$1 ? index$1['default'] : index$1);\n\nvar idbIndex = createCommonjsModule(function (module) {\nvar parseRange = require$$0$1;\n\n/**\n * Expose `Index`.\n */\n\nmodule.exports = Index;\n\n/**\n * Initialize new `Index`.\n *\n * @param {Store} store\n * @param {String} name\n * @param {String|Array} field\n * @param {Object} opts { unique: false, multi: false }\n */\n\nfunction Index(store, name, field, opts) {\n  this.store = store;\n  this.name = name;\n  this.field = field;\n  this.opts = opts;\n  this.multi = opts.multi || opts.multiEntry || false;\n  this.unique = opts.unique || false;\n}\n\n/**\n * Get `key`.\n *\n * @param {Object|IDBKeyRange} key\n * @param {Function} cb\n */\n\nIndex.prototype.get = function(key, cb) {\n  var result = [];\n  var isUnique = this.unique;\n  var opts = { range: key, iterator: iterator };\n\n  this.cursor(opts, function(err) {\n    if (err) return cb(err);\n    isUnique ? cb(null, result[0]) : cb(null, result);\n  });\n\n  function iterator(cursor) {\n    result.push(cursor.value);\n    cursor.continue();\n  }\n};\n\n/**\n * Count records by `key`.\n *\n * @param {String|IDBKeyRange} key\n * @param {Function} cb\n */\n\nIndex.prototype.count = function(key, cb) {\n  var name = this.store.name;\n  var indexName = this.name;\n\n  this.store.db.transaction('readonly', [name], function(err, tr) {\n    if (err) return cb(err);\n    var index = tr.objectStore(name).index(indexName);\n    var req = index.count(parseRange(key));\n    req.onerror = cb;\n    req.onsuccess = function onsuccess(e) { cb(null, e.target.result) };\n  });\n};\n\n/**\n * Create cursor.\n * Proxy to `this.store` for convinience.\n *\n * @param {Object} opts\n * @param {Function} cb\n */\n\nIndex.prototype.cursor = function(opts, cb) {\n  opts.index = this.name;\n  this.store.cursor(opts, cb);\n};\n});\n\nvar require$$0 = (idbIndex && typeof idbIndex === 'object' && 'default' in idbIndex ? idbIndex['default'] : idbIndex);\n\nvar index$3 = createCommonjsModule(function (module) {\n/**\n * toString ref.\n */\n\nvar toString = Object.prototype.toString;\n\n/**\n * Return the type of `val`.\n *\n * @param {Mixed} val\n * @return {String}\n * @api public\n */\n\nmodule.exports = function(val){\n  switch (toString.call(val)) {\n    case '[object Date]': return 'date';\n    case '[object RegExp]': return 'regexp';\n    case '[object Arguments]': return 'arguments';\n    case '[object Array]': return 'array';\n    case '[object Error]': return 'error';\n  }\n\n  if (val === null) return 'null';\n  if (val === undefined) return 'undefined';\n  if (val !== val) return 'nan';\n  if (val && val.nodeType === 1) return 'element';\n\n  val = val.valueOf\n    ? val.valueOf()\n    : Object.prototype.valueOf.apply(val)\n\n  return typeof val;\n};\n});\n\nvar require$$2 = (index$3 && typeof index$3 === 'object' && 'default' in index$3 ? index$3['default'] : index$3);\n\nvar idbStore = createCommonjsModule(function (module) {\nvar type = require$$2;\nvar parseRange = require$$0$1;\n\n/**\n * Expose `Store`.\n */\n\nmodule.exports = Store;\n\n/**\n * Initialize new `Store`.\n *\n * @param {String} name\n * @param {Object} opts\n */\n\nfunction Store(name, opts) {\n  this.db = null;\n  this.name = name;\n  this.indexes = {};\n  this.opts = opts;\n  this.key = opts.key || opts.keyPath || undefined;\n  this.increment = opts.increment || opts.autoIncretement || undefined;\n}\n\n/**\n * Get index by `name`.\n *\n * @param {String} name\n * @return {Index}\n */\n\nStore.prototype.index = function(name) {\n  return this.indexes[name];\n};\n\n/**\n * Put (create or replace) `key` to `val`.\n *\n * @param {String|Object} [key] is optional when store.key exists.\n * @param {Any} val\n * @param {Function} cb\n */\n\nStore.prototype.put = function(key, val, cb) {\n  var name = this.name;\n  var keyPath = this.key;\n  if (keyPath) {\n    if (type(key) == 'object') {\n      cb = val;\n      val = key;\n      key = null;\n    } else {\n      val[keyPath] = key;\n    }\n  }\n\n  this.db.transaction('readwrite', [name], function(err, tr) {\n    if (err) return cb(err);\n    var objectStore = tr.objectStore(name);\n    var req = keyPath ? objectStore.put(val) : objectStore.put(val, key);\n    tr.onerror = tr.onabort = req.onerror = cb;\n    tr.oncomplete = function oncomplete() { cb(null, req.result) };\n  });\n};\n\n/**\n * Get `key`.\n *\n * @param {String} key\n * @param {Function} cb\n */\n\nStore.prototype.get = function(key, cb) {\n  var name = this.name;\n  this.db.transaction('readonly', [name], function(err, tr) {\n    if (err) return cb(err);\n    var objectStore = tr.objectStore(name);\n    var req = objectStore.get(key);\n    req.onerror = cb;\n    req.onsuccess = function onsuccess(e) { cb(null, e.target.result) };\n  });\n};\n\n/**\n * Del `key`.\n *\n * @param {String} key\n * @param {Function} cb\n */\n\nStore.prototype.del = function(key, cb) {\n  var name = this.name;\n  this.db.transaction('readwrite', [name], function(err, tr) {\n    if (err) return cb(err);\n    var objectStore = tr.objectStore(name);\n    var req = objectStore.delete(key);\n    tr.onerror = tr.onabort = req.onerror = cb;\n    tr.oncomplete = function oncomplete() { cb() };\n  });\n};\n\n/**\n * Count.\n *\n * @param {Function} cb\n */\n\nStore.prototype.count = function(cb) {\n  var name = this.name;\n  this.db.transaction('readonly', [name], function(err, tr) {\n    if (err) return cb(err);\n    var objectStore = tr.objectStore(name);\n    var req = objectStore.count();\n    req.onerror = cb;\n    req.onsuccess = function onsuccess(e) { cb(null, e.target.result) };\n  });\n};\n\n/**\n * Clear.\n *\n * @param {Function} cb\n */\n\nStore.prototype.clear = function(cb) {\n  var name = this.name;\n  this.db.transaction('readwrite', [name], function(err, tr) {\n    if (err) return cb(err);\n    var objectStore = tr.objectStore(name);\n    var req = objectStore.clear();\n    tr.onerror = tr.onabort = req.onerror = cb;\n    tr.oncomplete = function oncomplete() { cb() };\n  });\n};\n\n/**\n * Perform batch operation.\n *\n * @param {Object} vals\n * @param {Function} cb\n */\n\nStore.prototype.batch = function(vals, cb) {\n  var name = this.name;\n  var keyPath = this.key;\n  var keys = Object.keys(vals);\n\n  this.db.transaction('readwrite', [name], function(err, tr) {\n    if (err) return cb(err);\n    var store = tr.objectStore(name);\n    var current = 0;\n    tr.onerror = tr.onabort = cb;\n    tr.oncomplete = function oncomplete() { cb() };\n    next();\n\n    function next() {\n      if (current >= keys.length) return;\n      var currentKey = keys[current];\n      var currentVal = vals[currentKey];\n      var req;\n\n      if (currentVal === null) {\n        req = store.delete(currentKey);\n      } else if (keyPath) {\n        if (!currentVal[keyPath]) currentVal[keyPath] = currentKey;\n        req = store.put(currentVal);\n      } else {\n        req = store.put(currentVal, currentKey);\n      }\n\n      req.onerror = cb;\n      req.onsuccess = next;\n      current += 1;\n    }\n  });\n};\n\n/**\n * Get all.\n *\n * @param {Function} cb\n */\n\nStore.prototype.all = function(cb) {\n  var result = [];\n\n  this.cursor({ iterator: iterator }, function(err) {\n    err ? cb(err) : cb(null, result);\n  });\n\n  function iterator(cursor) {\n    result.push(cursor.value);\n    cursor.continue();\n  }\n};\n\n/**\n * Create read cursor for specific `range`,\n * and pass IDBCursor to `iterator` function.\n * https://developer.mozilla.org/en-US/docs/Web/API/IDBCursor\n *\n * @param {Object} opts:\n *   {IDBRange|Object} range - passes to .openCursor()\n *   {Function} iterator - function to call with IDBCursor\n *   {String} [index] - name of index to start cursor by index\n * @param {Function} cb - calls on end or error\n */\n\nStore.prototype.cursor = function(opts, cb) {\n  var name = this.name;\n  this.db.transaction('readonly', [name], function(err, tr) {\n    if (err) return cb(err);\n    var store = opts.index\n      ? tr.objectStore(name).index(opts.index)\n      : tr.objectStore(name);\n    var req = store.openCursor(parseRange(opts.range));\n\n    req.onerror = cb;\n    req.onsuccess = function onsuccess(e) {\n      var cursor = e.target.result;\n      cursor ? opts.iterator(cursor) : cb();\n    };\n  });\n};\n});\n\nvar require$$1 = (idbStore && typeof idbStore === 'object' && 'default' in idbStore ? idbStore['default'] : idbStore);\n\nvar schema$1 = createCommonjsModule(function (module) {\nvar type = require$$2;\nvar Store = require$$1;\nvar Index = require$$0;\n\n/**\n * Expose `Schema`.\n */\n\nmodule.exports = Schema;\n\n/**\n * Initialize new `Schema`.\n */\n\nfunction Schema() {\n  if (!(this instanceof Schema)) return new Schema();\n  this._stores = {};\n  this._current = {};\n  this._versions = {};\n}\n\n/**\n * Set new version.\n *\n * @param {Number} version\n * @return {Schema}\n */\n\nSchema.prototype.version = function(version) {\n  if (type(version) != 'number' || version < 1 || version < this.getVersion())\n    throw new TypeError('not valid version');\n\n  this._current = { version: version, store: null };\n  this._versions[version] = {\n    stores: [],      // db.createObjectStore\n    dropStores: [],  // db.deleteObjectStore\n    indexes: [],     // store.createIndex\n    dropIndexes: [], // store.deleteIndex\n    version: version // version\n  };\n\n  return this;\n};\n\n/**\n * Add store.\n *\n * @param {String} name\n * @param {Object} [opts] { key: false }\n * @return {Schema}\n */\n\nSchema.prototype.addStore = function(name, opts) {\n  if (type(name) != 'string') throw new TypeError('`name` is required');\n  if (this._stores[name]) throw new TypeError('store is already defined');\n  var store = new Store(name, opts || {});\n  this._stores[name] = store;\n  this._versions[this.getVersion()].stores.push(store);\n  this._current.store = store;\n  return this;\n};\n\n/**\n * Drop store.\n *\n * @param {String} name\n * @return {Schema}\n */\n\nSchema.prototype.dropStore = function(name) {\n  if (type(name) != 'string') throw new TypeError('`name` is required');\n  var store = this._stores[name];\n  if (!store) throw new TypeError('store is not defined');\n  delete this._stores[name];\n  this._versions[this.getVersion()].dropStores.push(store);\n  return this;\n};\n\n/**\n * Add index.\n *\n * @param {String} name\n * @param {String|Array} field\n * @param {Object} [opts] { unique: false, multi: false }\n * @return {Schema}\n */\n\nSchema.prototype.addIndex = function(name, field, opts) {\n  if (type(name) != 'string') throw new TypeError('`name` is required');\n  if (type(field) != 'string' && type(field) != 'array') throw new TypeError('`field` is required');\n  var store = this._current.store;\n  if (store.indexes[name]) throw new TypeError('index is already defined');\n  var index = new Index(store, name, field, opts || {});\n  store.indexes[name] = index;\n  this._versions[this.getVersion()].indexes.push(index);\n  return this;\n};\n\n/**\n * Drop index.\n *\n * @param {String} name\n * @return {Schema}\n */\n\nSchema.prototype.dropIndex = function(name) {\n  if (type(name) != 'string') throw new TypeError('`name` is required');\n  var index = this._current.store.indexes[name];\n  if (!index) throw new TypeError('index is not defined');\n  delete this._current.store.indexes[name];\n  this._versions[this.getVersion()].dropIndexes.push(index);\n  return this;\n};\n\n/**\n * Change current store.\n *\n * @param {String} name\n * @return {Schema}\n */\n\nSchema.prototype.getStore = function(name) {\n  if (type(name) != 'string') throw new TypeError('`name` is required');\n  if (!this._stores[name]) throw new TypeError('store is not defined');\n  this._current.store = this._stores[name];\n  return this;\n};\n\n/**\n * Get version.\n *\n * @return {Number}\n */\n\nSchema.prototype.getVersion = function() {\n  return this._current.version;\n};\n\n/**\n * Generate onupgradeneeded callback.\n *\n * @return {Function}\n */\n\nSchema.prototype.callback = function() {\n  var versions = Object.keys(this._versions)\n    .map(function(v) { return this._versions[v] }, this)\n    .sort(function(a, b) { return a.version - b.version });\n\n  return function onupgradeneeded(e) {\n    var db = e.target.result;\n    var tr = e.target.transaction;\n\n    versions.forEach(function(versionSchema) {\n      if (e.oldVersion >= versionSchema.version) return;\n\n      versionSchema.stores.forEach(function(s) {\n        var options = {};\n\n        // Only pass the options that are explicitly specified to createObjectStore() otherwise IE/Edge\n        // can throw an InvalidAccessError - see https://msdn.microsoft.com/en-us/library/hh772493(v=vs.85).aspx\n        if (typeof s.key !== 'undefined') options.keyPath = s.key;\n        if (typeof s.increment !== 'undefined') options.autoIncrement = s.increment;\n\n        db.createObjectStore(s.name, options);\n      });\n\n      versionSchema.dropStores.forEach(function(s) {\n        db.deleteObjectStore(s.name);\n      });\n\n      versionSchema.indexes.forEach(function(i) {\n        var store = tr.objectStore(i.store.name);\n        store.createIndex(i.name, i.field, {\n          unique: i.unique,\n          multiEntry: i.multi\n        });\n      });\n\n      versionSchema.dropIndexes.forEach(function(i) {\n        var store = tr.objectStore(i.store.name);\n        store.deleteIndex(i.name);\n      });\n    });\n  };\n};\n});\n\nvar require$$2$1 = (schema$1 && typeof schema$1 === 'object' && 'default' in schema$1 ? schema$1['default'] : schema$1);\n\nvar index = createCommonjsModule(function (module, exports) {\nvar type = require$$2;\nvar Schema = require$$2$1;\nvar Store = require$$1;\nvar Index = require$$0;\n\n/**\n * Expose `Treo`.\n */\n\nexports = module.exports = Treo;\n\n/**\n * Initialize new `Treo` instance.\n *\n * @param {String} name\n * @param {Schema} schema\n */\n\nfunction Treo(name, schema) {\n  if (!(this instanceof Treo)) return new Treo(name, schema);\n  if (type(name) != 'string') throw new TypeError('`name` required');\n  if (!(schema instanceof Schema)) throw new TypeError('not valid schema');\n\n  this.name = name;\n  this.status = 'close';\n  this.origin = null;\n  this.stores = schema._stores;\n  this.version = schema.getVersion();\n  this.onupgradeneeded = schema.callback();\n\n  // assign db property to each store\n  Object.keys(this.stores).forEach(function(storeName) {\n    this.stores[storeName].db = this;\n  }, this);\n}\n\n/**\n * Expose core classes.\n */\n\nexports.schema = Schema;\nexports.cmp = cmp;\nexports.Treo = Treo;\nexports.Schema = Schema;\nexports.Store = Store;\nexports.Index = Index;\n\n/**\n * Use plugin `fn`.\n *\n * @param {Function} fn\n * @return {Treo}\n */\n\nTreo.prototype.use = function(fn) {\n  fn(this, exports);\n  return this;\n};\n\n/**\n * Drop.\n *\n * @param {Function} cb\n */\n\nTreo.prototype.drop = function(cb) {\n  var name = this.name;\n  this.close(function(err) {\n    if (err) return cb(err);\n    var req = indexedDB().deleteDatabase(name);\n    req.onerror = cb;\n    req.onsuccess = function onsuccess() { cb() };\n  });\n};\n\n/**\n * Close.\n *\n * @param {Function} cb\n */\n\nTreo.prototype.close = function(cb) {\n  if (this.status == 'close') return cb();\n  this.getInstance(function(err, db) {\n    if (err) return cb(err);\n    db.origin = null;\n    db.status = 'close';\n    db.close();\n    cb();\n  });\n};\n\n/**\n * Get store by `name`.\n *\n * @param {String} name\n * @return {Store}\n */\n\nTreo.prototype.store = function(name) {\n  return this.stores[name];\n};\n\n/**\n * Get db instance. It starts opening transaction only once,\n * another requests will be scheduled to queue.\n *\n * @param {Function} cb\n */\n\nTreo.prototype.getInstance = function(cb) {\n  if (this.status == 'open') return cb(null, this.origin);\n  if (this.status == 'opening') return this.queue.push(cb);\n\n  this.status = 'opening';\n  this.queue = [cb]; // queue callbacks\n\n  var that = this;\n  var req = indexedDB().open(this.name, this.version);\n  req.onupgradeneeded = this.onupgradeneeded;\n\n  req.onerror = req.onblocked = function onerror(e) {\n    that.status = 'error';\n    that.queue.forEach(function(cb) { cb(e) });\n    delete that.queue;\n  };\n\n  req.onsuccess = function onsuccess(e) {\n    that.origin = e.target.result;\n    that.status = 'open';\n    that.origin.onversionchange = function onversionchange() {\n      that.close(function() {});\n    };\n    that.queue.forEach(function(cb) { cb(null, that.origin) });\n    delete that.queue;\n  };\n};\n\n/**\n * Create new transaction for selected `stores`.\n *\n * @param {String} type (readwrite|readonly)\n * @param {Array} stores - follow indexeddb semantic\n * @param {Function} cb\n */\n\nTreo.prototype.transaction = function(type, stores, cb) {\n  this.getInstance(function(err, db) {\n    err ? cb(err) : cb(null, db.transaction(stores, type));\n  });\n};\n\n/**\n * Compare 2 values using IndexedDB comparision algotihm.\n *\n * @param {Mixed} value1\n * @param {Mixed} value2\n * @return {Number} -1|0|1\n */\n\nfunction cmp() {\n  return indexedDB().cmp.apply(indexedDB(), arguments);\n}\n\n/**\n * Dynamic link to `global.indexedDB` for polyfills support.\n *\n * @return {IDBDatabase}\n */\n\nfunction indexedDB() {\n  return commonjsGlobal._indexedDB\n    || commonjsGlobal.indexedDB\n    || commonjsGlobal.msIndexedDB\n    || commonjsGlobal.mozIndexedDB\n    || commonjsGlobal.webkitIndexedDB;\n}\n});\n\nvar treo = (index && typeof index === 'object' && 'default' in index ? index['default'] : index);\n\nvar logger = loglevel$1.getLogger('RSStorage:operations');\nlogger.setLevel('warn');\n\n// Email msg buckets\nvar EMAIL_BUCKETS = ['_email.id', '_email.tid'];\n// Message Db schema\nvar MSG_DB_VERSIONED_SCHEMA = [\n  // version 1\n  [\n    { name: '_id.list', indexes: ['sift.guid'] },\n    { name: '_tid.list', indexes: ['sift.guid'] }\n  ],\n  // version 2\n  [\n    { name: '_email.id', indexes: ['sift.guid'] },\n    { name: '_email.tid', indexes: ['sift.guid'] },\n    { name: '_id.list', drop: true },\n    { name: '_tid.list', drop: true }\n  ]\n];\n// Sync DB schema\nvar SYNC_DB_SCHEMA = [\n  { name: 'events', indexes: ['value.sift.guid'] },\n  { name: 'admin' }];\n// Client DB schema\nvar CLIENT_DB_SCHEMA = [\n  { name: 'tour'},\n  { name: 'spm' },\n  { name: 'auth' }];\n\n/*****************************************************************\n * Operations (alphabetically ordered)\n *****************************************************************/\n// Create Db\nfunction opCreateDb(dbInfo) {\n  logger.trace('[opCreateDb]: ', dbInfo);\n  var dbs = {};\n  switch (dbInfo.type) {\n    case 'MSG':\n      dbs.msg = treo('rs_msg_db-' + dbInfo.accountGuid, _getVersionedTreoSchema(MSG_DB_VERSIONED_SCHEMA));\n      break;\n    case 'SIFT':\n      if (!dbInfo.siftGuid) {\n        throw new Error('[opCreateDb]: dbInfo.siftGuid undefined');\n      }\n      logger.trace('[opCreateDb]: creating SIFT db');\n      var schema = _getTreoSchema(dbInfo.schema, true);\n      // Add user and redsift stores to sift db.\n      schema = schema.addStore('_user.default').addStore('_redsift');\n      dbs.db = treo(dbInfo.siftGuid + '-' + dbInfo.accountGuid, schema);\n      dbs.msg = treo('rs_msg_db-' + dbInfo.accountGuid, _getVersionedTreoSchema(MSG_DB_VERSIONED_SCHEMA));\n      break;\n    case 'SYNC':\n      logger.trace('[opCreateDb]: creating SYNC db');\n      dbs.db = treo('rs_sync_log-' + dbInfo.accountGuid, _getTreoSchema(SYNC_DB_SCHEMA));\n      break;\n    case 'CLIENT':\n      dbs.db = treo('rs_client_db-' + dbInfo.clientName, _getTreoSchema(CLIENT_DB_SCHEMA));\n      break;\n    default:\n      throw new Error('[opCreateDb]: unsupported db type: ' + dbInfo.type);\n  }\n  return dbs;\n}\n\n// Del\nfunction opDel(dbs, params, siftGuid) {\n  logger.trace('[opDel]: ', params, siftGuid);\n  if (!params.bucket) {\n    return Promise.reject('[opDel]: params.bucket undefined');\n  }\n  if (!params.keys || params.keys.length === 0) {\n    logger.trace('[opDel]: params.keys undefined');\n    return Promise.resolve();\n  }\n  if (EMAIL_BUCKETS.indexOf(params.bucket) !== -1) {\n    var keys = params.keys.map(function (k) {\n      return siftGuid + '/' + k;\n    });\n    return _batchDelete(dbs.msg, { bucket: params.bucket, keys: keys });\n  }\n  return _batchDelete(dbs.db, params);\n}\n\n// Get\nfunction opGet(dbs, params, siftGuid) {\n  logger.trace('[opGet]: ', params);\n  if (!params.bucket) {\n    return Promise.reject('[opGet]: params.bucket undefined');\n  }\n  if (!params.keys || params.keys.length === 0) {\n    return Promise.reject('[opGet]: param.keys undefined');\n  }\n  if (EMAIL_BUCKETS.indexOf(params.bucket) !== -1) {\n    var keys = params.keys.map(function (k) {\n      return siftGuid + '/' + k;\n    });\n    return _findIn(dbs.msg, { bucket: params.bucket, keys: keys }).then(function (result) {\n      return result.map(function (r) {\n        return { key: r.key.split('/')[1], value: r.value };\n      });\n    });\n  }\n  return _findIn(dbs.db, params);\n}\n\n// Get All\nfunction opGetAll(dbs, params, siftGuid) {\n  logger.trace('[opGetAll]: ', params, siftGuid);\n  if (!params.bucket) {\n    return Promise.reject('[opGetAll]: params.bucket undefined');\n  }\n  if (EMAIL_BUCKETS.indexOf(params.bucket) !== -1) {\n    return _getAll(dbs.msg, { bucket: params.bucket, index: 'sift.guid', range: siftGuid }, true)\n      .then(function (result) { return result.map(function (r) { return ({ key: r.key.split('/')[1], value: r.value }); }); }\n      );\n  }\n  return _getAll(dbs.db, params, true);\n}\n\n// Get All Keys\nfunction opGetAllKeys(dbs, params, siftGuid) {\n  logger.trace('[opGetAllKeys]: ', params, siftGuid);\n  if (!params.bucket) {\n    return Promise.reject('[opGetAllKeys]: params.bucket undefined');\n  }\n  if (EMAIL_BUCKETS.indexOf(params.bucket) !== -1) {\n    return _getAll(dbs.msg, { bucket: params.bucket, index: 'sift.guid', range: siftGuid }, false)\n      .then(function (result) { return result.map(function (r) { return r.key.split('/')[1]; }); });\n  }\n  return _getAll(dbs.db, params, false);\n}\n\n// Get Index\nfunction opGetIndex(dbs, params, siftGuid) {\n  logger.trace('[opGetIndex]: ', params, siftGuid);\n  if (!params.bucket) {\n    return Promise.reject('[opGetIndex]:params.bucket undefined');\n  }\n  if (EMAIL_BUCKETS.indexOf(params.bucket) !== -1) {\n    return _getAll(dbs.msg, { bucket: params.bucket, index: 'sift.guid', range: siftGuid }, true).then(function (result) {\n      return result.map(function (r) {\n        return { key: r.key.split('/')[1], value: r.value };\n      });\n    });\n  }\n  if (!params.index) {\n    return Promise.reject('[opGetIndex]:params.index undefined');\n  }\n  return _getAll(dbs.db, params, true);\n}\n\n// Get Index Keys\nfunction opGetIndexKeys(dbs, params, siftGuid) {\n  logger.trace('[opGetIndexKeys]: ', params, siftGuid);\n  if (!params.bucket) {\n    return Promise.reject('[opGetIndexKeys]: params.bucket undefined');\n  }\n  if (EMAIL_BUCKETS.indexOf(params.bucket) !== -1) {\n    return _getAll(dbs.msg, { bucket: params.bucket, index: 'sift.guid', range: siftGuid }, false).then(function (result) {\n      return result.map(function (r) {\n        return { key: r.key.split('/')[1], value: r.value };\n      });\n    });\n  }\n  if (!params.index) {\n    return Promise.reject('[opGetIndexKeys]: params.index undefined');\n  }\n  return _getAll(dbs.db, params, false);\n}\n\n// Get With Index\nfunction opGetWithIndex(dbs, params, siftGuid) {\n  logger.trace('[opGetWithIndex]: ', params, siftGuid);\n  if (!params.bucket) {\n    return Promise.reject('[opGetWithIndex]:params.bucket undefined');\n  }\n  if (!params.keys) {\n    return Promise.reject('[opGetWithIndex]:params.keys undefined');\n  }\n  if (EMAIL_BUCKETS.indexOf(params.bucket) !== -1) {\n    var keys = params.keys.map(function (k) {\n      return siftGuid + '/' + k;\n    });\n    return _getWithIndexRange(dbs.msg, { bucket: params.bucket, keys: keys, index: 'sift.guid', range: siftGuid }).then(function (result) {\n      return result.map(function (r) {\n        return { key: r.key.split('/')[1], value: r.value };\n      });\n    });\n  }\n  if (!params.index) {\n    return Promise.reject('[opGetWithIndex]:params.index undefined');\n  }\n  if (!params.range) {\n    return Promise.reject('[opGetWithIndex]:params.range undefined');\n  }\n  return _getWithIndexRange(dbs.db, params);\n}\n\n// Put\nfunction opPut(dbs, params, raw, siftGuid) {\n  logger.trace('[opPut]: ', params, raw, siftGuid);\n  var db = dbs.db;\n  if (!params.bucket) {\n    return Promise.reject('[opPut]: params.bucket undefined');\n  }\n  if (!params.kvs || params.kvs.length === 0) {\n    logger.warn('[opPut]: params.kvs undefined');\n    return Promise.resolve();\n  }\n  var kvs = params.kvs;\n  if (!raw) {\n    // Wrap value into a {value: object}\n    kvs = kvs.map(function (kv) {\n      return { key: kv.key, value: { value: kv.value } };\n    });\n  }\n  if (EMAIL_BUCKETS.indexOf(params.bucket) !== -1) {\n    db = dbs.msg;\n    var kvs = kvs.map(function (kv) {\n      return { key: siftGuid + '/' + kv.key, value: kv.value };\n    });\n  }\n  return _batchPut(db, { bucket: params.bucket, kvs: kvs }, raw);\n}\n\n/*****************************************************************\n * Internal functions\n *****************************************************************/\n\n// define db schema\nfunction _getTreoSchema(stores, sift) {\n  logger.trace('[_getTreoSchema]: ', stores, sift);\n  var schema = treo.schema().version(1);\n  stores.forEach(function (os) {\n    if (!(sift && (EMAIL_BUCKETS.indexOf(os.name) !== -1))) {\n      if (os.keypath) {\n        schema = schema.addStore(os.name, { key: os.keypath });\n      }\n      else {\n        schema = schema.addStore(os.name);\n      }\n      if (os.indexes) {\n        os.indexes.forEach(function (idx) {\n          schema = schema.addIndex(idx, idx, { unique: false });\n        });\n      }\n    }\n  });\n  return schema;\n}\n\n// versioned db schema\nfunction _getVersionedTreoSchema(versions, sift) {\n  logger.trace('[_getVersionedTreoSchema]: ', versions, sift);\n  var schema = treo.schema();\n  versions.forEach(function (stores, i) {\n    schema = schema.version(i + 1);\n    stores.forEach(function (os) {\n      if (!(sift && (EMAIL_BUCKETS.indexOf(os.name) !== -1))) {\n        if (os.drop) {\n          logger.trace('[_getVersionedTreoSchema]: dropping store: ', os.name);\n          schema = schema.dropStore(os.name);\n        }\n        else if (os.keypath) {\n          schema = schema.addStore(os.name, { key: os.keypath });\n        }\n        else {\n          schema = schema.addStore(os.name);\n        }\n        if (os.indexes) {\n          os.indexes.forEach(function (idx) {\n            if (os.drop) {\n              logger.trace('[_getVersionedTreoSchema]: dropping store/index: ' + os.name + '/' + idx);\n              schema = schema.dropIndex(idx);\n            }\n            else {\n              schema = schema.addIndex(idx, idx, { unique: false });\n            }\n          });\n        }\n      }\n    });\n  });\n  return schema;\n}\n\n// Batch deletion supports numeric keys\nfunction _batchDelete(db, params) {\n  logger.trace('[_batchDelete]: ', params);\n  return new Promise(function (resolve, reject) {\n    db.transaction('readwrite', [params.bucket], function (err, tr) {\n      if (err) { return reject(err); }\n      var store = tr.objectStore(params.bucket);\n      var current = 0;\n      var next = function () {\n        if (current >= params.keys.length) { return; }\n        var currentKey = params.keys[current];\n        var req;\n        req = store.delete(currentKey);\n        req.onerror = reject;\n        req.onsuccess = next;\n        current += 1;\n      };\n      tr.onerror = tr.onabort = reject;\n      tr.oncomplete = function () { resolve(); };\n      next();\n    });\n  });\n}\n\nfunction _batchPut(db, params) {\n  logger.trace('[_batchPut]: ', params);\n  return new Promise(function (resolve, reject) {\n    var count = params.kvs.length;\n    db.transaction('readwrite', [params.bucket], function (err, tr) {\n      if (err) { return reject(err); }\n      var store = tr.objectStore(params.bucket);\n      var current = 0;\n      var next = function () {\n        if (current >= count) { return; }\n        logger.trace('[_batchPut: put: ', params.kvs[current]);\n        var req;\n        req = store.put(params.kvs[current].value, params.kvs[current].key);\n        req.onerror = reject;\n        req.onsuccess = next;\n        current += 1;\n      };\n      tr.onerror = tr.onabort = reject;\n      tr.oncomplete = function () { resolve(); };\n      next();\n    });\n  });\n}\n\nfunction _getWithIndexRange(db, params) {\n  logger.trace('[_getWithIndexRange]: ', params);\n  return new Promise(function (resolve, reject) {\n    var store = db.store(params.bucket);\n    var result = [];\n    var found = 0;\n    var iterator = function (cursor) {\n      var ki = params.keys.indexOf(cursor.primaryKey);\n      if (ki !== -1) {\n        logger.trace('[found key: ', cursor.primaryKey);\n        result[ki].value = cursor.value.value;\n        found++;\n      }\n      if (found === params.keys.length) {\n        return done();\n      }\n      cursor.continue();\n    };\n    var done = function (err) {\n      logger.trace('[_getWithIndexRange: result: ', result);\n      err ? reject(err) : resolve(result);\n    };\n    params.keys.forEach(function (k) {\n      result.push({ key: k, value: undefined });\n    });\n    store.cursor({ index: params.index, range: params.range, iterator: iterator }, done);\n  });\n}\n\nfunction _findIn(db, params) {\n  logger.trace('[_findIn]: ', params);\n  return new Promise(function (resolve, reject) {\n    var store = db.store(params.bucket);\n    var result = [];\n    var current = 0;\n    var iterator = function (cursor) {\n      logger.trace('[_findIn]: iterator: ', cursor);\n      if (cursor.key > sKeys[current]) {\n        logger.trace('[_findIn]: cursor ahead: ', cursor.key, sKeys[current]);\n        while (cursor.key > sKeys[current] && current < sKeys.length) {\n          current += 1;\n          logger.trace('[_findIn]: moving to next key: ', cursor.key, sKeys[current]);\n        }\n        if (current > sKeys.length) {\n          logger.trace('[_findIn]: exhausted keys. done.');\n          return done();\n        }\n      }\n      if (cursor.key === sKeys[current]) {\n        logger.trace('[_findIn]: found key: ', cursor.key, cursor.value);\n        result[params.keys.indexOf(sKeys[current])] = { key: cursor.key, value: cursor.value.value };\n        current += 1;\n        (current < sKeys.length) ? cursor.continue(sKeys[current]) : done();\n      }\n      else {\n        logger.trace('[_findIn]: continuing to next key: ', sKeys[current]);\n        cursor.continue(sKeys[current]); // go to next key\n      }\n    };\n    var done = function (err) {\n      logger.trace('[findIn]: result: ', result);\n      err ? reject(err) : resolve(result);\n    };\n    var sKeys = params.keys.slice();\n    sKeys = sKeys.sort(treo.cmp);\n    logger.trace('[findIn: sorted keys: ', sKeys);\n    params.keys.forEach(function (k) {\n      result.push({ key: k, value: undefined });\n    });\n    store.cursor({ iterator: iterator }, done);\n  });\n}\n\nfunction _getAll(db, params, loadValue) {\n  logger.trace('[_getAll]: ', params, loadValue);\n  return new Promise(function (resolve, reject) {\n    var result = [];\n    var keys = [];\n    var store = db.store(params.bucket);\n    var iterator = function (cursor) {\n      var kv = { key: cursor.primaryKey };\n      logger.trace('[_getAll]: cursor', cursor);\n      if (loadValue) {\n        kv.value = cursor.value.value;\n      }\n      if (params.index) {\n        kv.index = cursor.key;\n      }\n      result.push(kv);\n      keys.push(cursor.primaryKey);\n      cursor.continue();\n    };\n    var opts = { iterator: iterator };\n    if (params.index) {\n      opts.index = params.index;\n    }\n    if (params.range) {\n      opts.range = params.range;\n    }\n    store.cursor(opts, function (err) {\n      if (err) {\n        reject(err);\n      }\n      else {\n        if (!params.index && !params.range && !loadValue) {\n          logger.trace('[_getAll]: resolving: ', keys);\n          resolve(keys);\n        }\n        else {\n          logger.trace('[_getAll]: resolving: ', result);\n          resolve(result);\n        }\n      }\n    });\n  });\n}\n\n/**\n * Redsift SDK. Sift Storage module.\n * Based on APIs from https://github.com/CrowdProcess/riak-pb\n *\n * Copyright (c) 2016 Redsift Limited. All rights reserved.\n */\nvar _siftGuid = new WeakMap();\nvar _dbs = new WeakMap();\n\nvar Storage = function Storage(dbInfo, ll) {\n  this._logger = loglevel$1.getLogger('RSStorage');\n  this._logger.setLevel(ll || 'warn');\n  if (!dbInfo.accountGuid) {\n    throw new Error('[Storage]: dbInfo.accountGuid undefined');\n  }\n  _siftGuid.set(this, dbInfo.siftGuid);\n  _dbs.set(this, opCreateDb(dbInfo));\n};\n\n/*****************************************************************\n * External Operations\n *****************************************************************/\nStorage.prototype.get = function get (params) {\n  this._logger.trace('[Storage::get]: ', params);\n  return opGet(_dbs.get(this), params, _siftGuid.get(this));\n};\n\nStorage.prototype.getAll = function getAll (params) {\n  this._logger.trace('[Storage::getAll]: ', params);\n  return opGetAll(_dbs.get(this), params, _siftGuid.get(this));\n};\n\nStorage.prototype.getAllKeys = function getAllKeys (params) {\n  this._logger.trace('[Storage::getAllKeys]: ', params);\n  return opGetAllKeys(_dbs.get(this), params, _siftGuid.get(this))\n};\n\nStorage.prototype.getIndex = function getIndex (params) {\n  this._logger.trace('[Storage::getIndex]: ', params);\n  return opGetIndex(_dbs.get(this), params, _siftGuid.get(this));\n};\n\nStorage.prototype.getIndexKeys = function getIndexKeys (params) {\n  this._logger.trace('[Storage::getIndexKeys]: ', params);\n  return opGetIndexKeys(_dbs.get(this), params, _siftGuid.get(this));\n};\n\nStorage.prototype.getWithIndex = function getWithIndex (params) {\n  this._logger.trace('[Storage::getWithIndex]: ', params);\n  return opGetWithIndex(_dbs.get(this), params, _siftGuid.get(this));\n};\n\n///////////////////////////////////////////////////////////////////////////////////////////////\n// Sift-only operations\n///////////////////////////////////////////////////////////////////////////////////////////////\nStorage.prototype.delUser = function delUser (params) {\n  params.bucket = '_user.default';\n  this._logger.trace('[Storage::delUser]: ', params);\n  return opDel(_dbs.get(this), params, _siftGuid.get(this));\n};\n\nStorage.prototype.getUser = function getUser (params) {\n  params.bucket = '_user.default';\n  this._logger.trace('[Storage::getUser]: ', params);\n  return opGet(_dbs.get(this), params, _siftGuid.get(this));\n};\n\nStorage.prototype.putUser = function putUser (params) {\n  params.bucket = '_user.default';\n  this._logger.trace('[Storage::putUser]: ', params);\n  if (!params.kvs || params.kvs.length === 0) {\n    return Promise.reject('[Storage::putUser]: params.kvs undefined');\n  }\n  return opPut(_dbs.get(this), params, false, _siftGuid.get(this));\n};\n\nvar SiftController = function SiftController() {\n  this._proxy = self;\n  this.view = new Observable();\n  this.emailclient = new EmailClient(self);\n  this._registerMessageListeners();\n};\n\nSiftController.prototype.publish = function publish (topic, value) {\n  this._proxy.postMessage({\n    method: 'notifyView',\n    params: {\n      topic: topic,\n      value: value\n    }\n  });\n};\n\nSiftController.prototype._registerMessageListeners = function _registerMessageListeners () {\n    var this$1 = this;\n\n  if (!this._proxy) return;\n  this._proxy.onmessage = function (e) {\n    // console.log('[SiftController::onmessage]: ', e.data);\n    var method = e.data.method;\n    if (this$1['_' + method]) {\n      this$1['_' + method](e.data.params);\n    }\n    else {\n      // console.log('[SiftController:onmessage]: method not implemented: ', method);\n    }\n  };\n};\n\nSiftController.prototype._init = function _init (params) {\n  // console.log('[SiftController::_init]: ', params);\n  this.storage = new SiftStorage();\n  this.storage.init(\n    new Storage({\n      type: 'SIFT',\n      siftGuid: params.siftGuid,\n      accountGuid: params.accountGuid,\n      schema: params.dbSchema\n    })\n  );\n  // Initialise sift details\n  this._guid = params.siftGuid;\n  this._account = params.accountGuid;\n  // Init is done, post a message to the iframe_controller\n  this._proxy.postMessage({\n    method: 'initCallback',\n    result: params\n  });\n};\n\nSiftController.prototype._terminate = function _terminate () {\n  if (!this._proxy) return;\n  // console.log('[SiftController::_terminate]');\n  this._proxy.close();\n};\n\nSiftController.prototype._postCallback = function _postCallback (params, _result) {\n  this._proxy.postMessage({\n    method: 'loadViewCallback',\n    params: {\n      user: { guid: this._account },\n      sift: { guid: this._guid },\n      type: params.type,\n      sizeClass: params.sizeClass,\n      result: _result\n    }\n  });\n};\n\nSiftController.prototype._loadView = function _loadView (params) {\n    var this$1 = this;\n\n  // console.log('[SiftController::_loadView]: ', params);\n  if (!this.loadView) {\n    console.error('[SiftController::_loadView]: Sift controller must implement the loadView method');\n    return;\n  }\n  // Invoke loadView method\n  var result = this.loadView({\n    sizeClass: params.sizeClass,\n    type: params.type,\n    params: params.data\n  });\n  // console.log('[SiftController::_loadView] loadView result: ', result);\n  if (result.data && 'function' === typeof result.data.then) {\n    if (result.html) {\n      this._postCallback(params, { html: result.html });\n    }\n    result.data.then(function (data) {\n      this$1._postCallback(params, { html: result.html, data: data });\n    }).catch(function (error) {\n      console.error('[SiftController::loadView]: promise rejected: ', error);\n    });\n  }\n  else {\n    this._postCallback(params, result);\n  }\n};\n\nSiftController.prototype._storageUpdated = function _storageUpdated (params) {\n    var this$1 = this;\n\n  // console.log('[SiftController::_storageUpdated]: ', params);\n  // Notify the * listeners\n  this.storage.publish('*', params);\n  params.forEach(function (b) {\n    // Notify the bucket listeners.\n    // TODO: send the list of keys instead of \"[b]\"\n    this$1.storage.publish(b, [b]);\n  });\n};\n\nSiftController.prototype._notifyController = function _notifyController (params) {\n  // console.log('[SiftController::_notifyController]: ', params);\n  this.view.publish(params.topic, params.value);\n};\n\nSiftController.prototype._emailComposer = function _emailComposer (params) {\n  // console.log('[SiftController::_emailComposer]: ', params);\n  this.emailclient.publish(params.topic, params.value);\n};\n\n/**\n * SiftView\n */\nfunction registerSiftView(siftView) {\n  console.log('[Redsift::registerSiftView]: registered');\n}\n\nfunction createSiftView(instanceMethods) {\n  return _create(SiftView, instanceMethods);\n}\n\n/**\n * SiftController\n */\nfunction createSiftController(instanceMethods) {\n  return _create(SiftController, instanceMethods);\n}\n\nfunction registerSiftController(siftController) {\n  console.log('[Redsift::registerSiftController]: registered');\n}\n\n/**\n * EmailClientController\n */\nfunction createEmailClientController(instanceMethods) {\n  return _create(EmailClientController, instanceMethods);\n}\n\nfunction registerEmailClientController(emailClientController) {\n  console.log('[Redsift::registerEmailClientController]: registered');\n}\n\n/**\n * Local functions\n */\nfunction _create(Base, methods) {\n  var Creature = function() {\n    Base.call(this);\n    if(this.init && typeof this.init === 'function') {\n      this.init();\n    }\n  };\n  Creature.prototype = Object.create(Base.prototype);\n  Creature.constructor = Creature;\n  Object.keys(methods).forEach(function (method) {\n    Creature.prototype[method] = methods[method];\n  });\n  return new Creature();\n}\n\nexports.EmailClientController = EmailClientController;\nexports.SiftController = SiftController;\nexports.SiftStorage = SiftStorage;\nexports.SiftView = SiftView;\nexports.registerSiftView = registerSiftView;\nexports.createSiftView = createSiftView;\nexports.createSiftController = createSiftController;\nexports.registerSiftController = registerSiftController;\nexports.createEmailClientController = createEmailClientController;\nexports.registerEmailClientController = registerEmailClientController;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@redsift/sift-sdk-web/dist/js/sift-sdk.umd-es2015.js\n// module id = 1\n// module chunks = 0","/*global window, global*/\nvar util = require(\"util\")\nvar assert = require(\"assert\")\nvar now = require(\"date-now\")\n\nvar slice = Array.prototype.slice\nvar console\nvar times = {}\n\nif (typeof global !== \"undefined\" && global.console) {\n    console = global.console\n} else if (typeof window !== \"undefined\" && window.console) {\n    console = window.console\n} else {\n    console = {}\n}\n\nvar functions = [\n    [log, \"log\"],\n    [info, \"info\"],\n    [warn, \"warn\"],\n    [error, \"error\"],\n    [time, \"time\"],\n    [timeEnd, \"timeEnd\"],\n    [trace, \"trace\"],\n    [dir, \"dir\"],\n    [consoleAssert, \"assert\"]\n]\n\nfor (var i = 0; i < functions.length; i++) {\n    var tuple = functions[i]\n    var f = tuple[0]\n    var name = tuple[1]\n\n    if (!console[name]) {\n        console[name] = f\n    }\n}\n\nmodule.exports = console\n\nfunction log() {}\n\nfunction info() {\n    console.log.apply(console, arguments)\n}\n\nfunction warn() {\n    console.log.apply(console, arguments)\n}\n\nfunction error() {\n    console.warn.apply(console, arguments)\n}\n\nfunction time(label) {\n    times[label] = now()\n}\n\nfunction timeEnd(label) {\n    var time = times[label]\n    if (!time) {\n        throw new Error(\"No such label: \" + label)\n    }\n\n    var duration = now() - time\n    console.log(label + \": \" + duration + \"ms\")\n}\n\nfunction trace() {\n    var err = new Error()\n    err.name = \"Trace\"\n    err.message = util.format.apply(null, arguments)\n    console.error(err.stack)\n}\n\nfunction dir(object) {\n    console.log(util.inspect(object) + \"\\n\")\n}\n\nfunction consoleAssert(expression) {\n    if (!expression) {\n        var arr = slice.call(arguments, 1)\n        assert.ok(false, util.format.apply(null, arr))\n    }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/console-browserify/index.js\n// module id = 2\n// module chunks = 0","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  // Allow for deprecating things in the process of starting up.\n  if (isUndefined(global.process)) {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  if (process.noDeprecation === true) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexports.debuglog = function(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = require('inherits');\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/util/util.js\n// module id = 3\n// module chunks = 0","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/process/browser.js\n// module id = 4\n// module chunks = 0","module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/util/support/isBufferBrowser.js\n// module id = 5\n// module chunks = 0","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/util/~/inherits/inherits_browser.js\n// module id = 6\n// module chunks = 0","'use strict';\n\n// compare and isBuffer taken from https://github.com/feross/buffer/blob/680e9e5e488f22aac27599a57dc844a6315928dd/index.js\n// original notice:\n\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\nfunction compare(a, b) {\n  if (a === b) {\n    return 0;\n  }\n\n  var x = a.length;\n  var y = b.length;\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i];\n      y = b[i];\n      break;\n    }\n  }\n\n  if (x < y) {\n    return -1;\n  }\n  if (y < x) {\n    return 1;\n  }\n  return 0;\n}\nfunction isBuffer(b) {\n  if (global.Buffer && typeof global.Buffer.isBuffer === 'function') {\n    return global.Buffer.isBuffer(b);\n  }\n  return !!(b != null && b._isBuffer);\n}\n\n// based on node assert, original notice:\n\n// http://wiki.commonjs.org/wiki/Unit_Testing/1.0\n//\n// THIS IS NOT TESTED NOR LIKELY TO WORK OUTSIDE V8!\n//\n// Originally from narwhal.js (http://narwhaljs.org)\n// Copyright (c) 2009 Thomas Robinson <280north.com>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the 'Software'), to\n// deal in the Software without restriction, including without limitation the\n// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n// sell copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n// ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar util = require('util/');\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar pSlice = Array.prototype.slice;\nvar functionsHaveNames = (function () {\n  return function foo() {}.name === 'foo';\n}());\nfunction pToString (obj) {\n  return Object.prototype.toString.call(obj);\n}\nfunction isView(arrbuf) {\n  if (isBuffer(arrbuf)) {\n    return false;\n  }\n  if (typeof global.ArrayBuffer !== 'function') {\n    return false;\n  }\n  if (typeof ArrayBuffer.isView === 'function') {\n    return ArrayBuffer.isView(arrbuf);\n  }\n  if (!arrbuf) {\n    return false;\n  }\n  if (arrbuf instanceof DataView) {\n    return true;\n  }\n  if (arrbuf.buffer && arrbuf.buffer instanceof ArrayBuffer) {\n    return true;\n  }\n  return false;\n}\n// 1. The assert module provides functions that throw\n// AssertionError's when particular conditions are not met. The\n// assert module must conform to the following interface.\n\nvar assert = module.exports = ok;\n\n// 2. The AssertionError is defined in assert.\n// new assert.AssertionError({ message: message,\n//                             actual: actual,\n//                             expected: expected })\n\nvar regex = /\\s*function\\s+([^\\(\\s]*)\\s*/;\n// based on https://github.com/ljharb/function.prototype.name/blob/adeeeec8bfcc6068b187d7d9fb3d5bb1d3a30899/implementation.js\nfunction getName(func) {\n  if (!util.isFunction(func)) {\n    return;\n  }\n  if (functionsHaveNames) {\n    return func.name;\n  }\n  var str = func.toString();\n  var match = str.match(regex);\n  return match && match[1];\n}\nassert.AssertionError = function AssertionError(options) {\n  this.name = 'AssertionError';\n  this.actual = options.actual;\n  this.expected = options.expected;\n  this.operator = options.operator;\n  if (options.message) {\n    this.message = options.message;\n    this.generatedMessage = false;\n  } else {\n    this.message = getMessage(this);\n    this.generatedMessage = true;\n  }\n  var stackStartFunction = options.stackStartFunction || fail;\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, stackStartFunction);\n  } else {\n    // non v8 browsers so we can have a stacktrace\n    var err = new Error();\n    if (err.stack) {\n      var out = err.stack;\n\n      // try to strip useless frames\n      var fn_name = getName(stackStartFunction);\n      var idx = out.indexOf('\\n' + fn_name);\n      if (idx >= 0) {\n        // once we have located the function frame\n        // we need to strip out everything before it (and its line)\n        var next_line = out.indexOf('\\n', idx + 1);\n        out = out.substring(next_line + 1);\n      }\n\n      this.stack = out;\n    }\n  }\n};\n\n// assert.AssertionError instanceof Error\nutil.inherits(assert.AssertionError, Error);\n\nfunction truncate(s, n) {\n  if (typeof s === 'string') {\n    return s.length < n ? s : s.slice(0, n);\n  } else {\n    return s;\n  }\n}\nfunction inspect(something) {\n  if (functionsHaveNames || !util.isFunction(something)) {\n    return util.inspect(something);\n  }\n  var rawname = getName(something);\n  var name = rawname ? ': ' + rawname : '';\n  return '[Function' +  name + ']';\n}\nfunction getMessage(self) {\n  return truncate(inspect(self.actual), 128) + ' ' +\n         self.operator + ' ' +\n         truncate(inspect(self.expected), 128);\n}\n\n// At present only the three keys mentioned above are used and\n// understood by the spec. Implementations or sub modules can pass\n// other keys to the AssertionError's constructor - they will be\n// ignored.\n\n// 3. All of the following functions must throw an AssertionError\n// when a corresponding condition is not met, with a message that\n// may be undefined if not provided.  All assertion methods provide\n// both the actual and expected values to the assertion error for\n// display purposes.\n\nfunction fail(actual, expected, message, operator, stackStartFunction) {\n  throw new assert.AssertionError({\n    message: message,\n    actual: actual,\n    expected: expected,\n    operator: operator,\n    stackStartFunction: stackStartFunction\n  });\n}\n\n// EXTENSION! allows for well behaved errors defined elsewhere.\nassert.fail = fail;\n\n// 4. Pure assertion tests whether a value is truthy, as determined\n// by !!guard.\n// assert.ok(guard, message_opt);\n// This statement is equivalent to assert.equal(true, !!guard,\n// message_opt);. To test strictly for the value true, use\n// assert.strictEqual(true, guard, message_opt);.\n\nfunction ok(value, message) {\n  if (!value) fail(value, true, message, '==', assert.ok);\n}\nassert.ok = ok;\n\n// 5. The equality assertion tests shallow, coercive equality with\n// ==.\n// assert.equal(actual, expected, message_opt);\n\nassert.equal = function equal(actual, expected, message) {\n  if (actual != expected) fail(actual, expected, message, '==', assert.equal);\n};\n\n// 6. The non-equality assertion tests for whether two objects are not equal\n// with != assert.notEqual(actual, expected, message_opt);\n\nassert.notEqual = function notEqual(actual, expected, message) {\n  if (actual == expected) {\n    fail(actual, expected, message, '!=', assert.notEqual);\n  }\n};\n\n// 7. The equivalence assertion tests a deep equality relation.\n// assert.deepEqual(actual, expected, message_opt);\n\nassert.deepEqual = function deepEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected, false)) {\n    fail(actual, expected, message, 'deepEqual', assert.deepEqual);\n  }\n};\n\nassert.deepStrictEqual = function deepStrictEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected, true)) {\n    fail(actual, expected, message, 'deepStrictEqual', assert.deepStrictEqual);\n  }\n};\n\nfunction _deepEqual(actual, expected, strict, memos) {\n  // 7.1. All identical values are equivalent, as determined by ===.\n  if (actual === expected) {\n    return true;\n  } else if (isBuffer(actual) && isBuffer(expected)) {\n    return compare(actual, expected) === 0;\n\n  // 7.2. If the expected value is a Date object, the actual value is\n  // equivalent if it is also a Date object that refers to the same time.\n  } else if (util.isDate(actual) && util.isDate(expected)) {\n    return actual.getTime() === expected.getTime();\n\n  // 7.3 If the expected value is a RegExp object, the actual value is\n  // equivalent if it is also a RegExp object with the same source and\n  // properties (`global`, `multiline`, `lastIndex`, `ignoreCase`).\n  } else if (util.isRegExp(actual) && util.isRegExp(expected)) {\n    return actual.source === expected.source &&\n           actual.global === expected.global &&\n           actual.multiline === expected.multiline &&\n           actual.lastIndex === expected.lastIndex &&\n           actual.ignoreCase === expected.ignoreCase;\n\n  // 7.4. Other pairs that do not both pass typeof value == 'object',\n  // equivalence is determined by ==.\n  } else if ((actual === null || typeof actual !== 'object') &&\n             (expected === null || typeof expected !== 'object')) {\n    return strict ? actual === expected : actual == expected;\n\n  // If both values are instances of typed arrays, wrap their underlying\n  // ArrayBuffers in a Buffer each to increase performance\n  // This optimization requires the arrays to have the same type as checked by\n  // Object.prototype.toString (aka pToString). Never perform binary\n  // comparisons for Float*Arrays, though, since e.g. +0 === -0 but their\n  // bit patterns are not identical.\n  } else if (isView(actual) && isView(expected) &&\n             pToString(actual) === pToString(expected) &&\n             !(actual instanceof Float32Array ||\n               actual instanceof Float64Array)) {\n    return compare(new Uint8Array(actual.buffer),\n                   new Uint8Array(expected.buffer)) === 0;\n\n  // 7.5 For all other Object pairs, including Array objects, equivalence is\n  // determined by having the same number of owned properties (as verified\n  // with Object.prototype.hasOwnProperty.call), the same set of keys\n  // (although not necessarily the same order), equivalent values for every\n  // corresponding key, and an identical 'prototype' property. Note: this\n  // accounts for both named and indexed properties on Arrays.\n  } else if (isBuffer(actual) !== isBuffer(expected)) {\n    return false;\n  } else {\n    memos = memos || {actual: [], expected: []};\n\n    var actualIndex = memos.actual.indexOf(actual);\n    if (actualIndex !== -1) {\n      if (actualIndex === memos.expected.indexOf(expected)) {\n        return true;\n      }\n    }\n\n    memos.actual.push(actual);\n    memos.expected.push(expected);\n\n    return objEquiv(actual, expected, strict, memos);\n  }\n}\n\nfunction isArguments(object) {\n  return Object.prototype.toString.call(object) == '[object Arguments]';\n}\n\nfunction objEquiv(a, b, strict, actualVisitedObjects) {\n  if (a === null || a === undefined || b === null || b === undefined)\n    return false;\n  // if one is a primitive, the other must be same\n  if (util.isPrimitive(a) || util.isPrimitive(b))\n    return a === b;\n  if (strict && Object.getPrototypeOf(a) !== Object.getPrototypeOf(b))\n    return false;\n  var aIsArgs = isArguments(a);\n  var bIsArgs = isArguments(b);\n  if ((aIsArgs && !bIsArgs) || (!aIsArgs && bIsArgs))\n    return false;\n  if (aIsArgs) {\n    a = pSlice.call(a);\n    b = pSlice.call(b);\n    return _deepEqual(a, b, strict);\n  }\n  var ka = objectKeys(a);\n  var kb = objectKeys(b);\n  var key, i;\n  // having the same number of owned properties (keys incorporates\n  // hasOwnProperty)\n  if (ka.length !== kb.length)\n    return false;\n  //the same set of keys (although not necessarily the same order),\n  ka.sort();\n  kb.sort();\n  //~~~cheap key test\n  for (i = ka.length - 1; i >= 0; i--) {\n    if (ka[i] !== kb[i])\n      return false;\n  }\n  //equivalent values for every corresponding key, and\n  //~~~possibly expensive deep test\n  for (i = ka.length - 1; i >= 0; i--) {\n    key = ka[i];\n    if (!_deepEqual(a[key], b[key], strict, actualVisitedObjects))\n      return false;\n  }\n  return true;\n}\n\n// 8. The non-equivalence assertion tests for any deep inequality.\n// assert.notDeepEqual(actual, expected, message_opt);\n\nassert.notDeepEqual = function notDeepEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected, false)) {\n    fail(actual, expected, message, 'notDeepEqual', assert.notDeepEqual);\n  }\n};\n\nassert.notDeepStrictEqual = notDeepStrictEqual;\nfunction notDeepStrictEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected, true)) {\n    fail(actual, expected, message, 'notDeepStrictEqual', notDeepStrictEqual);\n  }\n}\n\n\n// 9. The strict equality assertion tests strict equality, as determined by ===.\n// assert.strictEqual(actual, expected, message_opt);\n\nassert.strictEqual = function strictEqual(actual, expected, message) {\n  if (actual !== expected) {\n    fail(actual, expected, message, '===', assert.strictEqual);\n  }\n};\n\n// 10. The strict non-equality assertion tests for strict inequality, as\n// determined by !==.  assert.notStrictEqual(actual, expected, message_opt);\n\nassert.notStrictEqual = function notStrictEqual(actual, expected, message) {\n  if (actual === expected) {\n    fail(actual, expected, message, '!==', assert.notStrictEqual);\n  }\n};\n\nfunction expectedException(actual, expected) {\n  if (!actual || !expected) {\n    return false;\n  }\n\n  if (Object.prototype.toString.call(expected) == '[object RegExp]') {\n    return expected.test(actual);\n  }\n\n  try {\n    if (actual instanceof expected) {\n      return true;\n    }\n  } catch (e) {\n    // Ignore.  The instanceof check doesn't work for arrow functions.\n  }\n\n  if (Error.isPrototypeOf(expected)) {\n    return false;\n  }\n\n  return expected.call({}, actual) === true;\n}\n\nfunction _tryBlock(block) {\n  var error;\n  try {\n    block();\n  } catch (e) {\n    error = e;\n  }\n  return error;\n}\n\nfunction _throws(shouldThrow, block, expected, message) {\n  var actual;\n\n  if (typeof block !== 'function') {\n    throw new TypeError('\"block\" argument must be a function');\n  }\n\n  if (typeof expected === 'string') {\n    message = expected;\n    expected = null;\n  }\n\n  actual = _tryBlock(block);\n\n  message = (expected && expected.name ? ' (' + expected.name + ').' : '.') +\n            (message ? ' ' + message : '.');\n\n  if (shouldThrow && !actual) {\n    fail(actual, expected, 'Missing expected exception' + message);\n  }\n\n  var userProvidedMessage = typeof message === 'string';\n  var isUnwantedException = !shouldThrow && util.isError(actual);\n  var isUnexpectedException = !shouldThrow && actual && !expected;\n\n  if ((isUnwantedException &&\n      userProvidedMessage &&\n      expectedException(actual, expected)) ||\n      isUnexpectedException) {\n    fail(actual, expected, 'Got unwanted exception' + message);\n  }\n\n  if ((shouldThrow && actual && expected &&\n      !expectedException(actual, expected)) || (!shouldThrow && actual)) {\n    throw actual;\n  }\n}\n\n// 11. Expected to throw an error:\n// assert.throws(block, Error_opt, message_opt);\n\nassert.throws = function(block, /*optional*/error, /*optional*/message) {\n  _throws(true, block, error, message);\n};\n\n// EXTENSION! This is annoying to write outside this module.\nassert.doesNotThrow = function(block, /*optional*/error, /*optional*/message) {\n  _throws(false, block, error, message);\n};\n\nassert.ifError = function(err) { if (err) throw err; };\n\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) {\n    if (hasOwn.call(obj, key)) keys.push(key);\n  }\n  return keys;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/assert/assert.js\n// module id = 7\n// module chunks = 0","module.exports = now\n\nfunction now() {\n    return new Date().getTime()\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/date-now/index.js\n// module id = 8\n// module chunks = 0","/*\n * Copyright (c) 2016, Jeff Hlywa (jhlywa@gmail.com)\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *----------------------------------------------------------------------------*/\n\n/* minified license below  */\n\n/* @license\n * Copyright (c) 2016, Jeff Hlywa (jhlywa@gmail.com)\n * Released under the BSD license\n * https://github.com/jhlywa/chess.js/blob/master/LICENSE\n */\n\nvar Chess = function(fen) {\n\n  /* jshint indent: false */\n\n  var BLACK = 'b';\n  var WHITE = 'w';\n\n  var EMPTY = -1;\n\n  var PAWN = 'p';\n  var KNIGHT = 'n';\n  var BISHOP = 'b';\n  var ROOK = 'r';\n  var QUEEN = 'q';\n  var KING = 'k';\n\n  var SYMBOLS = 'pnbrqkPNBRQK';\n\n  var DEFAULT_POSITION = 'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1';\n\n  var POSSIBLE_RESULTS = ['1-0', '0-1', '1/2-1/2', '*'];\n\n  var PAWN_OFFSETS = {\n    b: [16, 32, 17, 15],\n    w: [-16, -32, -17, -15]\n  };\n\n  var PIECE_OFFSETS = {\n    n: [-18, -33, -31, -14,  18, 33, 31,  14],\n    b: [-17, -15,  17,  15],\n    r: [-16,   1,  16,  -1],\n    q: [-17, -16, -15,   1,  17, 16, 15,  -1],\n    k: [-17, -16, -15,   1,  17, 16, 15,  -1]\n  };\n\n  var ATTACKS = [\n    20, 0, 0, 0, 0, 0, 0, 24,  0, 0, 0, 0, 0, 0,20, 0,\n     0,20, 0, 0, 0, 0, 0, 24,  0, 0, 0, 0, 0,20, 0, 0,\n     0, 0,20, 0, 0, 0, 0, 24,  0, 0, 0, 0,20, 0, 0, 0,\n     0, 0, 0,20, 0, 0, 0, 24,  0, 0, 0,20, 0, 0, 0, 0,\n     0, 0, 0, 0,20, 0, 0, 24,  0, 0,20, 0, 0, 0, 0, 0,\n     0, 0, 0, 0, 0,20, 2, 24,  2,20, 0, 0, 0, 0, 0, 0,\n     0, 0, 0, 0, 0, 2,53, 56, 53, 2, 0, 0, 0, 0, 0, 0,\n    24,24,24,24,24,24,56,  0, 56,24,24,24,24,24,24, 0,\n     0, 0, 0, 0, 0, 2,53, 56, 53, 2, 0, 0, 0, 0, 0, 0,\n     0, 0, 0, 0, 0,20, 2, 24,  2,20, 0, 0, 0, 0, 0, 0,\n     0, 0, 0, 0,20, 0, 0, 24,  0, 0,20, 0, 0, 0, 0, 0,\n     0, 0, 0,20, 0, 0, 0, 24,  0, 0, 0,20, 0, 0, 0, 0,\n     0, 0,20, 0, 0, 0, 0, 24,  0, 0, 0, 0,20, 0, 0, 0,\n     0,20, 0, 0, 0, 0, 0, 24,  0, 0, 0, 0, 0,20, 0, 0,\n    20, 0, 0, 0, 0, 0, 0, 24,  0, 0, 0, 0, 0, 0,20\n  ];\n\n  var RAYS = [\n     17,  0,  0,  0,  0,  0,  0, 16,  0,  0,  0,  0,  0,  0, 15, 0,\n      0, 17,  0,  0,  0,  0,  0, 16,  0,  0,  0,  0,  0, 15,  0, 0,\n      0,  0, 17,  0,  0,  0,  0, 16,  0,  0,  0,  0, 15,  0,  0, 0,\n      0,  0,  0, 17,  0,  0,  0, 16,  0,  0,  0, 15,  0,  0,  0, 0,\n      0,  0,  0,  0, 17,  0,  0, 16,  0,  0, 15,  0,  0,  0,  0, 0,\n      0,  0,  0,  0,  0, 17,  0, 16,  0, 15,  0,  0,  0,  0,  0, 0,\n      0,  0,  0,  0,  0,  0, 17, 16, 15,  0,  0,  0,  0,  0,  0, 0,\n      1,  1,  1,  1,  1,  1,  1,  0, -1, -1,  -1,-1, -1, -1, -1, 0,\n      0,  0,  0,  0,  0,  0,-15,-16,-17,  0,  0,  0,  0,  0,  0, 0,\n      0,  0,  0,  0,  0,-15,  0,-16,  0,-17,  0,  0,  0,  0,  0, 0,\n      0,  0,  0,  0,-15,  0,  0,-16,  0,  0,-17,  0,  0,  0,  0, 0,\n      0,  0,  0,-15,  0,  0,  0,-16,  0,  0,  0,-17,  0,  0,  0, 0,\n      0,  0,-15,  0,  0,  0,  0,-16,  0,  0,  0,  0,-17,  0,  0, 0,\n      0,-15,  0,  0,  0,  0,  0,-16,  0,  0,  0,  0,  0,-17,  0, 0,\n    -15,  0,  0,  0,  0,  0,  0,-16,  0,  0,  0,  0,  0,  0,-17\n  ];\n\n  var SHIFTS = { p: 0, n: 1, b: 2, r: 3, q: 4, k: 5 };\n\n  var FLAGS = {\n    NORMAL: 'n',\n    CAPTURE: 'c',\n    BIG_PAWN: 'b',\n    EP_CAPTURE: 'e',\n    PROMOTION: 'p',\n    KSIDE_CASTLE: 'k',\n    QSIDE_CASTLE: 'q'\n  };\n\n  var BITS = {\n    NORMAL: 1,\n    CAPTURE: 2,\n    BIG_PAWN: 4,\n    EP_CAPTURE: 8,\n    PROMOTION: 16,\n    KSIDE_CASTLE: 32,\n    QSIDE_CASTLE: 64\n  };\n\n  var RANK_1 = 7;\n  var RANK_2 = 6;\n  var RANK_3 = 5;\n  var RANK_4 = 4;\n  var RANK_5 = 3;\n  var RANK_6 = 2;\n  var RANK_7 = 1;\n  var RANK_8 = 0;\n\n  var SQUARES = {\n    a8:   0, b8:   1, c8:   2, d8:   3, e8:   4, f8:   5, g8:   6, h8:   7,\n    a7:  16, b7:  17, c7:  18, d7:  19, e7:  20, f7:  21, g7:  22, h7:  23,\n    a6:  32, b6:  33, c6:  34, d6:  35, e6:  36, f6:  37, g6:  38, h6:  39,\n    a5:  48, b5:  49, c5:  50, d5:  51, e5:  52, f5:  53, g5:  54, h5:  55,\n    a4:  64, b4:  65, c4:  66, d4:  67, e4:  68, f4:  69, g4:  70, h4:  71,\n    a3:  80, b3:  81, c3:  82, d3:  83, e3:  84, f3:  85, g3:  86, h3:  87,\n    a2:  96, b2:  97, c2:  98, d2:  99, e2: 100, f2: 101, g2: 102, h2: 103,\n    a1: 112, b1: 113, c1: 114, d1: 115, e1: 116, f1: 117, g1: 118, h1: 119\n  };\n\n  var ROOKS = {\n    w: [{square: SQUARES.a1, flag: BITS.QSIDE_CASTLE},\n        {square: SQUARES.h1, flag: BITS.KSIDE_CASTLE}],\n    b: [{square: SQUARES.a8, flag: BITS.QSIDE_CASTLE},\n        {square: SQUARES.h8, flag: BITS.KSIDE_CASTLE}]\n  };\n\n  var board = new Array(128);\n  var kings = {w: EMPTY, b: EMPTY};\n  var turn = WHITE;\n  var castling = {w: 0, b: 0};\n  var ep_square = EMPTY;\n  var half_moves = 0;\n  var move_number = 1;\n  var history = [];\n  var header = {};\n\n  /* if the user passes in a fen string, load it, else default to\n   * starting position\n   */\n  if (typeof fen === 'undefined') {\n    load(DEFAULT_POSITION);\n  } else {\n    load(fen);\n  }\n\n  function clear() {\n    board = new Array(128);\n    kings = {w: EMPTY, b: EMPTY};\n    turn = WHITE;\n    castling = {w: 0, b: 0};\n    ep_square = EMPTY;\n    half_moves = 0;\n    move_number = 1;\n    history = [];\n    header = {};\n    update_setup(generate_fen());\n  }\n\n  function reset() {\n    load(DEFAULT_POSITION);\n  }\n\n  function load(fen) {\n    var tokens = fen.split(/\\s+/);\n    var position = tokens[0];\n    var square = 0;\n\n    if (!validate_fen(fen).valid) {\n      return false;\n    }\n\n    clear();\n\n    for (var i = 0; i < position.length; i++) {\n      var piece = position.charAt(i);\n\n      if (piece === '/') {\n        square += 8;\n      } else if (is_digit(piece)) {\n        square += parseInt(piece, 10);\n      } else {\n        var color = (piece < 'a') ? WHITE : BLACK;\n        put({type: piece.toLowerCase(), color: color}, algebraic(square));\n        square++;\n      }\n    }\n\n    turn = tokens[1];\n\n    if (tokens[2].indexOf('K') > -1) {\n      castling.w |= BITS.KSIDE_CASTLE;\n    }\n    if (tokens[2].indexOf('Q') > -1) {\n      castling.w |= BITS.QSIDE_CASTLE;\n    }\n    if (tokens[2].indexOf('k') > -1) {\n      castling.b |= BITS.KSIDE_CASTLE;\n    }\n    if (tokens[2].indexOf('q') > -1) {\n      castling.b |= BITS.QSIDE_CASTLE;\n    }\n\n    ep_square = (tokens[3] === '-') ? EMPTY : SQUARES[tokens[3]];\n    half_moves = parseInt(tokens[4], 10);\n    move_number = parseInt(tokens[5], 10);\n\n    update_setup(generate_fen());\n\n    return true;\n  }\n\n  /* TODO: this function is pretty much crap - it validates structure but\n   * completely ignores content (e.g. doesn't verify that each side has a king)\n   * ... we should rewrite this, and ditch the silly error_number field while\n   * we're at it\n   */\n  function validate_fen(fen) {\n    var errors = {\n       0: 'No errors.',\n       1: 'FEN string must contain six space-delimited fields.',\n       2: '6th field (move number) must be a positive integer.',\n       3: '5th field (half move counter) must be a non-negative integer.',\n       4: '4th field (en-passant square) is invalid.',\n       5: '3rd field (castling availability) is invalid.',\n       6: '2nd field (side to move) is invalid.',\n       7: '1st field (piece positions) does not contain 8 \\'/\\'-delimited rows.',\n       8: '1st field (piece positions) is invalid [consecutive numbers].',\n       9: '1st field (piece positions) is invalid [invalid piece].',\n      10: '1st field (piece positions) is invalid [row too large].',\n      11: 'Illegal en-passant square',\n    };\n\n    /* 1st criterion: 6 space-seperated fields? */\n    var tokens = fen.split(/\\s+/);\n    if (tokens.length !== 6) {\n      return {valid: false, error_number: 1, error: errors[1]};\n    }\n\n    /* 2nd criterion: move number field is a integer value > 0? */\n    if (isNaN(tokens[5]) || (parseInt(tokens[5], 10) <= 0)) {\n      return {valid: false, error_number: 2, error: errors[2]};\n    }\n\n    /* 3rd criterion: half move counter is an integer >= 0? */\n    if (isNaN(tokens[4]) || (parseInt(tokens[4], 10) < 0)) {\n      return {valid: false, error_number: 3, error: errors[3]};\n    }\n\n    /* 4th criterion: 4th field is a valid e.p.-string? */\n    if (!/^(-|[abcdefgh][36])$/.test(tokens[3])) {\n      return {valid: false, error_number: 4, error: errors[4]};\n    }\n\n    /* 5th criterion: 3th field is a valid castle-string? */\n    if( !/^(KQ?k?q?|Qk?q?|kq?|q|-)$/.test(tokens[2])) {\n      return {valid: false, error_number: 5, error: errors[5]};\n    }\n\n    /* 6th criterion: 2nd field is \"w\" (white) or \"b\" (black)? */\n    if (!/^(w|b)$/.test(tokens[1])) {\n      return {valid: false, error_number: 6, error: errors[6]};\n    }\n\n    /* 7th criterion: 1st field contains 8 rows? */\n    var rows = tokens[0].split('/');\n    if (rows.length !== 8) {\n      return {valid: false, error_number: 7, error: errors[7]};\n    }\n\n    /* 8th criterion: every row is valid? */\n    for (var i = 0; i < rows.length; i++) {\n      /* check for right sum of fields AND not two numbers in succession */\n      var sum_fields = 0;\n      var previous_was_number = false;\n\n      for (var k = 0; k < rows[i].length; k++) {\n        if (!isNaN(rows[i][k])) {\n          if (previous_was_number) {\n            return {valid: false, error_number: 8, error: errors[8]};\n          }\n          sum_fields += parseInt(rows[i][k], 10);\n          previous_was_number = true;\n        } else {\n          if (!/^[prnbqkPRNBQK]$/.test(rows[i][k])) {\n            return {valid: false, error_number: 9, error: errors[9]};\n          }\n          sum_fields += 1;\n          previous_was_number = false;\n        }\n      }\n      if (sum_fields !== 8) {\n        return {valid: false, error_number: 10, error: errors[10]};\n      }\n    }\n\n    if ((tokens[3][1] == '3' && tokens[1] == 'w') ||\n        (tokens[3][1] == '6' && tokens[1] == 'b')) {\n          return {valid: false, error_number: 11, error: errors[11]};\n    }\n\n    /* everything's okay! */\n    return {valid: true, error_number: 0, error: errors[0]};\n  }\n\n  function generate_fen() {\n    var empty = 0;\n    var fen = '';\n\n    for (var i = SQUARES.a8; i <= SQUARES.h1; i++) {\n      if (board[i] == null) {\n        empty++;\n      } else {\n        if (empty > 0) {\n          fen += empty;\n          empty = 0;\n        }\n        var color = board[i].color;\n        var piece = board[i].type;\n\n        fen += (color === WHITE) ?\n                 piece.toUpperCase() : piece.toLowerCase();\n      }\n\n      if ((i + 1) & 0x88) {\n        if (empty > 0) {\n          fen += empty;\n        }\n\n        if (i !== SQUARES.h1) {\n          fen += '/';\n        }\n\n        empty = 0;\n        i += 8;\n      }\n    }\n\n    var cflags = '';\n    if (castling[WHITE] & BITS.KSIDE_CASTLE) { cflags += 'K'; }\n    if (castling[WHITE] & BITS.QSIDE_CASTLE) { cflags += 'Q'; }\n    if (castling[BLACK] & BITS.KSIDE_CASTLE) { cflags += 'k'; }\n    if (castling[BLACK] & BITS.QSIDE_CASTLE) { cflags += 'q'; }\n\n    /* do we have an empty castling flag? */\n    cflags = cflags || '-';\n    var epflags = (ep_square === EMPTY) ? '-' : algebraic(ep_square);\n\n    return [fen, turn, cflags, epflags, half_moves, move_number].join(' ');\n  }\n\n  function set_header(args) {\n    for (var i = 0; i < args.length; i += 2) {\n      if (typeof args[i] === 'string' &&\n          typeof args[i + 1] === 'string') {\n        header[args[i]] = args[i + 1];\n      }\n    }\n    return header;\n  }\n\n  /* called when the initial board setup is changed with put() or remove().\n   * modifies the SetUp and FEN properties of the header object.  if the FEN is\n   * equal to the default position, the SetUp and FEN are deleted\n   * the setup is only updated if history.length is zero, ie moves haven't been\n   * made.\n   */\n  function update_setup(fen) {\n    if (history.length > 0) return;\n\n    if (fen !== DEFAULT_POSITION) {\n      header['SetUp'] = '1';\n      header['FEN'] = fen;\n    } else {\n      delete header['SetUp'];\n      delete header['FEN'];\n    }\n  }\n\n  function get(square) {\n    var piece = board[SQUARES[square]];\n    return (piece) ? {type: piece.type, color: piece.color} : null;\n  }\n\n  function put(piece, square) {\n    /* check for valid piece object */\n    if (!('type' in piece && 'color' in piece)) {\n      return false;\n    }\n\n    /* check for piece */\n    if (SYMBOLS.indexOf(piece.type.toLowerCase()) === -1) {\n      return false;\n    }\n\n    /* check for valid square */\n    if (!(square in SQUARES)) {\n      return false;\n    }\n\n    var sq = SQUARES[square];\n\n    /* don't let the user place more than one king */\n    if (piece.type == KING &&\n        !(kings[piece.color] == EMPTY || kings[piece.color] == sq)) {\n      return false;\n    }\n\n    board[sq] = {type: piece.type, color: piece.color};\n    if (piece.type === KING) {\n      kings[piece.color] = sq;\n    }\n\n    update_setup(generate_fen());\n\n    return true;\n  }\n\n  function remove(square) {\n    var piece = get(square);\n    board[SQUARES[square]] = null;\n    if (piece && piece.type === KING) {\n      kings[piece.color] = EMPTY;\n    }\n\n    update_setup(generate_fen());\n\n    return piece;\n  }\n\n  function build_move(board, from, to, flags, promotion) {\n    var move = {\n      color: turn,\n      from: from,\n      to: to,\n      flags: flags,\n      piece: board[from].type\n    };\n\n    if (promotion) {\n      move.flags |= BITS.PROMOTION;\n      move.promotion = promotion;\n    }\n\n    if (board[to]) {\n      move.captured = board[to].type;\n    } else if (flags & BITS.EP_CAPTURE) {\n        move.captured = PAWN;\n    }\n    return move;\n  }\n\n  function generate_moves(options) {\n    function add_move(board, moves, from, to, flags) {\n      /* if pawn promotion */\n      if (board[from].type === PAWN &&\n         (rank(to) === RANK_8 || rank(to) === RANK_1)) {\n          var pieces = [QUEEN, ROOK, BISHOP, KNIGHT];\n          for (var i = 0, len = pieces.length; i < len; i++) {\n            moves.push(build_move(board, from, to, flags, pieces[i]));\n          }\n      } else {\n       moves.push(build_move(board, from, to, flags));\n      }\n    }\n\n    var moves = [];\n    var us = turn;\n    var them = swap_color(us);\n    var second_rank = {b: RANK_7, w: RANK_2};\n\n    var first_sq = SQUARES.a8;\n    var last_sq = SQUARES.h1;\n    var single_square = false;\n\n    /* do we want legal moves? */\n    var legal = (typeof options !== 'undefined' && 'legal' in options) ?\n                options.legal : true;\n\n    /* are we generating moves for a single square? */\n    if (typeof options !== 'undefined' && 'square' in options) {\n      if (options.square in SQUARES) {\n        first_sq = last_sq = SQUARES[options.square];\n        single_square = true;\n      } else {\n        /* invalid square */\n        return [];\n      }\n    }\n\n    for (var i = first_sq; i <= last_sq; i++) {\n      /* did we run off the end of the board */\n      if (i & 0x88) { i += 7; continue; }\n\n      var piece = board[i];\n      if (piece == null || piece.color !== us) {\n        continue;\n      }\n\n      if (piece.type === PAWN) {\n        /* single square, non-capturing */\n        var square = i + PAWN_OFFSETS[us][0];\n        if (board[square] == null) {\n            add_move(board, moves, i, square, BITS.NORMAL);\n\n          /* double square */\n          var square = i + PAWN_OFFSETS[us][1];\n          if (second_rank[us] === rank(i) && board[square] == null) {\n            add_move(board, moves, i, square, BITS.BIG_PAWN);\n          }\n        }\n\n        /* pawn captures */\n        for (j = 2; j < 4; j++) {\n          var square = i + PAWN_OFFSETS[us][j];\n          if (square & 0x88) continue;\n\n          if (board[square] != null &&\n              board[square].color === them) {\n              add_move(board, moves, i, square, BITS.CAPTURE);\n          } else if (square === ep_square) {\n              add_move(board, moves, i, ep_square, BITS.EP_CAPTURE);\n          }\n        }\n      } else {\n        for (var j = 0, len = PIECE_OFFSETS[piece.type].length; j < len; j++) {\n          var offset = PIECE_OFFSETS[piece.type][j];\n          var square = i;\n\n          while (true) {\n            square += offset;\n            if (square & 0x88) break;\n\n            if (board[square] == null) {\n              add_move(board, moves, i, square, BITS.NORMAL);\n            } else {\n              if (board[square].color === us) break;\n              add_move(board, moves, i, square, BITS.CAPTURE);\n              break;\n            }\n\n            /* break, if knight or king */\n            if (piece.type === 'n' || piece.type === 'k') break;\n          }\n        }\n      }\n    }\n\n    /* check for castling if: a) we're generating all moves, or b) we're doing\n     * single square move generation on the king's square\n     */\n    if ((!single_square) || last_sq === kings[us]) {\n      /* king-side castling */\n      if (castling[us] & BITS.KSIDE_CASTLE) {\n        var castling_from = kings[us];\n        var castling_to = castling_from + 2;\n\n        if (board[castling_from + 1] == null &&\n            board[castling_to]       == null &&\n            !attacked(them, kings[us]) &&\n            !attacked(them, castling_from + 1) &&\n            !attacked(them, castling_to)) {\n          add_move(board, moves, kings[us] , castling_to,\n                   BITS.KSIDE_CASTLE);\n        }\n      }\n\n      /* queen-side castling */\n      if (castling[us] & BITS.QSIDE_CASTLE) {\n        var castling_from = kings[us];\n        var castling_to = castling_from - 2;\n\n        if (board[castling_from - 1] == null &&\n            board[castling_from - 2] == null &&\n            board[castling_from - 3] == null &&\n            !attacked(them, kings[us]) &&\n            !attacked(them, castling_from - 1) &&\n            !attacked(them, castling_to)) {\n          add_move(board, moves, kings[us], castling_to,\n                   BITS.QSIDE_CASTLE);\n        }\n      }\n    }\n\n    /* return all pseudo-legal moves (this includes moves that allow the king\n     * to be captured)\n     */\n    if (!legal) {\n      return moves;\n    }\n\n    /* filter out illegal moves */\n    var legal_moves = [];\n    for (var i = 0, len = moves.length; i < len; i++) {\n      make_move(moves[i]);\n      if (!king_attacked(us)) {\n        legal_moves.push(moves[i]);\n      }\n      undo_move();\n    }\n\n    return legal_moves;\n  }\n\n  /* convert a move from 0x88 coordinates to Standard Algebraic Notation\n   * (SAN)\n   *\n   * @param {boolean} sloppy Use the sloppy SAN generator to work around over\n   * disambiguation bugs in Fritz and Chessbase.  See below:\n   *\n   * r1bqkbnr/ppp2ppp/2n5/1B1pP3/4P3/8/PPPP2PP/RNBQK1NR b KQkq - 2 4\n   * 4. ... Nge7 is overly disambiguated because the knight on c6 is pinned\n   * 4. ... Ne7 is technically the valid SAN\n   */\n  function move_to_san(move, sloppy) {\n\n    var output = '';\n\n    if (move.flags & BITS.KSIDE_CASTLE) {\n      output = 'O-O';\n    } else if (move.flags & BITS.QSIDE_CASTLE) {\n      output = 'O-O-O';\n    } else {\n      var disambiguator = get_disambiguator(move, sloppy);\n\n      if (move.piece !== PAWN) {\n        output += move.piece.toUpperCase() + disambiguator;\n      }\n\n      if (move.flags & (BITS.CAPTURE | BITS.EP_CAPTURE)) {\n        if (move.piece === PAWN) {\n          output += algebraic(move.from)[0];\n        }\n        output += 'x';\n      }\n\n      output += algebraic(move.to);\n\n      if (move.flags & BITS.PROMOTION) {\n        output += '=' + move.promotion.toUpperCase();\n      }\n    }\n\n    make_move(move);\n    if (in_check()) {\n      if (in_checkmate()) {\n        output += '#';\n      } else {\n        output += '+';\n      }\n    }\n    undo_move();\n\n    return output;\n  }\n\n  // parses all of the decorators out of a SAN string\n  function stripped_san(move) {\n    return move.replace(/=/,'').replace(/[+#]?[?!]*$/,'');\n  }\n\n  function attacked(color, square) {\n    for (var i = SQUARES.a8; i <= SQUARES.h1; i++) {\n      /* did we run off the end of the board */\n      if (i & 0x88) { i += 7; continue; }\n\n      /* if empty square or wrong color */\n      if (board[i] == null || board[i].color !== color) continue;\n\n      var piece = board[i];\n      var difference = i - square;\n      var index = difference + 119;\n\n      if (ATTACKS[index] & (1 << SHIFTS[piece.type])) {\n        if (piece.type === PAWN) {\n          if (difference > 0) {\n            if (piece.color === WHITE) return true;\n          } else {\n            if (piece.color === BLACK) return true;\n          }\n          continue;\n        }\n\n        /* if the piece is a knight or a king */\n        if (piece.type === 'n' || piece.type === 'k') return true;\n\n        var offset = RAYS[index];\n        var j = i + offset;\n\n        var blocked = false;\n        while (j !== square) {\n          if (board[j] != null) { blocked = true; break; }\n          j += offset;\n        }\n\n        if (!blocked) return true;\n      }\n    }\n\n    return false;\n  }\n\n  function king_attacked(color) {\n    return attacked(swap_color(color), kings[color]);\n  }\n\n  function in_check() {\n    return king_attacked(turn);\n  }\n\n  function in_checkmate() {\n    return in_check() && generate_moves().length === 0;\n  }\n\n  function in_stalemate() {\n    return !in_check() && generate_moves().length === 0;\n  }\n\n  function insufficient_material() {\n    var pieces = {};\n    var bishops = [];\n    var num_pieces = 0;\n    var sq_color = 0;\n\n    for (var i = SQUARES.a8; i<= SQUARES.h1; i++) {\n      sq_color = (sq_color + 1) % 2;\n      if (i & 0x88) { i += 7; continue; }\n\n      var piece = board[i];\n      if (piece) {\n        pieces[piece.type] = (piece.type in pieces) ?\n                              pieces[piece.type] + 1 : 1;\n        if (piece.type === BISHOP) {\n          bishops.push(sq_color);\n        }\n        num_pieces++;\n      }\n    }\n\n    /* k vs. k */\n    if (num_pieces === 2) { return true; }\n\n    /* k vs. kn .... or .... k vs. kb */\n    else if (num_pieces === 3 && (pieces[BISHOP] === 1 ||\n                                 pieces[KNIGHT] === 1)) { return true; }\n\n    /* kb vs. kb where any number of bishops are all on the same color */\n    else if (num_pieces === pieces[BISHOP] + 2) {\n      var sum = 0;\n      var len = bishops.length;\n      for (var i = 0; i < len; i++) {\n        sum += bishops[i];\n      }\n      if (sum === 0 || sum === len) { return true; }\n    }\n\n    return false;\n  }\n\n  function in_threefold_repetition() {\n    /* TODO: while this function is fine for casual use, a better\n     * implementation would use a Zobrist key (instead of FEN). the\n     * Zobrist key would be maintained in the make_move/undo_move functions,\n     * avoiding the costly that we do below.\n     */\n    var moves = [];\n    var positions = {};\n    var repetition = false;\n\n    while (true) {\n      var move = undo_move();\n      if (!move) break;\n      moves.push(move);\n    }\n\n    while (true) {\n      /* remove the last two fields in the FEN string, they're not needed\n       * when checking for draw by rep */\n      var fen = generate_fen().split(' ').slice(0,4).join(' ');\n\n      /* has the position occurred three or move times */\n      positions[fen] = (fen in positions) ? positions[fen] + 1 : 1;\n      if (positions[fen] >= 3) {\n        repetition = true;\n      }\n\n      if (!moves.length) {\n        break;\n      }\n      make_move(moves.pop());\n    }\n\n    return repetition;\n  }\n\n  function push(move) {\n    history.push({\n      move: move,\n      kings: {b: kings.b, w: kings.w},\n      turn: turn,\n      castling: {b: castling.b, w: castling.w},\n      ep_square: ep_square,\n      half_moves: half_moves,\n      move_number: move_number\n    });\n  }\n\n  function make_move(move) {\n    var us = turn;\n    var them = swap_color(us);\n    push(move);\n\n    board[move.to] = board[move.from];\n    board[move.from] = null;\n\n    /* if ep capture, remove the captured pawn */\n    if (move.flags & BITS.EP_CAPTURE) {\n      if (turn === BLACK) {\n        board[move.to - 16] = null;\n      } else {\n        board[move.to + 16] = null;\n      }\n    }\n\n    /* if pawn promotion, replace with new piece */\n    if (move.flags & BITS.PROMOTION) {\n      board[move.to] = {type: move.promotion, color: us};\n    }\n\n    /* if we moved the king */\n    if (board[move.to].type === KING) {\n      kings[board[move.to].color] = move.to;\n\n      /* if we castled, move the rook next to the king */\n      if (move.flags & BITS.KSIDE_CASTLE) {\n        var castling_to = move.to - 1;\n        var castling_from = move.to + 1;\n        board[castling_to] = board[castling_from];\n        board[castling_from] = null;\n      } else if (move.flags & BITS.QSIDE_CASTLE) {\n        var castling_to = move.to + 1;\n        var castling_from = move.to - 2;\n        board[castling_to] = board[castling_from];\n        board[castling_from] = null;\n      }\n\n      /* turn off castling */\n      castling[us] = '';\n    }\n\n    /* turn off castling if we move a rook */\n    if (castling[us]) {\n      for (var i = 0, len = ROOKS[us].length; i < len; i++) {\n        if (move.from === ROOKS[us][i].square &&\n            castling[us] & ROOKS[us][i].flag) {\n          castling[us] ^= ROOKS[us][i].flag;\n          break;\n        }\n      }\n    }\n\n    /* turn off castling if we capture a rook */\n    if (castling[them]) {\n      for (var i = 0, len = ROOKS[them].length; i < len; i++) {\n        if (move.to === ROOKS[them][i].square &&\n            castling[them] & ROOKS[them][i].flag) {\n          castling[them] ^= ROOKS[them][i].flag;\n          break;\n        }\n      }\n    }\n\n    /* if big pawn move, update the en passant square */\n    if (move.flags & BITS.BIG_PAWN) {\n      if (turn === 'b') {\n        ep_square = move.to - 16;\n      } else {\n        ep_square = move.to + 16;\n      }\n    } else {\n      ep_square = EMPTY;\n    }\n\n    /* reset the 50 move counter if a pawn is moved or a piece is captured */\n    if (move.piece === PAWN) {\n      half_moves = 0;\n    } else if (move.flags & (BITS.CAPTURE | BITS.EP_CAPTURE)) {\n      half_moves = 0;\n    } else {\n      half_moves++;\n    }\n\n    if (turn === BLACK) {\n      move_number++;\n    }\n    turn = swap_color(turn);\n  }\n\n  function undo_move() {\n    var old = history.pop();\n    if (old == null) { return null; }\n\n    var move = old.move;\n    kings = old.kings;\n    turn = old.turn;\n    castling = old.castling;\n    ep_square = old.ep_square;\n    half_moves = old.half_moves;\n    move_number = old.move_number;\n\n    var us = turn;\n    var them = swap_color(turn);\n\n    board[move.from] = board[move.to];\n    board[move.from].type = move.piece;  // to undo any promotions\n    board[move.to] = null;\n\n    if (move.flags & BITS.CAPTURE) {\n      board[move.to] = {type: move.captured, color: them};\n    } else if (move.flags & BITS.EP_CAPTURE) {\n      var index;\n      if (us === BLACK) {\n        index = move.to - 16;\n      } else {\n        index = move.to + 16;\n      }\n      board[index] = {type: PAWN, color: them};\n    }\n\n\n    if (move.flags & (BITS.KSIDE_CASTLE | BITS.QSIDE_CASTLE)) {\n      var castling_to, castling_from;\n      if (move.flags & BITS.KSIDE_CASTLE) {\n        castling_to = move.to + 1;\n        castling_from = move.to - 1;\n      } else if (move.flags & BITS.QSIDE_CASTLE) {\n        castling_to = move.to - 2;\n        castling_from = move.to + 1;\n      }\n\n      board[castling_to] = board[castling_from];\n      board[castling_from] = null;\n    }\n\n    return move;\n  }\n\n  /* this function is used to uniquely identify ambiguous moves */\n  function get_disambiguator(move, sloppy) {\n    var moves = generate_moves({legal: !sloppy});\n\n    var from = move.from;\n    var to = move.to;\n    var piece = move.piece;\n\n    var ambiguities = 0;\n    var same_rank = 0;\n    var same_file = 0;\n\n    for (var i = 0, len = moves.length; i < len; i++) {\n      var ambig_from = moves[i].from;\n      var ambig_to = moves[i].to;\n      var ambig_piece = moves[i].piece;\n\n      /* if a move of the same piece type ends on the same to square, we'll\n       * need to add a disambiguator to the algebraic notation\n       */\n      if (piece === ambig_piece && from !== ambig_from && to === ambig_to) {\n        ambiguities++;\n\n        if (rank(from) === rank(ambig_from)) {\n          same_rank++;\n        }\n\n        if (file(from) === file(ambig_from)) {\n          same_file++;\n        }\n      }\n    }\n\n    if (ambiguities > 0) {\n      /* if there exists a similar moving piece on the same rank and file as\n       * the move in question, use the square as the disambiguator\n       */\n      if (same_rank > 0 && same_file > 0) {\n        return algebraic(from);\n      }\n      /* if the moving piece rests on the same file, use the rank symbol as the\n       * disambiguator\n       */\n      else if (same_file > 0) {\n        return algebraic(from).charAt(1);\n      }\n      /* else use the file symbol */\n      else {\n        return algebraic(from).charAt(0);\n      }\n    }\n\n    return '';\n  }\n\n  function ascii() {\n    var s = '   +------------------------+\\n';\n    for (var i = SQUARES.a8; i <= SQUARES.h1; i++) {\n      /* display the rank */\n      if (file(i) === 0) {\n        s += ' ' + '87654321'[rank(i)] + ' |';\n      }\n\n      /* empty piece */\n      if (board[i] == null) {\n        s += ' . ';\n      } else {\n        var piece = board[i].type;\n        var color = board[i].color;\n        var symbol = (color === WHITE) ?\n                     piece.toUpperCase() : piece.toLowerCase();\n        s += ' ' + symbol + ' ';\n      }\n\n      if ((i + 1) & 0x88) {\n        s += '|\\n';\n        i += 8;\n      }\n    }\n    s += '   +------------------------+\\n';\n    s += '     a  b  c  d  e  f  g  h\\n';\n\n    return s;\n  }\n\n  // convert a move from Standard Algebraic Notation (SAN) to 0x88 coordinates\n  function move_from_san(move, sloppy) {\n    // strip off any move decorations: e.g Nf3+?!\n    var clean_move = stripped_san(move);\n\n    // if we're using the sloppy parser run a regex to grab piece, to, and from\n    // this should parse invalid SAN like: Pe2-e4, Rc1c4, Qf3xf7\n    if (sloppy) {\n      var matches = clean_move.match(/([pnbrqkPNBRQK])?([a-h][1-8])x?-?([a-h][1-8])([qrbnQRBN])?/);\n      if (matches) {\n        var piece = matches[1];\n        var from = matches[2];\n        var to = matches[3];\n        var promotion = matches[4];\n      }\n    }\n\n    var moves = generate_moves();\n    for (var i = 0, len = moves.length; i < len; i++) {\n      // try the strict parser first, then the sloppy parser if requested\n      // by the user\n      if ((clean_move === stripped_san(move_to_san(moves[i]))) ||\n          (sloppy && clean_move === stripped_san(move_to_san(moves[i], true)))) {\n        return moves[i];\n      } else {\n        if (matches &&\n            (!piece || piece.toLowerCase() == moves[i].piece) &&\n            SQUARES[from] == moves[i].from &&\n            SQUARES[to] == moves[i].to &&\n            (!promotion || promotion.toLowerCase() == moves[i].promotion)) {\n          return moves[i];\n        }\n      }\n    }\n\n    return null;\n  }\n\n\n  /*****************************************************************************\n   * UTILITY FUNCTIONS\n   ****************************************************************************/\n  function rank(i) {\n    return i >> 4;\n  }\n\n  function file(i) {\n    return i & 15;\n  }\n\n  function algebraic(i){\n    var f = file(i), r = rank(i);\n    return 'abcdefgh'.substring(f,f+1) + '87654321'.substring(r,r+1);\n  }\n\n  function swap_color(c) {\n    return c === WHITE ? BLACK : WHITE;\n  }\n\n  function is_digit(c) {\n    return '0123456789'.indexOf(c) !== -1;\n  }\n\n  /* pretty = external move object */\n  function make_pretty(ugly_move) {\n    var move = clone(ugly_move);\n    move.san = move_to_san(move, false);\n    move.to = algebraic(move.to);\n    move.from = algebraic(move.from);\n\n    var flags = '';\n\n    for (var flag in BITS) {\n      if (BITS[flag] & move.flags) {\n        flags += FLAGS[flag];\n      }\n    }\n    move.flags = flags;\n\n    return move;\n  }\n\n  function clone(obj) {\n    var dupe = (obj instanceof Array) ? [] : {};\n\n    for (var property in obj) {\n      if (typeof property === 'object') {\n        dupe[property] = clone(obj[property]);\n      } else {\n        dupe[property] = obj[property];\n      }\n    }\n\n    return dupe;\n  }\n\n  function trim(str) {\n    return str.replace(/^\\s+|\\s+$/g, '');\n  }\n\n  /*****************************************************************************\n   * DEBUGGING UTILITIES\n   ****************************************************************************/\n  function perft(depth) {\n    var moves = generate_moves({legal: false});\n    var nodes = 0;\n    var color = turn;\n\n    for (var i = 0, len = moves.length; i < len; i++) {\n      make_move(moves[i]);\n      if (!king_attacked(color)) {\n        if (depth - 1 > 0) {\n          var child_nodes = perft(depth - 1);\n          nodes += child_nodes;\n        } else {\n          nodes++;\n        }\n      }\n      undo_move();\n    }\n\n    return nodes;\n  }\n\n  return {\n    /***************************************************************************\n     * PUBLIC CONSTANTS (is there a better way to do this?)\n     **************************************************************************/\n    WHITE: WHITE,\n    BLACK: BLACK,\n    PAWN: PAWN,\n    KNIGHT: KNIGHT,\n    BISHOP: BISHOP,\n    ROOK: ROOK,\n    QUEEN: QUEEN,\n    KING: KING,\n    SQUARES: (function() {\n                /* from the ECMA-262 spec (section 12.6.4):\n                 * \"The mechanics of enumerating the properties ... is\n                 * implementation dependent\"\n                 * so: for (var sq in SQUARES) { keys.push(sq); } might not be\n                 * ordered correctly\n                 */\n                var keys = [];\n                for (var i = SQUARES.a8; i <= SQUARES.h1; i++) {\n                  if (i & 0x88) { i += 7; continue; }\n                  keys.push(algebraic(i));\n                }\n                return keys;\n              })(),\n    FLAGS: FLAGS,\n\n    /***************************************************************************\n     * PUBLIC API\n     **************************************************************************/\n    load: function(fen) {\n      return load(fen);\n    },\n\n    reset: function() {\n      return reset();\n    },\n\n    moves: function(options) {\n      /* The internal representation of a chess move is in 0x88 format, and\n       * not meant to be human-readable.  The code below converts the 0x88\n       * square coordinates to algebraic coordinates.  It also prunes an\n       * unnecessary move keys resulting from a verbose call.\n       */\n\n      var ugly_moves = generate_moves(options);\n      var moves = [];\n\n      for (var i = 0, len = ugly_moves.length; i < len; i++) {\n\n        /* does the user want a full move object (most likely not), or just\n         * SAN\n         */\n        if (typeof options !== 'undefined' && 'verbose' in options &&\n            options.verbose) {\n          moves.push(make_pretty(ugly_moves[i]));\n        } else {\n          moves.push(move_to_san(ugly_moves[i], false));\n        }\n      }\n\n      return moves;\n    },\n\n    in_check: function() {\n      return in_check();\n    },\n\n    in_checkmate: function() {\n      return in_checkmate();\n    },\n\n    in_stalemate: function() {\n      return in_stalemate();\n    },\n\n    in_draw: function() {\n      return half_moves >= 100 ||\n             in_stalemate() ||\n             insufficient_material() ||\n             in_threefold_repetition();\n    },\n\n    insufficient_material: function() {\n      return insufficient_material();\n    },\n\n    in_threefold_repetition: function() {\n      return in_threefold_repetition();\n    },\n\n    game_over: function() {\n      return half_moves >= 100 ||\n             in_checkmate() ||\n             in_stalemate() ||\n             insufficient_material() ||\n             in_threefold_repetition();\n    },\n\n    validate_fen: function(fen) {\n      return validate_fen(fen);\n    },\n\n    fen: function() {\n      return generate_fen();\n    },\n\n    pgn: function(options) {\n      /* using the specification from http://www.chessclub.com/help/PGN-spec\n       * example for html usage: .pgn({ max_width: 72, newline_char: \"<br />\" })\n       */\n      var newline = (typeof options === 'object' &&\n                     typeof options.newline_char === 'string') ?\n                     options.newline_char : '\\n';\n      var max_width = (typeof options === 'object' &&\n                       typeof options.max_width === 'number') ?\n                       options.max_width : 0;\n      var result = [];\n      var header_exists = false;\n\n      /* add the PGN header headerrmation */\n      for (var i in header) {\n        /* TODO: order of enumerated properties in header object is not\n         * guaranteed, see ECMA-262 spec (section 12.6.4)\n         */\n        result.push('[' + i + ' \\\"' + header[i] + '\\\"]' + newline);\n        header_exists = true;\n      }\n\n      if (header_exists && history.length) {\n        result.push(newline);\n      }\n\n      /* pop all of history onto reversed_history */\n      var reversed_history = [];\n      while (history.length > 0) {\n        reversed_history.push(undo_move());\n      }\n\n      var moves = [];\n      var move_string = '';\n\n      /* build the list of moves.  a move_string looks like: \"3. e3 e6\" */\n      while (reversed_history.length > 0) {\n        var move = reversed_history.pop();\n\n        /* if the position started with black to move, start PGN with 1. ... */\n        if (!history.length && move.color === 'b') {\n          move_string = move_number + '. ...';\n        } else if (move.color === 'w') {\n          /* store the previous generated move_string if we have one */\n          if (move_string.length) {\n            moves.push(move_string);\n          }\n          move_string = move_number + '.';\n        }\n\n        move_string = move_string + ' ' + move_to_san(move, false);\n        make_move(move);\n      }\n\n      /* are there any other leftover moves? */\n      if (move_string.length) {\n        moves.push(move_string);\n      }\n\n      /* is there a result? */\n      if (typeof header.Result !== 'undefined') {\n        moves.push(header.Result);\n      }\n\n      /* history should be back to what is was before we started generating PGN,\n       * so join together moves\n       */\n      if (max_width === 0) {\n        return result.join('') + moves.join(' ');\n      }\n\n      /* wrap the PGN output at max_width */\n      var current_width = 0;\n      for (var i = 0; i < moves.length; i++) {\n        /* if the current move will push past max_width */\n        if (current_width + moves[i].length > max_width && i !== 0) {\n\n          /* don't end the line with whitespace */\n          if (result[result.length - 1] === ' ') {\n            result.pop();\n          }\n\n          result.push(newline);\n          current_width = 0;\n        } else if (i !== 0) {\n          result.push(' ');\n          current_width++;\n        }\n        result.push(moves[i]);\n        current_width += moves[i].length;\n      }\n\n      return result.join('');\n    },\n\n    load_pgn: function(pgn, options) {\n      // allow the user to specify the sloppy move parser to work around over\n      // disambiguation bugs in Fritz and Chessbase\n      var sloppy = (typeof options !== 'undefined' && 'sloppy' in options) ?\n                    options.sloppy : false;\n\n      function mask(str) {\n        return str.replace(/\\\\/g, '\\\\');\n      }\n\n      function has_keys(object) {\n        for (var key in object) {\n          return true;\n        }\n        return false;\n      }\n\n      function parse_pgn_header(header, options) {\n        var newline_char = (typeof options === 'object' &&\n                            typeof options.newline_char === 'string') ?\n                            options.newline_char : '\\r?\\n';\n        var header_obj = {};\n        var headers = header.split(new RegExp(mask(newline_char)));\n        var key = '';\n        var value = '';\n\n        for (var i = 0; i < headers.length; i++) {\n          key = headers[i].replace(/^\\[([A-Z][A-Za-z]*)\\s.*\\]$/, '$1');\n          value = headers[i].replace(/^\\[[A-Za-z]+\\s\"(.*)\"\\]$/, '$1');\n          if (trim(key).length > 0) {\n            header_obj[key] = value;\n          }\n        }\n\n        return header_obj;\n      }\n\n      var newline_char = (typeof options === 'object' &&\n                          typeof options.newline_char === 'string') ?\n                          options.newline_char : '\\r?\\n';\n      var regex = new RegExp('^(\\\\[(.|' + mask(newline_char) + ')*\\\\])' +\n                             '(' + mask(newline_char) + ')*' +\n                             '1.(' + mask(newline_char) + '|.)*$', 'g');\n\n      /* get header part of the PGN file */\n      var header_string = pgn.replace(regex, '$1');\n\n      /* no info part given, begins with moves */\n      if (header_string[0] !== '[') {\n        header_string = '';\n      }\n\n      reset();\n\n      /* parse PGN header */\n      var headers = parse_pgn_header(header_string, options);\n      for (var key in headers) {\n        set_header([key, headers[key]]);\n      }\n\n      /* load the starting position indicated by [Setup '1'] and\n      * [FEN position] */\n      if (headers['SetUp'] === '1') {\n          if (!(('FEN' in headers) && load(headers['FEN']))) {\n            return false;\n          }\n      }\n\n      /* delete header to get the moves */\n      var ms = pgn.replace(header_string, '').replace(new RegExp(mask(newline_char), 'g'), ' ');\n\n      /* delete comments */\n      ms = ms.replace(/(\\{[^}]+\\})+?/g, '');\n\n      /* delete recursive annotation variations */\n      var rav_regex = /(\\([^\\(\\)]+\\))+?/g\n      while (rav_regex.test(ms)) {\n        ms = ms.replace(rav_regex, '');\n      }\n\n      /* delete move numbers */\n      ms = ms.replace(/\\d+\\.(\\.\\.)?/g, '');\n\n      /* delete ... indicating black to move */\n      ms = ms.replace(/\\.\\.\\./g, '');\n\n      /* delete numeric annotation glyphs */\n      ms = ms.replace(/\\$\\d+/g, '');\n\n      /* trim and get array of moves */\n      var moves = trim(ms).split(new RegExp(/\\s+/));\n\n      /* delete empty entries */\n      moves = moves.join(',').replace(/,,+/g, ',').split(',');\n      var move = '';\n\n      for (var half_move = 0; half_move < moves.length - 1; half_move++) {\n        move = move_from_san(moves[half_move], sloppy);\n\n        /* move not possible! (don't clear the board to examine to show the\n         * latest valid position)\n         */\n        if (move == null) {\n          return false;\n        } else {\n          make_move(move);\n        }\n      }\n\n      /* examine last move */\n      move = moves[moves.length - 1];\n      if (POSSIBLE_RESULTS.indexOf(move) > -1) {\n        if (has_keys(header) && typeof header.Result === 'undefined') {\n          set_header(['Result', move]);\n        }\n      }\n      else {\n        move = move_from_san(move, sloppy);\n        if (move == null) {\n          return false;\n        } else {\n          make_move(move);\n        }\n      }\n      return true;\n    },\n\n    header: function() {\n      return set_header(arguments);\n    },\n\n    ascii: function() {\n      return ascii();\n    },\n\n    turn: function() {\n      return turn;\n    },\n\n    move: function(move, options) {\n      /* The move function can be called with in the following parameters:\n       *\n       * .move('Nxb7')      <- where 'move' is a case-sensitive SAN string\n       *\n       * .move({ from: 'h7', <- where the 'move' is a move object (additional\n       *         to :'h8',      fields are ignored)\n       *         promotion: 'q',\n       *      })\n       */\n\n      // allow the user to specify the sloppy move parser to work around over\n      // disambiguation bugs in Fritz and Chessbase\n      var sloppy = (typeof options !== 'undefined' && 'sloppy' in options) ?\n                    options.sloppy : false;\n\n      var move_obj = null;\n\n      if (typeof move === 'string') {\n        move_obj = move_from_san(move, sloppy);\n      } else if (typeof move === 'object') {\n        var moves = generate_moves();\n\n        /* convert the pretty move object to an ugly move object */\n        for (var i = 0, len = moves.length; i < len; i++) {\n          if (move.from === algebraic(moves[i].from) &&\n              move.to === algebraic(moves[i].to) &&\n              (!('promotion' in moves[i]) ||\n              move.promotion === moves[i].promotion)) {\n            move_obj = moves[i];\n            break;\n          }\n        }\n      }\n\n      /* failed to find move */\n      if (!move_obj) {\n        return null;\n      }\n\n      /* need to make a copy of move because we can't generate SAN after the\n       * move is made\n       */\n      var pretty_move = make_pretty(move_obj);\n\n      make_move(move_obj);\n\n      return pretty_move;\n    },\n\n    undo: function() {\n      var move = undo_move();\n      return (move) ? make_pretty(move) : null;\n    },\n\n    clear: function() {\n      return clear();\n    },\n\n    put: function(piece, square) {\n      return put(piece, square);\n    },\n\n    get: function(square) {\n      return get(square);\n    },\n\n    remove: function(square) {\n      return remove(square);\n    },\n\n    perft: function(depth) {\n      return perft(depth);\n    },\n\n    square_color: function(square) {\n      if (square in SQUARES) {\n        var sq_0x88 = SQUARES[square];\n        return ((rank(sq_0x88) + file(sq_0x88)) % 2 === 0) ? 'light' : 'dark';\n      }\n\n      return null;\n    },\n\n    history: function(options) {\n      var reversed_history = [];\n      var move_history = [];\n      var verbose = (typeof options !== 'undefined' && 'verbose' in options &&\n                     options.verbose);\n\n      while (history.length > 0) {\n        reversed_history.push(undo_move());\n      }\n\n      while (reversed_history.length > 0) {\n        var move = reversed_history.pop();\n        if (verbose) {\n          move_history.push(make_pretty(move));\n        } else {\n          move_history.push(move_to_san(move));\n        }\n        make_move(move);\n      }\n\n      return move_history;\n    }\n\n  };\n};\n\n/* export Chess object if using node or any other CommonJS compatible\n * environment */\nif (typeof exports !== 'undefined') exports.Chess = Chess;\n/* export Chess object for any RequireJS compatible environment */\nif (typeof define !== 'undefined') define( function () { return Chess;  });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chess.js/chess.js\n// module id = 9\n// module chunks = 0"],"sourceRoot":""}